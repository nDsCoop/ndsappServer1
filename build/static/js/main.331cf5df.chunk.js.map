{"version":3,"sources":["components/Datetime1.js","images/imgWeather1.jpg","images/imgWeather3.jpg","images/dottedCircle.svg","images/CompletedTick.svg","images/DownloadIcon.svg","images/moon.svg","images/sun.svg","images/logo.svg","images/login-img.svg","components/RenderDatabase.js","components/DownloadDeleteDialog.js","images/Logosvg3.svg","components/GlobalState.js","pages/Home.js","pages/Error.js","components/Navbar.js","components/Content1.js","Context1.js","components/Detail1.js","components/Search1.js","components/StyleHero.js","components/data1.js/mockName.js","components/data1.js/mockWind.js","components/data1.js/mockCoord.js","components/data1.js/mockMain.js","components/App1.js","pages/Page1.js","apis/suggestSearch.js","components/header/AutoSearchResult.js","components/header/SearchBox.js","components/header/SimpleAppBar.js","components/player/PlayPauseButton.js","components/player/NextButton.js","components/player/PreviousButton.js","components/player/MusicArt.js","components/player/SleepTimer.js","components/player/TimelineController.js","components/player/VolumeController.js","components/RelatedVideos.js","components/player/MainPlayer.js","components/player/TopBar.js","components/player/MiniMusicArt.js","external/saveCountry.js","components/CurrentSection.js","components/SwipeMenu.js","components/sections/SettingsPage.js","components/App2.js","pages/Page2.js","pages/AuthWrapper.js","pages/PrivateRoute.js","pages/Login.js","components/UserBar.js","components/library/AudioVisualiser.js","components/library/AudioAnalyser.js","components/MainVideo.js","components/App3.js","service.js","realtime.js","store.js","pages/Page3.js","pages/Reconnect.js","App.js","serviceWorker.js","index.js","external/saveSong.js","components/Banner.js","components/Hero.js","images/logoSvg.svg","helpers/objectid.js","apis/youtubeSearch.js","apis/getAudioLink.js"],"names":["Datetime1","state","time","Date","this","setState","setInterval","loopTime","toLocaleDateString","toLocaleTimeString","Component","module","exports","currentId","DownloadDeleteDialog","isOpen","handleCancel","handleDelete","useState","checkBox","setCheckBox","React","useEffect","console","log","Dialog","style","zIndex","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","FormControlLabel","control","Checkbox","color","checked","onChange","e","target","value","label","DialogActions","Button","onClick","useSongMethods","songId","useContext","GlobalContext","dispatch","setSnackbarMsg","useCallback","data","type","snippet","deleteDialogState","setDeleteDialogState","dontAskPopup","setDontAskPopup","popupLocalState","localStorage","getItem","handleDownload","a","getAudioLink","get","params","res","downloadSong","status","deleteTheSong","deleteSongAudio","setItem","deleteDialogComponent","handleRemoveSong","RenderDatabase","props","songs","window","innerHeight","setWindowHeight","handleClick","song","videoId","audio","thumbnail","title","channelTitle","maxThumbnail","sdThumbnail","returnAnimatedClass","downloadState","renderResult","map","index","ListItem","alignItems","button","ListItemAvatar","Avatar","className","width","height","marginRight","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","CompletedTick","DownloadIcon","renderItem","forwardRef","row","ref","maxWidth","left","transform","Divider","itemCount","length","innerWidth","createContext","initialState","searchState","searchResult","relatedVideos","menuOpen","snackbarMsg","currentVideoSnippet","themeSelectValue","reducer","action","GlobalState","globalState","useReducer","Provider","children","Wrapper","styled","nav","Home","useAuth0","isAuthenticated","loginWithRedirect","logout","user","isLoading","useCookies","isUser","setCookie","path","Hero","Banner","subtitle","picture","name","nickname","toUpperCase","returnTo","location","origin","Error","to","Navbar","handleToggle","maxHeight","logo","Content1","Context1","Item","icon","unit","section","Detail1","coording","city","wind","weathers","temp","humidity","pressure","lat","lon","speed","items","toFixed","item","key","div","Search1","api_call","onSubmit","placeholder","aria-label","StyledHero","header","img","defaultImg1","defaultImg","App1","mock4","setWeather","mock3","setCoord","mock2","setWind","setImg","mock1","setCity","preventDefault","elements","url","req","axios","coord","main","Page1","create","baseURL","adapter","jsonpAdapter","hl","ds","client","AutoSearchResult","results","onSearchSelect","result","ListItemIcon","paddingLeft","Search","List","withRouter","history","URLSearchParams","search","setSearchState","setSearchResult","searchQuery","setSearchQuery","autoSearchData","setAutoSearch","ytSearchQuery","setYtSearchQuery","isPopperOpen","setPopper","push","pathname","getAutocomplete","suggestSearch","q","response","youtubeSearch","maxResults","searchYt","query","popperResult","Grid","container","justify","CircularProgress","IconButton","goBack","ArrowBack","lastChild","blur","onSearchSubmit","InputBase","fullWidth","autoFocus","Popper","anchorEl","document","getElementById","popperOptions","modifiers","preventOverflow","padding","placement","styles","root","flexGrow","textAlign","input","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","changeAppBar","listen","AppBar","position","Toolbar","Menu","PlayPauseButton","player","audioState","minimized","size","pause","play","stopPropagation","disableFocusRipple","disableRipple","Pause","fontSize","opacity","PauseCircleFilled","PlayArrow","PlayCircleFilled","onPlayNext","SkipNext","playPrevious","SkipPrevious","latestTouchTap","timerTimeout","MusicArt","rating","audioEl","swipeUpHandler","useSwipeable","onSwipedUp","dislikeSong","heartStyle","setHeartStyle","background","circleSvg","transition","artContainerStyle","likeSong","setTimeout","rateSong","marginTop","event","touchTap","getTime","currentTarget","isFastDblTouchTap","isDblTouchTap","drag","dragElastic","dragTransition","bounceStiffness","bounceDamping","dragConstraints","right","top","bottom","FavoriteTwoTone","boxShadow","URL","createObjectURL","imgProps","onLoad","naturalWidth","checkImg","align","re","RegExp","replace","shortTitle","PrettoSlider","withStyles","thumb","marginLeft","content","borderRadius","border","track","rail","Slider","MiniSlider","display","formatTime","secs","minutes","Math","floor","seconds","ceil","TimelineController","currentTime","setCurrentTime","setTimeInterval","clearInterval","max","duration","margin","newValue","VolumeController","setPlayerState","volume","setVolume","spacing","VolumeUp","xs","newVal","SleepTimer","relatedVideosVar","sliderValue","changeSliderValue","setOpen","checkbox","setCheckbox","isTimerSet","setIsTimerSet","setTimer","clearTimeout","sleepTimerObj","sleepTimerSettings","JSON","parse","getSleepTimeFromLocalStoarge","alwaysOn","Timer","TimerOff","stepSize","gradientColorFrom","gradientColorTo","knobRadius","progressWidth","circleWidth","Switch","labelPlacement","removeItem","stringify","setSleepTimeToLocalStorage","DownloadLoader","LinearProgress","TopBar","isSongDownloaded","setSongDownloaded","isSongDownloading","setSongDownloading","Reply","navigator","share","text","href","then","catch","error","DoneOutline","GetApp","ExpandMore","MiniMuiscArt","playPause","playNext","emptyPlayer","Close","RelatedVideos","toggleMaxPlaylist","setPlaylist","playerState","setRelatedVideos","setIsRepeatOn","isRepeatOn","spring","damping","stiffness","video","li","positionTransition","MusicVideo","slice","arry","reduce","acc","_","i","rnd","random","KeyboardArrowDown","KeyboardArrowUp","dense","country_code","mode","country","fetchCountry","previousLocation","MainPlayer","setCurrentVideoSnippet","isItFromPlaylist","setIsItFromPlaylist","setAudioState","setMinimized","setRating","isNextFromMini","setIsNextFromMini","body","querySelector","audioPlayer","useRef","current","setupMediaSessions","mediaSession","metadata","MediaMetadata","artist","artwork","sizes","setActionHandler","playAudio","getAudio","searchRelated","relatedToVideoId","setAudioSrcAndPlay","setVideoSnippet","err","hidden","currentIndex","findIndex","playerStyle","overflow","expandPlayer","modal","updateSongDB","updatePlayingSong","initPosition","containerRef","swipeHandlerMaximized","onSwipedDown","onSwiping","changedTouches","screenY","positionDifference","round","containerRefStyle","onSwiped","onSwipedRight","playTimeout","onSwipedLeft","swipeHandlerMin","fetchAndSetCurrentVideoSnippet","justifyContent","PreviousButton","NextButton","returnMaximizedPlayer","MiniMusicArt","returnMinimizedPlayer","onLoadStart","onLoadedData","onPlay","onPlaying","onPause","onEnded","autoPlay","SwipeMenu","setMenuOpen","setThemeSelectValue","isNight","setIsNight","changeTheme","theme","SwipeableDrawer","onOpen","sun","moon","animate","scale","rotate","Link","Settings","Feedback","FreeBreakfast","People","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Info","SettingsPage","selectComp","Box","m","Select","displayEmpty","MenuItem","Container","gutterBottom","FormControl","FormGroup","LoginPage","lazy","SearchResult","HomePage","FeedbackForm","PrivacyPage","DonatePage","ContributorsPage","CustomTab","indicator","labelIcon","Tabs","CustomTabs","selected","Tab","deferredPrompt","undefined","addEventListener","songsHistoryState","setSongsHistory","songsLikedState","setSongsLiked","songsDownloadedState","setSongsDownloaded","tabValue","setTabValue","updateCount","setUpdateCount","redirectState","setRedirectState","circularLoader","fetchSongs","getLikedSongs","getDownloadedSongs","getHistory","db","on","c","removeDownloadingState","continueToHome","prompt","userChoice","choiceResult","outcome","fallback","exact","render","videos","returnMainPlayer","indicatorColor","textColor","Favorite","History","defaultTheme","palette","blueGrey","third","blue","typography","useNextVariants","darkTheme","muiDarkTheme","createMuiTheme","muiDefaultTheme","App2","checkDarkMode","selectedTheme","hrs","getHours","useCheckDarkmode","userAgent","match","overscrollBehavior","classList","add","remove","CurrentSection","App","AuthWrapper","loadingGif","message","PrivateRoute","rest","Login","loginImg","UserBar","onClickOutSide","contains","showUserFrom","showUserMenu","store","isLogin","login","email","password","register","onTxtfieldChange","removeEventListener","me","getCurrentUser","profileImg","avatar","htmlFor","signOut","classNames","required","autoComplete","AudioVisualiser","canvas","createRef","draw","audioData","context","getContext","x","sliceWidth","lineWidth","strokeStyle","clearRect","beginPath","moveTo","y","lineTo","stroke","AudioAnalyser","Uint8Array","tick","bind","audioContext","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","connect","rafId","requestAnimationFrame","getByteTimeDomainData","cancelAnimationFrame","disconnect","MainVideo","sendToPeer","messageType","payload","socket","emit","socketID","createOffer","pc","offerToReceiveVideo","sdp","setLocalDescription","createAnswer","setRemoteDescription","desc","textref","RTCSessionDescription","addCandidate","candidates","forEach","candidate","addIceCandidate","RTCIceCandidate","localVideoref","remoteVideoref","io","success","RTCPeerConnection","onicecandidate","oniceconnectionstatechange","onaddstream","srcObject","stream","mediaDevices","getUserMedia","localStream","addStream","backgroundColor","App3","showEmoji","onDrop","files","formData","FormData","append","upLoadfile","sendTyping","activeChannel","getActiveChannel","lastUpdateTime","now","isTyping","addTyping","startCheckingTyping","typingInterval","stopCheckingTyping","renderChannelTitle","channel","members","getMembersFromChannel","names","join","handleOnClick","userId","channelId","addUserToChannel","searchUser","_onCreateChannel","currentUser","currentUserId","_id","ObjectID","toString","lastMessage","OrderedMap","messages","isNew","created","typing","set","onCreateNewChannel","scrollMessagesToBottom","messagesRef","scrollTop","scrollHeight","handleSubmit","newMessage","trim","messageId","addMessage","_onResi","showSearchUser","isShowGetAud","record","chunks","recoder","MediaRecorder","start","ondataavailable","namefile","File","substring","fileName","file","getTracks","stop","total","avatars","getMessagesFromChannel","channels","getChannels","usersList","getSearchUsers","searchTxt","startSearchUsers","setActiveChannelId","renderChannelAvatar","getRootProps","getInputProps","mess","controls","timing","onEmojiClick","emojiObject","emoji","skinTone","SKIN_TONE_MEDIUM_DARK","disabled","onKeyUp","keyCode","shiftKey","onMouseDown","startRecording","onMouseUp","stopRecording","member","isOnline","removeMemberFromChannel","apiURL","Service","endpoint","options","headers","post","Realtime","ws","isConnected","reconnect","msg","decoMessage","obj","typier","onUpdateTypestatus","onUpdateUserStatus","notify","onAddMessage","onAddChannel","update","users","online","addUserToCache","messageObject","setMessage","each","memberId","filter","msgId","addChannel","msgString","send","tokenId","getUserTokenId","WebSocket","onopen","authentication","onmessage","readMessage","onclose","onerror","Store","appComponent","app","service","activeChannelId","getUserFromLocalStorage","token","getTokenFromLocalStorage","realtime","fetchUserChannels","userToken","authorization","firstChannelId","fetchChannelMessages","loadUserAvatar","clear","accessToken","clearCacheData","setCurrentUser","setUserToken","Promise","resolve","reject","userEmail","toLower","valueSeq","isFetchMessages","first","loggedUser","sort","b","updated","forceUpdate","Page3","Page2","Errors","Boolean","hostname","ReactDOM","StrictMode","domain","clientId","redirectUri","serviceWorker","ready","registration","unregister","Dexie","version","stores","videoObj","timestamp","playbackTimes","orderBy","limit","reverse","toArray","songsByTimeStamp","where","between","minKey","maxKey","likedSongs","downloadedSongs","modify","thumbURL","all","fetchProxiedBlob","thumbnailBlob","songBlob","xhr","XMLHttpRequest","responseType","onload","statusText","abort","hero","defaultProps","MACHINE_ID","parseInt","checkForHexRegExp","Buffer","from","hasBufferType","_bsontype","generate","cacheHexString","__id","valid","isValid","createFromHexString","toHexString","hexTable","prototype","hexString","_Buffer","convertToHex","charCodeAt","get_inc","getInc","pid","process","inc","buffer","format","copy","inspect","toJSON","equals","otherId","toLowerCase","getTimestamp","setTime","createPk","createFromTime","decodeLookup","bytes","string","array","n","test","Object","defineProperty","enumerable","ObjectId","part","videoCategoryId","keys","split","selectRandomKey"],"mappings":"8JAEaA,EAAb,kDACI,aAAc,IAAD,8BACT,gBACKC,MAAQ,CAAEC,KAAM,IAAIC,MAFhB,EADjB,uDAOQC,KAAKC,SAAS,CACVH,KAAM,IAAIC,SARtB,0CAYK,IAAD,OACIG,aAAY,kBACR,EAAKC,aAAY,OAd7B,+BAkBQ,OACI,gDACcH,KAAKH,MAAMC,KAAKM,qBAD9B,IACqDJ,KAAKH,MAAMC,KAAKO,0BApBjF,GAA+BC,aA0BhBV,O,gEC5BfW,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,2FCqCvCC,E,iOCiBWC,EA7Cc,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EACvCC,oBAAS,GAD8B,mBAChEC,EADgE,KACtDC,EADsD,KAOvE,OAJAC,IAAMC,WAAU,WACdC,QAAQC,IAAIL,KACX,CAACA,IAGF,6BACE,kBAACM,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,MACjBC,KAAMb,EACNc,QAASb,EACTc,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBACb,uCAEH,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,QAASpB,EACTqB,SAAU,SAAAC,GAAC,OAAIrB,EAAYqB,EAAEC,OAAOH,UACpCI,MAAM,aAGVC,MAAM,qBAGV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS/B,EAAcsB,MAAM,WAArC,UAGA,kBAACQ,EAAA,EAAD,CAAQC,QAAS,kBAAM9B,EAAaE,IAAWmB,MAAM,WAArD,c,wBDNGU,EAAiB,SAAAC,GAAW,IAAD,EACfC,qBAAWC,KADI,yCAC3BC,EAD2B,KAGhCC,EAAiBhC,IAAMiC,aAC3B,SAAAC,GACEH,EAAS,CAAEI,KAAM,iBAAkBC,QAASF,MAE9C,CAACH,IAPmC,EAUYlC,oBAAS,GAVrB,mBAU/BwC,EAV+B,KAUZC,EAVY,OAWEzC,mBAAS,MAXX,mBAW/B0C,EAX+B,KAWjBC,EAXiB,KAatCvC,qBAAU,WAER,IAAMwC,EAA2D,SAAzCC,aAAaC,QAAQ,gBAC7CH,EAAgBC,KAEf,IAEH,IAAMG,EAAc,uCAAG,WAAMhB,GAAN,iBAAAiB,EAAA,sEAEHC,IAAaC,IAAI,QAAS,CAC1CC,OAAQ,CAAEpC,GAAIgB,KAHK,cAEfqB,EAFe,gBAOAC,YAAatB,EAAQqB,EAAIf,MAPzB,OAOfiB,EAPe,OAUrBnB,EAAe,mBACf9B,QAAQC,IAAI,cAAegD,GAXN,2CAAH,sDAmBdC,EAAa,uCAAG,WAAMtD,GAAN,SAAA+C,EAAA,sEACEQ,YAAgB7D,GADlB,cAEpB8C,GAAqB,GACrBN,EAAe,wBAEf9B,QAAQC,IAAIX,EAAWM,GAEnBA,IAXJ4C,aAAaY,QAAQ,gBAAgB,GACrCd,GAAgB,IAGI,2CAAH,sDAsBbe,EAAwBhB,EAAe,KAC3C,kBAAC,EAAD,CACE7C,OAAQ2C,EACR1C,aAAc,kBAAM2C,GAAqB,IACzC1C,aAAcwD,IAIlB,MAAO,CACLR,iBACAY,iBAnBuB,SAAA5B,GACvB1B,QAAQC,IAAI,sBACZX,EAAYoC,EAIZW,EAAea,IAAkBd,GAAqB,IActDc,gBACAb,eACAD,uBACAD,oBACAkB,0BAwIWE,UApIQ,SAAAC,GACrB,IAAMC,EAAQD,EAAMC,MADU,EAEP9B,qBAAWC,KAFJ,yCAEnBC,EAFmB,OAUUlC,mBAAS+D,OAAOC,aAV1B,mBAUTC,GAVS,WAYxBC,EAAc,SAAAC,GATW,IAAA9B,IAWN,CACrBtB,GAAIoD,EAAKC,QACTC,MAAOF,EAAKE,MACZC,UAAWH,EAAKG,UAChBC,MAAOJ,EAAKI,MACZC,aAAcL,EAAKK,aACnBC,aAAa,8BAAD,OAAgCN,EAAKC,QAArC,sBACZM,YAAY,8BAAD,OAAgCP,EAAKC,QAArC,mBAjBblC,EAAS,CAAEI,KAAM,yBAA0BC,QAASF,KAJxB,EA8B1BP,IAHFiB,EA3B4B,EA2B5BA,eACAY,EA5B4B,EA4B5BA,iBACAD,EA7B4B,EA6B5BA,sBAGIiB,EAAsB,SAAAR,GAC1B,MAA2B,gBAAvBA,EAAKS,eACPvE,QAAQC,IAAI6D,EAAKS,eACV,yBAEA,IAOXxE,qBAAU,WACR6D,EAAgBF,OAAOC,gBAGzB,IAAMa,EAAef,EAAMgB,KAAI,SAACX,EAAMY,GACpC,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,WAAW,aACXC,QAAM,EACNrD,QAAS,kBAAMqC,EAAYC,KAI3B,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,cACV7E,MAAO,CAAE8E,MAAO,OAAQC,OAAQ,OAAQC,YAAa,QACrDC,IAAKtB,EAAKI,MACVmB,IAAG,qCAAgCvB,EAAKC,QAArC,mBAIP,kBAACuB,EAAA,EAAD,CACEC,QAASzB,EAAKI,MACdsB,UACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACR7E,MAAM,eAEL+C,EAAKK,kBAMhB,yBACEa,UAAU,qBACVxD,QAAS,kBACPsC,EAAKE,MACDV,EAAiBQ,EAAKC,SACtBrB,EAAeoB,EAAKC,WAG1B,yBAAKiB,UAAU,mBAEb,yBACEA,UAAWV,EAAoBR,GAC/BuB,IAAKvB,EAAKE,MAAQ6B,IAAgBC,IAClCV,IAAI,2BAQVW,EAAajG,IAAMkG,YAAW,SAACC,EAAKC,GAAN,OAClC,yBACEA,IAAKA,EACL/F,MAAK,2BACA8F,EAAI9F,OADJ,IAEHgG,SAAU,SACVC,KAAM,MACNC,UAAW,sBAGZ7B,EAAayB,EAAIvB,OAClB,kBAAC4B,EAAA,EAAD,UAGJ,OACE,oCACGjD,EAED,kBAAC,IAAD,CACE6B,OAAQxB,OAAOC,YAAc,IAC7B4C,UAAW9C,EAAM+C,OACjBvB,MAAOvB,OAAO+C,YAEbV,M,kJErPT3G,EAAOC,QAAU,IAA0B,sC,gICE9BuC,EAAgB9B,IAAM4G,gBAE7BC,EAAe,CACnBC,YAAa,OACbC,aAAc,GACdC,cAAe,GACfC,UAAU,EACVC,aAAa,EACbC,oBAAqB,GACrBC,iBAAkB,WAGdC,EAAU,SAACzI,EAAO0I,GACtB,OAAQA,EAAOnF,MACb,IAAK,yBACH,OAAO,2BACFvD,GADL,IAEEuI,oBAAqBG,EAAOlF,UAGhC,IAAK,mBACH,OAAO,2BACFxD,GADL,IAEEoI,cAAeM,EAAOlF,UAG1B,IAAK,iBACH,OAAO,2BACFxD,GADL,IAEEsI,YAAaI,EAAOlF,UAGxB,IAAK,sBACH,OAAO,2BACFxD,GADL,IAEEwI,iBAAkBE,EAAOlF,UAG7B,IAAK,iBACH,OAAO,2BACFxD,GADL,IAEEkI,YAAaQ,EAAOlF,UAGxB,IAAK,kBACH,OAAO,2BACFxD,GADL,IAEEmI,aAAcO,EAAOlF,UAGzB,IAAK,cACH,OAAO,2BACFxD,GADL,IAEEqI,SAAUK,EAAOlF,UAGrB,QACE,OAAOxD,IAIA2I,EAAc,SAAA7D,GACzB,IAAM8D,EAAcC,qBAAWJ,EAASR,GACxC,OACE,kBAAC/E,EAAc4F,SAAf,CAAwBpG,MAAOkG,GAC5B9D,EAAMiE,Y,onBC1Db,IAiCOC,EAAUC,IAAOC,IAAV,KAqBCC,EAtDF,WAAO,IAAD,EAOXC,cALLC,EAFgB,EAEhBA,gBACAC,EAHgB,EAGhBA,kBACAC,EAJgB,EAIhBA,OACAC,EALgB,EAKhBA,KALgB,KAMhBC,UAE8BC,YAAW,CAAC,UAR1B,mBASTC,GATS,KASAN,GAAmBG,GAEnC,OADCI,EAVe,MAUL,OAAQ,CAACJ,QAAQ,CAAEK,KAAM,MAEpC,oCACA,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQvE,MAAM,oBAAoBwE,SAAS,uCAE3C,kBAAChB,EAAD,KACA,kBAACpB,EAAA,EAAD,CAAStB,UAAU,YAClBqD,GAAUH,EAAKS,SAAY,yBAAKtD,IAAK6C,EAAKS,QAASvD,IAAK8C,EAAKU,OAC7DP,GAAUH,EAAKU,MAAQ,wCAAa,gCAASV,EAAKW,SAASC,gBAC3DT,EAEA,kBAAC,IAAD,CAAMrD,UAAU,cAAcxD,QAAS,WAAOyG,EAAO,CAACc,SAASrF,OAAOsF,SAASC,WAA/E,UAEA,kBAAC,IAAD,CAAMjE,UAAU,cAAcxD,QAASwG,GAAvC,cCdUkB,E,uKAXZ,OACE,kBAACV,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQvE,MAAM,MAAMwE,SAAS,kBAC5B,kBAAC,IAAD,CAAMS,GAAG,QAAQnE,UAAU,eAA3B,qB,GALa7F,a,kCC6CLiK,E,4MA5Cd1K,MAAM,CACLc,QAAO,G,EAER6J,aAAe,WACf,EAAKvK,SAAS,CAACU,QAAQ,EAAKd,MAAMc,U,uDAKhC,OACC,yBAAKwF,UAAU,UACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACd,kBAAC,IAAD,CAAMmE,GAAG,KACR,yBAAKhJ,MAAO,CAACmJ,UAAW,SAAUnD,SAAU,UAAWnB,UAAU,UAAUK,IAAKkE,IAAMnE,IAAI,kBAE3F,4BAAQnD,KAAK,SACZ+C,UAAU,UACXxD,QAAS3C,KAAKwK,cAEd,kBAAC,IAAD,CAAcrE,UAAU,eAG1B,wBAAIA,UAAWnG,KAAKH,MAAMc,OAAS,qBAAuB,aACzD,4BACC,kBAAC,IAAD,CAAM2J,GAAG,KAAT,SAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,UAAT,iB,GAnCchK,a,0CCSNqK,EAXG,SAAChG,GACf,OACE,oCAAGA,EAAMiE,W,QCFAgC,EAFE/C,0B,85CCIjB,IAwDMgD,EAAO,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAMtI,EAA+B,EAA/BA,MAAOD,EAAwB,EAAxBA,MAAOL,EAAiB,EAAjBA,MAAO6I,EAAU,EAAVA,KACtC,OAAO,6BAAS5E,UAAU,QACxB,0BAAMA,UAAWjE,GAAQ4I,GACvB,2BAAIvI,EAAOwI,GACX,4BAAKvI,KAKPqG,EAAUC,IAAOkC,QAAV,KA4DEC,EA7HC,WAAO,IAAD,EAEuBnI,qBAAW8H,GAA7CM,EAFW,EAEXA,SAAUC,EAFC,EAEDA,KAAMC,EAFL,EAEKA,KAAMC,EAFX,EAEWA,SACrBC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,SAChBC,EAAaP,EAAbO,IAAKC,EAAQR,EAARQ,IACLC,EAAUP,EAAVO,MACD5B,EAAQoB,EAARpB,KAED6B,EAAQ,CACV,CACA/J,GAAI,EACFiJ,KAAK,kBAAC,IAAD,CAAe3E,UAAU,SAC9B3D,MAAM,OACND,OAAQ+I,EAAK,QAAQO,QAAQ,GAC7B3J,MAAO,OACP6I,KAAM,KAGV,CACElJ,GAAI,EACFiJ,KAAK,kBAAC,IAAD,CAAY3E,UAAU,SAC3B3D,MAAM,WACND,MAAOgJ,EACPrJ,MAAO,QACP6I,KAAM,KAEV,CACElJ,GAAI,EACFiJ,KAAK,kBAAC,IAAD,CAAa3E,UAAU,SAC5B3D,MAAM,WACND,MAAOiJ,EACPtJ,MAAO,SACP6I,KAAM,OAEV,CACElJ,GAAI,EACFiJ,KAAK,kBAAC,IAAD,CAAe3E,UAAU,SAC9B3D,MAAM,YACND,MAAOoJ,EACPzJ,MAAO,SACP6I,KAAM,QAGZ,OACI,6BAAS5E,UAAU,WACnB,oDAAyB,0BAAMA,UAAU,gBAAgB4D,IACzD,2CAAgB,0BAAM5D,UAAU,cAAcsF,EAA9B,IAAoCC,IACpD,kBAAC,EAAD,KACKE,EAAMhG,KAAI,SAACkG,GACZ,OAAO,kBAAC,EAAD,eAAMC,IAAKD,EAAKjK,IAAQiK,U,o3CCjD3C,IAWUjD,EAAUC,IAAOkD,IAAV,KAiDFC,EA5DC,WAAO,IACbC,EAAYpJ,qBAAW8H,GAAvBsB,SACN,OACI,kBAAC,EAAD,KACA,0BAAMC,SAAUD,EAAU/F,UAAU,gBACpC,2BAAO4D,KAAK,WAAW5D,UAAU,uBAAuB/C,KAAK,SAASgJ,YAAY,oBAAoBC,aAAW,WACjH,4BAAQlG,UAAU,uCAAuC/C,KAAK,UAA9D,a,4OCRR,IAOekJ,EAPIxD,IAAOyD,OAAV,KAEE,SAAA5H,GAAK,OAAKA,EAAM6H,IAAMC,IAAcC,OCNvC,GACf,KAAO,oBCAH,GACI,MAAQ,IAAI,IAAM,KCFX,GACX,IAAM,OAAO,IAAM,OCDR,GACX,KAAO,OAAO,WAAa,OAAO,SAAW,OAAO,SAAW,OAAO,SAAW,KAAK,SAAW,I,0SCsBrG,IAmDQ7D,GAAUC,IAAOkC,QAAV,MAYA2B,GA/DF,WAAO,IAAD,EACc7L,mBAAS8L,GADvB,mBACVvB,EADU,KACAwB,EADA,OAEY/L,mBAASgM,GAFrB,mBAEV5B,EAFU,KAEA6B,EAFA,OAGOjM,mBAASkM,GAHhB,mBAGV5B,EAHU,KAGJ6B,EAHI,OAIGnM,mBAAS,IAJZ,mBAIPoM,GAJO,aAKOpM,mBAASqM,GALhB,mBAKVhC,EALU,KAKJiC,EALI,KAMTlB,EAAQ,uCAAG,WAAM7J,GAAN,qBAAAyB,EAAA,6DACjBzB,EAAEgL,iBACIlD,EAAW9H,EAAEC,OAAOgL,SAASnD,SAAS5H,MAC5B,mCACVgL,EAJW,4DAIgDpD,EAJhD,kBAGD,oCAEVqD,EAAMC,IAAMzJ,IAAIuJ,GALL,SAMCC,EAND,OAMXtJ,EANW,OAQjB6I,EAAS7I,EAAIf,KAAKuK,OAClBT,EAAQ/I,EAAIf,KAAKiI,MACjByB,EAAW3I,EAAIf,KAAKwK,MACpBP,EAAQlJ,EAAIf,MAGRe,EAAIf,KAAKwK,KAAKrC,KAEhB4B,EAAO,4BAhBQ,4CAAH,sDA2Bd,OACE,kBAAC,EAAD,KACG,kBAAC,GAAD,KACC,yBAAK/G,UAAU,aACb,kBAACyD,EAAA,EAAD,CAAQvE,MAAM,cAAcwE,SAAS,4BACnC,kBAAC,EAAD,KACE,kBAAC,EAASlB,SAAV,CAAmBpG,MAAO,CAAE2J,WAAUb,WAAUH,WAAUE,OAAMD,SAC9D,kBAAC,EAAD,CAASe,SAAUA,IAClBb,GAAY,kBAAC,EAAD,aCxDhBuC,GALD,WACV,OACI,kBAAC,GAAD,O,mGCFOH,OAAMI,OAAO,CAC1BC,QAAS,qDACTC,QAASC,KACT/J,OAAQ,CACNgK,GAAI,KACJC,GAAI,KACJC,OAAQ,a,kDCYGC,GAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAC/B3I,EAAe,GAanB,OAZI0I,IACF1I,EAAe0I,EAAQzI,KAAI,SAAC2I,EAAQ1I,GAClC,OACE,kBAACC,GAAA,EAAD,CAAUiG,IAAKlG,EAAOlD,QAAS,kBAAM2L,EAAeC,EAAO,KAAKvI,QAAM,GACpE,kBAACwI,GAAA,EAAD,CAAclN,MAAO,CAAEmN,YAAa,SAClC,kBAACC,GAAA,EAAD,OAEF,kBAACjI,GAAA,EAAD,CAAcC,QAAS6H,EAAO,UAK/B,kBAACI,GAAA,EAAD,KAAOhJ,IC8LDiJ,gBA/LG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAS1E,EAAe,EAAfA,SACxBlG,EAAS,IAAI6K,gBAAgB3E,EAAS4E,QADC,EAGPjM,qBAAWC,MAHJ,mBAGlCgF,EAHkC,KAGlCA,YAAe/E,EAHmB,KAKrCgM,EAAiB9L,uBACrB,SAAAC,GACEH,EAAS,CAAEI,KAAM,iBAAkBC,QAASF,MAE9C,CAACH,IAGGiM,EAAkB/L,uBACtB,SAAAC,GACEhC,QAAQC,IAAI+B,GACZH,EAAS,CAAEI,KAAM,kBAAmBC,QAASF,MAE/C,CAACH,IAjBwC,EAoBLlC,mBAAS,IApBJ,mBAoBpCoO,EApBoC,KAoBvBC,EApBuB,OAqBHrO,mBAAS,IArBN,mBAqBpCsO,EArBoC,KAqBpBC,EArBoB,OAuBDvO,mBAAS,MAvBR,mBAuBpCwO,EAvBoC,KAuBrBC,EAvBqB,OA0BTzO,oBAAS,GA1BA,mBA0BpC0O,EA1BoC,KA0BtBC,EA1BsB,KA4B3CtO,QAAQC,IAAI,0BAGZ,IAAMkN,EAAiB,SAAAC,GACrBY,EAAeZ,GACfgB,EAAiBhB,GACjBS,EAAe,aACfH,EAAQa,KAAK,CAAEC,SAAU,UAAWZ,OAAO,MAAD,OAAQR,MAoB9CqB,EAAe,uCAAG,4BAAA9L,EAAA,sEACC+L,GAAc7L,IAAI,IAAK,CAC5CC,OAAQ,CACN6L,EAAGZ,KAHe,OAChBa,EADgB,OAMtBV,EAAcU,EAAS5M,KAAK,IANN,2CAAH,qDAUrBjC,qBAAU,WAYJoO,GAAmC,KAAlBA,GAXP,uCAAG,WAAMnM,GAAN,eAAAW,EAAA,sEACGkM,KAAchM,IAAI,UAAW,CAC7CC,OAAQ,CACN6L,EAAG3M,EACH8M,WAAY,MAJD,OACT/L,EADS,OAOf+K,EAAgB/K,EAAIf,KAAKyI,OACzBoD,EAAe,aARA,2CAAH,qDAYZkB,CAASZ,KAGV,CAACA,EAAeL,EAAiBD,IAEpC9N,qBAAU,WACRC,QAAQC,IAAI,eAAgB2G,KAC3B,CAACA,IAEJ7G,qBAAU,WAER,IAAMiP,EAAQlM,EAAOD,IAAI,KACrBmM,IACFZ,EAAiBY,GACjBhB,EAAegB,GACfnB,EAAe,aACf7N,QAAQC,IAAI,oBAAqB+O,MAclC,CAACnB,EAAgBO,IAIpB,IAAMa,EAAe,WACnB,OAAQrI,GACN,IAAK,YACH,OACE,kBAACsI,GAAA,EAAD,CACE/O,MAAO,CAAE+E,OAAQ,SACjBiK,WAAS,EACTC,QAAQ,SACRxK,WAAW,UAEX,kBAACyK,GAAA,EAAD,OAGN,IAAK,UACH,OACE,kBAAC,GAAD,CACEnC,QAASe,EACTd,eAAgBA,IAGtB,IAAK,YACHmB,GAAU,GAKdtO,QAAQC,IAAI,iBAGd,OACE,oCACE,kBAACqP,GAAA,EAAD,CACE9N,QAAS,WACPqM,EAAe,QACmB,YAA9BH,EAAQ1E,SAASwF,UACnBd,EAAQ6B,UAIZxO,MAAM,UACNmK,aAAW,QAEX,kBAACsE,GAAA,EAAD,OAEF,0BAAMrP,MAAO,CAAE8E,MAAO,QAAU+F,SAAU,SAAA9J,GAAC,OArHxB,SAAAA,GACrBA,EAAEgL,iBACFlM,QAAQC,IAAIiB,EAAEC,OAAOsO,WACrBvO,EAAEC,OAAOsO,UAAUA,UAAUC,OAC7B7B,EAAe,aACfO,EAAiBL,GACjBL,EAAQa,KAAK,CAAEC,SAAU,UAAWZ,OAAO,MAAD,OAAQG,KA+GD4B,CAAezO,KAC5D,kBAAC0O,GAAA,EAAD,CACEC,WAAS,EACT5E,YAAY,YACZ6E,WAAS,EACT3P,MAAO,CAAEY,MAAO,OAAQuM,YAAa,QACrClM,MAAO2M,EACP9M,SAlHS,SAAAC,GACf8M,EAAe9M,EAAEC,OAAOC,OACxBqN,KAkHMjN,QAAS,WACPqM,EAAe,WACfS,GAAU,OAKhB,kBAACyB,GAAA,EAAD,CACE/K,UAAU,eACV3E,KAAMgO,EACN2B,SAAUC,SAASC,eAAe,UAClCC,cAAe,CACbC,UAAW,CACTC,gBAAiB,CACfC,QAAS,KAIfC,UAAU,UAETtB,O,2DCvLHuB,GAAS,CACbC,KAAM,CACJC,SAAU,GAEZxM,MAAO,CACLyM,UAAW,SACX1L,MAAO,qBAET2L,MAAO,CACL7P,MAAO,SAIX,SAAS8P,GAAarN,GAAQ,IACpBiE,EAAajE,EAAbiE,SACFqJ,EAAUC,eAEhB,OACE,kBAACC,GAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKL,GACzCrJ,GA6EQgG,oBAxEf,SAAsBjK,GAAQ,IAAD,EACS7B,qBAAWC,MADpB,mBAClBgF,EADkB,KAClBA,YAAe/E,EADG,KAOrBgM,EAAiB/N,IAAMiC,aAC3B,SAAAC,GACEhC,QAAQC,IAAI+B,GACZH,EAAS,CAAEI,KAAM,iBAAkBC,QAASF,MAE9C,CAACH,IAiDH,OA9CA/B,IAAMC,WAAU,WAEd,IAAMqR,EAAe,WACnB,IAAM7I,EAAO/E,EAAMkK,QAAQ1E,SAASwF,SAElCX,EADW,YAATtF,EACa,YAEA,QAEjBvI,QAAQC,IAAI,uCAGdmR,IACiB5N,EAAMkK,QAAQ2D,QAAO,SAAArI,GACpCoI,SAED,CAACvD,EAAgBrK,EAAMkK,UA+BxB,oCACE,kBAACmD,GAAiBrN,EAChB,kBAAC8N,GAAA,EAAD,CAAQ5Q,GAAG,SAAS6Q,SAAS,UAC3B,kBAACC,GAAA,EAAD,KA/Bc,SAAhB5K,EAEA,oCACE,kBAAC0I,GAAA,EAAD,CACEvO,MAAM,UACNmK,aAAW,OACX1J,QAAS,kBArCCQ,GAqCiB,EApCnChC,QAAQC,IAAI+B,QACZH,EAAS,CAAEI,KAAM,cAAeC,QAASF,IAFvB,IAAAA,IAuCV,kBAACyP,GAAA,EAAD,OAEF,kBAAC/L,GAAA,EAAD,CAAYE,QAAQ,KAAK7E,MAAM,UAAUZ,MAAOqQ,GAAOtM,OAAvD,aAGA,kBAACoL,GAAA,EAAD,CACE9N,QAAS,kBAAMqM,EAAe,YAC9B9M,MAAM,UACNmK,aAAW,UAEX,kBAACqC,GAAA,EAAD,QAKC,kBAAC,GAAD,a,iDClDEmE,GAzCS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UA2B7C,OACE,kBAACvC,GAAA,EAAD,CACEwC,KAAK,QACL/Q,MAAO8Q,EAAY,YAAc,UACjC3G,aAAW,QACX1J,QA/BoB,SAAAN,GACH,YAAf0Q,EACFD,EAAOI,QACiB,WAAfH,GACTD,EAAOK,OAET9Q,EAAE+Q,mBA0BAC,oBAAoB,EACpBC,eAAe,GAvBE,YAAfP,EAEEC,EACK,kBAACO,GAAA,EAAD,CAAOjS,MAAO,CAAEkS,SAAU,MAAOC,QAAS,QAE5C,kBAACC,GAAA,EAAD,CAAmBpS,MAAO,CAAEkS,SAAU,OAAStR,MAAM,YACpC,WAAf6Q,GAA0C,WAAfA,EAChCC,EACK,kBAACW,GAAA,EAAD,CAAWrS,MAAO,CAAEkS,SAAU,MAAOC,QAAS,QAEhD,kBAACG,GAAA,EAAD,CAAkBtS,MAAO,CAAEkS,SAAU,OAAStR,MAAM,YACnC,YAAf6Q,EACF,kBAACvC,GAAA,EAAD,WADF,I,UCnBIqC,GARS,SAAC,GAAkB,IAAjBgB,EAAgB,EAAhBA,WACxB,OACE,kBAACpD,GAAA,EAAD,CAAYvO,MAAM,UAAUmK,aAAW,OAAO1J,QAASkR,GACrD,kBAACC,GAAA,EAAD,CAAUN,SAAS,Y,UCKVX,GARS,SAAC,GAAoB,IAAnBkB,EAAkB,EAAlBA,aACxB,OACE,kBAACtD,GAAA,EAAD,CAAYvO,MAAM,UAAUmK,aAAW,QAAQ1J,QAASoR,GACtD,kBAACC,GAAA,EAAD,CAAcR,SAAS,Y,2DCEzBS,GAAiB,CACnBnU,KAAM,EACNwC,OAAQ,MAiBV,ICGI4R,GD4HWC,GA/HE,SAAC,GAA+B,IAA7BhR,EAA4B,EAA5BA,KAAMiR,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1BC,EAAiBC,aAAa,CAClCC,WAAY,SAAAnS,GACVoS,OAH0C,EAOV3T,mBAAS,CAC3C0G,UAAW,aARiC,mBAOvCkN,EAPuC,KAO3BC,EAP2B,OAUI7T,mBAAS,CACzD8T,WAAW,OAAD,OAASC,KAAT,eACVpD,QAAS,OACTiB,SAAU,WACVoC,WAAY,kBACZtN,UAAW,kBAfiC,mBAUvCuN,EAVuC,KAiCxCC,GAjCwC,KAiC7B9R,uBAAY,WAE3ByR,EAAc,CAAEnN,UAAW,aAC3ByN,YAAW,WACTN,EAAc,CAAEnN,UAAW,eAC1B,OACF,CAACmN,KAEEF,EAAcvR,uBAAY,WAC9BgS,aAAS/R,EAAKtB,GAAI,YAClB8S,EAAc,CAAEnN,UAAW,aAC3ByN,YAAW,WACTN,EAAc,CAAEnN,UAAW,WAAYtF,MAAO,cAC7C,OACF,CAACyS,EAAexR,EAAKtB,KAExBZ,IAAMC,WAAU,WACC,UAAXkT,EACFY,IACoB,aAAXZ,EACTK,IAEAE,EAAc,CAAEnN,UAAW,eAE5B,CAAC4M,EAAQY,EAAUP,EAAaE,IAoBnC,OACE,kBAACtE,GAAA,EAAD,CACEC,WAAS,EACT+B,UAAU,SACV9B,QAAQ,SACRxK,WAAW,SACXzE,MAAO,CAAE6T,UAAW,QACpBxS,QAAS,SAAAN,IAlGf,SAAuB+S,GACrB,IAAMC,EAAW,CACfvV,MAAM,IAAIC,MAAOuV,UACjBhT,OAAQ8S,EAAMG,eAEVC,EACJH,EAAS/S,SAAW2R,GAAe3R,QACnC+S,EAASvV,KAAOmU,GAAenU,KAbP,IAe1B,OADAmU,GAAiBoB,EACVG,GA0FGC,CAAcpT,KAChB2S,IACAE,aAAS/R,EAAKtB,GAAI,QAASwS,MAK/B,kBAAC,KAAOrI,IAAR,eACE7F,UAAU,MACVuP,MAAI,EACJC,aAAa,EACbC,eAAgB,CAAEC,gBAAiB,IAAKC,cAAe,IACvDC,gBAAiB,CAAExO,KAAM,EAAGyO,MAAO,EAAGC,IAAK,EAAGC,OAAQ,GACtD5U,MAAOyT,GACHT,GAEJ,kBAAC6B,GAAA,EAAD,CAAiBhQ,UAAW,iBAAkB7E,MAAOoT,IACrD,kBAACyB,GAAA,EAAD,CAAiBhQ,UAAW,kBAAmB7E,MAAOoT,IACtD,kBAACxO,GAAA,EAAD,CACEC,UAAU,cACV7E,MAAO,CACL8E,MAAO,QACPC,OAAQ,QACR+P,UAAW,yBAEb7P,IAAI,kBACJC,IAzCFrD,EAAKiC,UACAP,OAAOwR,IAAIC,gBAAgBnT,EAAKiC,WAEhCjC,EAAKoC,aAuCRgR,SAAU,CAAEC,OAAQ,SAAAnU,GAAC,OAtFZ,SAAAA,GACXA,EAAEC,OAAOmU,aAAe,MAC1BpU,EAAEC,OAAOkE,IAAMrD,EAAKqC,aAoFSkR,CAASrU,QAGtC,6BACA,kBAACwE,GAAA,EAAD,CAAYE,QAAQ,KAAKZ,UAAU,gBAAgBwQ,MAAM,UAvD1C,SAAAxT,GAEjB,IAAMyT,EAAK,IAAIC,OAAO1T,EAAKmC,aAAe,UAAW,KAErD,OAAOnC,EAAKkC,MAAMyR,QAAQF,EAAI,IAoDzBG,CAAW5T,IAEd,wBAAIgD,UAAU,gBACXhD,EAAKmC,cAER,+B,kBElJA0R,GAAeC,aAAW,CAC9BrF,KAAM,CACJvL,OAAQ,EACRnE,MAAO,oBACP4P,UAAW,UAEboF,MAAO,CACLhV,MAAO,oBACPmE,OAAQ,GACRD,MAAO,GACP+O,WAAY,IACZgC,YAAa,EACb,YAAa,CACXC,QAAS,KACT/Q,OAAQ,UACRD,MAAO,UACPsM,SAAU,WACVlL,UAAW,aACX6P,aAAc,OACdC,OAAQ,cAGZC,MAAO,CACLlR,OAAQ,EACRgR,aAAc,GAEhBG,KAAM,CACJnR,OAAQ,EACRgR,aAAc,IA5BGJ,CA8BlBQ,MAEGC,GAAaT,aAAW,CAC5BrF,KAAM,CACJvL,OAAQ,EACRqM,SAAU,WACVwD,OAAQ,OACRhU,MAAO,QACPuP,QAAS,GAEXyF,MAAO,CACLS,QAAS,QAEXJ,MAAO,CACLlR,OAAQ,EACRgR,aAAc,GAEhBG,KAAM,CACJnR,OAAQ,EACRgR,aAAc,IAjBCJ,CAmBhBQ,MAEGG,GAAa,SAAAC,GACjB,IAAIC,EAAUC,KAAKC,MAAMH,EAAO,IAC5BI,EAAUF,KAAKG,KAAKL,EAAiB,GAAVC,GAI/B,OAFIG,EAAU,KAAIA,EAAO,WAAOA,IAE1B,GAAN,OAAUH,EAAV,YAAqBG,IAoERE,GAjEY,SAAC,GAAuC,IAArCpF,EAAoC,EAApCA,WAAYD,EAAwB,EAAxBA,OAAQE,EAAgB,EAAhBA,UAAgB,EACtClS,mBAAS,IAD6B,gCAE1BA,mBAAS,IAFiB,mBAEzDsX,EAFyD,KAE5CC,EAF4C,KAIhEnX,qBAAU,WAKR,IAAIoX,EASJ,OAbIxF,GACFuF,EAAevF,EAAOsF,aAIL,YAAfrF,EACFuF,EAAkBpY,aAAY,WAC5BmY,EAAevF,EAAOsF,aACtBjX,QAAQC,QACP,KAEHmX,cAAcD,GAET,kBAAMC,cAAcD,MAC1B,CAACvF,EAAYD,IAoBhB,OAAIE,EAEA,kBAAC0E,GAAD,CAAYnV,MAAO6V,EAAaI,IAAK1F,EAASA,EAAO2F,SAAW,IAIhE,yBAAKnX,MAAO,CAAEoX,OAAQ,SAAUtS,MAAO,QACrC,kBAACiK,GAAA,EAAD,CAAMC,WAAS,EAAC+B,UAAU,MAAM9B,QAAQ,iBACtC,kBAAC1J,GAAA,EAAD,CAAYE,QAAQ,QAAQZ,UAAU,aACnCyR,GAAWQ,IAEd,kBAACvR,GAAA,EAAD,CAAYE,QAAQ,QAAQZ,UAAU,aAvBxC2M,EACEA,EAAO2F,SACFb,GAAW9E,EAAO2F,UAElB,OAGF,IAqBL,kBAACzB,GAAD,CACEzU,MAAO6V,EACPhW,SApCa,SAACgT,EAAOuD,GAC3B7F,EAAOsF,YAAcO,EACrBN,EAAeM,IAmCTH,IAAK1F,EAASA,EAAO2F,SAAW,M,4DCjG3BG,GAvBU,SAAC,GAAgC,IAA9B9F,EAA6B,EAA7BA,OAA6B,KAArB+F,eACN/X,mBAAS,MADkB,mBAChDgY,EADgD,KACxCC,EADwC,KAUvD,OAEI,kBAAC1I,GAAA,EAAD,CAAMC,WAAS,EAAC0I,QAAS,EAAG1X,MAAO,CAAEgG,SAAU,QAASpF,MAAM,sBAC5D,kBAACmO,GAAA,EAAD,CAAMvE,MAAI,GACR,kBAACmN,GAAA,EAAD,CAAU3X,MAAO,CAACY,MAAM,wBAE1B,kBAACmO,GAAA,EAAD,CAAOvE,MAAI,EAACoN,GAAI,GACd,kBAACzB,GAAA,EAAD,CAAQnW,MAAO,CAACY,MAAM,qBAAuBK,MAAOuW,EAAQ1W,SAd/C,SAACC,EAAG8W,GACvBJ,EAAUI,GACVrG,EAAOgG,OAASK,EAAS,U,iGFyIdC,IGlHXzT,GCRA0T,GJ0HWD,GAjHf,YAAiC,IAAXtG,EAAU,EAAVA,OAAU,EACWhS,mBAAS,IADpB,mBACvBwY,EADuB,KACVC,EADU,OAENzY,oBAAS,GAFH,mBAEvBU,EAFuB,KAEjBgY,EAFiB,OAGE1Y,oBAAS,GAHX,mBAGvB2Y,EAHuB,KAGbC,EAHa,OAIM5Y,oBAAS,GAJf,mBAIvB6Y,EAJuB,KAIXC,EAJW,KAMxBC,EAAW,SAAA/Z,GACfqB,QAAQC,IAAI,+BAAgCtB,GAC5Cga,aAAa5F,IACb0F,GAAc,GACd1F,GAAee,YAAW,WACxBnC,EAAOI,UACC,GAAPpT,EAAY,MAgCjB,OA7BAoB,qBAAU,WACR,IAAM6Y,EA3B2B,WACnC,IAAMC,EAAqBrW,aAAaC,QAAQ,sBAChD,OAAOqW,KAAKC,MAAMF,GAyBMG,GAClBJ,IACFR,EAAkBQ,EAAcja,MAChC4Z,EAAYK,EAAcK,WAIxBL,GAAiBA,EAAcK,WACjCjZ,QAAQC,IAAI2Y,GACZF,EAASE,EAAcja,OAEzBqB,QAAQC,IAAI2Y,KACX,IAiBD,oCACGJ,EACC,kBAACU,GAAA,EAAD,CAAOnY,MAAM,UAAUS,QAAS,kBAAM6W,GAAQ,MAE9C,kBAACc,GAAA,EAAD,CAAUpY,MAAM,UAAUS,QAAS,kBAAM6W,GAAQ,MAEnD,kBAACnY,GAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,MACjBC,KAAMA,EACNC,QAAS,kBAAM+X,GAAQ,IACvB9X,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACkF,GAAA,EAAD,CACEE,QAAQ,KACR7E,MAAM,UACNyU,MAAM,SACNrV,MAAO,CAAE6T,UAAW,SAJtB,qBAQA,yBAAKhP,UAAU,aACb,yBAAKA,UAAU,iBACZmT,EACD,yBAAKnT,UAAU,UAAf,YAEF,kBAAC,gBAAD,CACE5D,MAAO+W,EACPiB,SAAU,EACVnY,SAAU,SAAAG,GAAK,OAAIgX,EAAkBhX,IACrC0Q,KAAM,IACNuF,IAAK,IACLgC,kBAAkB,UAClBC,gBAAgB,UAChBC,WAAY,GACZC,cAAe,GACfC,YAAa,MAIjB,kBAACnY,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,CACEQ,MAAM,YACNP,QACE,kBAAC6Y,GAAA,EAAD,CACE1Y,QAASsX,EACTrX,SAAU,SAAAC,GAAC,OAAIqX,EAAYrX,EAAEC,OAAOH,UACpCI,MAAM,oBACNL,MAAM,YAGVM,MAAM,SACNsY,eAAe,MACfxZ,MAAO,CAAEY,MAAO,aAElB,kBAACQ,GAAA,EAAD,CAAQR,MAAM,UAAUS,QA9DX,WA3CrBgB,aAAaoX,WAAW,sBA6CtBnB,GAAc,GACdJ,GAAQ,KA2DF,UAIA,kBAAC9W,GAAA,EAAD,CAAQR,MAAM,UAAUS,QA1ET,YA/CU,SAAC7C,EAAMsa,GACxC,IAAMJ,EAAqBC,KAAKe,UAAU,CAAElb,KAAMA,EAAMsa,SAAUA,IAElEzW,aAAaY,QAAQ,qBAAsByV,GA6CzCiB,CAA2B3B,EAAaG,GAGxCD,GAAQ,GACRK,EAASP,KAqEH,WKjHJ4B,GAAiBjE,aAAW,CAChCrF,KAAM,CACJvL,OAAQ,EACRD,MAAO,MACPsS,OAAQ,SACRlR,UAAW,sBALQyP,CAOpBkE,MA4FYC,GA1FA,SAAC,GAA+C,IAA7CnW,EAA4C,EAA5CA,KAAM6N,EAAsC,EAAtCA,OAAQ+F,EAA8B,EAA9BA,eACtB1Q,GADoD,EAAd0G,QACtB/L,qBAAWC,MAA3BoF,aADoD,EAEdrH,oBAAS,GAFK,mBAErDua,EAFqD,KAEnCC,EAFmC,OAGZxa,oBAAS,GAHG,mBAGrDya,EAHqD,KAGlCC,EAHkC,OASxD5Y,4BAHFiB,EAN0D,EAM1DA,eACAY,EAP0D,EAO1DA,iBACAD,EAR0D,EAQ1DA,sBAGFtD,qBAAU,YACY,oBAAhBiH,GAAqClD,EAAKE,SAC5CmW,GAAkB,GAClBE,GAAmB,MAEpB,CAACrT,IAqBJ,OACE,kBAACkI,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR8B,UAAU,MACV/Q,MAAO,CACLmQ,QAAS,UACT0D,UAAW,OACXzC,SAAU,WACVuD,IAAK,MAGP,kBAAC,GAAD,CAAkBnD,OAAQA,IACzBtO,EACD,kBAACiX,GAAA,EAAD,CACEna,MAAO,CAAEkG,UAAW,gCACpB7E,QAjCY,WACZ+Y,UAAUC,OACZD,UACGC,MAAM,CACLtW,MAAO,kBACPuW,KAAK,iBAAD,OAAmB3W,EAAKI,MAAxB,iBACJkI,IAAK1I,OAAOsF,SAAS0R,OAEtBC,MAAK,kBAAM3a,QAAQC,IAAI,uBACvB2a,OAAM,SAAAC,GAAK,OAAI7a,QAAQC,IAAI,gBAAiB4a,OAyB7C9Z,MAAM,YAGR,kBAAC,GAAD,CAAY4Q,OAAQA,IAEpB,6BACGuI,EACC,kBAACY,GAAA,EAAD,CACE/Z,MAAM,UACNS,QAAS,kBAAM8B,EAAiBQ,EAAKpD,OAGvC,oCACE,kBAACqa,GAAA,EAAD,CACEha,MAAM,UACNS,QAAS,WACPkB,EAAeoB,EAAKpD,IACpB2Z,GAAmB,OAK1BD,EAAoB,kBAACL,GAAD,CAAgBhZ,MAAM,YAAe,MAI5D,kBAACia,GAAA,EAAD,CACExZ,QAhDiB,WACrBkW,EAAe,cAgDX3W,MAAM,UACNsR,SAAS,QACTlS,MAAO,CAAEkG,UAAW,wB,UCrEb4U,I,OAxCM,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWlZ,EAAkC,EAAlCA,KAAMmZ,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAUjD,OACE,yBAAKpW,UAAW,iBACd,yBAAKA,UAAW,mBACd,yBAAKA,UAAU,WACb,kBAACU,GAAA,EAAD,CAAYE,QAAQ,SAAS5D,EAAKkC,OAClC,kBAACwB,GAAA,EAAD,CAAYE,QAAQ,SAAS5D,EAAKmC,eAEpC,yBAAKa,UAAU,WACb,kBAAC2N,GAAA,EAAD,CAAUnR,QAAS2Z,IACnB,kBAACE,GAAA,EAAD,CAAO7Z,QAAS4Z,KAElB,yBAAKpW,UAAW,oBACd,yBAAKA,UAAW,WACd,yBACEA,UAAW,aACXK,IAtBNrD,EAAKiC,UACAP,OAAOwR,IAAIC,gBAAgBnT,EAAKiC,WAEhCjC,EAAKqC,YAoBJe,IAAI,cAEN,kBAAC,GAAD,CACEuM,OAAQuJ,EAAUvJ,OAClBE,UAAWqJ,EAAUrJ,UACrBD,WAAYsJ,EAAUtJ,mB,qEH0GrB0J,GAlGO,SAAC,GAQhB,IAPLC,EAOI,EAPJA,kBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,YACA3U,EAII,EAJJA,cACA4U,EAGI,EAHJA,iBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,WACI,EACmBja,qBAAWC,MAD9B,0CACOC,EADP,KASEga,EAAS,CACb5Z,KAAM,SACN6Z,QAAS,GACTC,UAAW,KAEPlY,EAAc,SAAAmY,GAZW,IAAAha,IAcN,CACrBtB,GAAIsb,EAAMtb,GAAGqD,QACbG,MAAO8X,EAAM9Z,QAAQgC,MACrBC,aAAc6X,EAAM9Z,QAAQiC,aAC5BC,aAAa,8BAAD,OAAgC4X,EAAMtb,GAAGqD,QAAzC,sBACZM,YAAY,8BAAD,OAAgC2X,EAAMtb,GAAGqD,QAAzC,mBAlBblC,EAAS,CAAEI,KAAM,yBAA0BC,QAASF,IAqBpDwZ,KAGF,KAAI1U,EAAcN,OAAS,GAwBzB,OAAO,kBAACwT,GAAA,EAAD,MAvBPxV,GAAesC,EAAcrC,KAAI,SAAAX,GAC/B,OACE,kBAAC,KAAOmY,GAAR,CAAWrR,IAAK9G,EAAKpD,GAAGqD,QAASmY,mBAAoBL,GACnD,kBAAClX,GAAA,EAAD,CAEEE,QAAM,EACNrD,QAAS,kBAAMqC,EAAYC,KAK3B,kBAACuJ,GAAA,EAAD,KACE,kBAAC8O,GAAA,EAAD,CAAYhc,MAAO,CAAEY,MAAO,WAE9B,kBAACuE,GAAA,EAAD,CACEC,QAASzB,EAAK5B,QAAQgC,MAAMkY,MAAM,EAAG,IACrC5W,UAAW1B,EAAK5B,QAAQiC,aAAaiY,MAAM,EAAG,WAkB1D,OACE,yBAAKpX,UAAU,yBACb,kBAACkK,GAAA,EAAD,CACElK,UAAW,iBACXmK,WAAS,EACT+B,UAAU,MACVtM,WAAW,SACXwK,QAAQ,iBAGR,kBAAC,IAAD,CAAMjG,GAAI,eACV,kBAAC,KAAD,CAAanE,UAAU,cAEvB,kBAACU,GAAA,EAAD,CAAYE,QAAQ,MAApB,cACA,kBAAC,KAAD,CAAgBZ,UAAU,WAAWxD,QAvEhB,WAzBb,IAAA6a,EA0BZX,GA1BYW,EA0BavV,GAzBtBwV,QACH,SAACC,EAAKC,EAAGC,GACP,IAAMC,EAAM9F,KAAKC,MAAMD,KAAK+F,SAAWJ,EAAI/V,QACzC2D,EAAOoS,EAAIE,GAGb,OAFAF,EAAIE,GAAKF,EAAIG,GACbH,EAAIG,GAAOvS,EACJoS,IANX,aAQMF,QAyFCT,EACC,kBAAC,KAAD,CAAiB5W,UAAU,WAAWxD,QAASma,IAE/C,kBAAC,KAAD,CAAe3W,UAAU,WAAWxD,QAASma,IA1B/B,aAAhBF,EACK,kBAACmB,GAAA,EAAD,CAAmBpb,QAAS+Z,IAE5B,kBAACsB,GAAA,EAAD,CAAiBrb,QAAS+Z,KA2BjC,kBAAC/N,GAAA,EAAD,CAAMsP,OAAO,GAAOtY,M,SI1IpBuY,GAAeva,aAAaC,QAAQ,gBAYrCsa,IANa,uCAAG,4BAAApa,EAAA,sEACD2J,IAAMzJ,IAHX,yBAGuB,CAAEma,KAAM,YADzB,OACbja,EADa,OAGnBP,aAAaY,QAAQ,eAAgBL,EAAIf,KAAKib,SAH3B,2CAAH,oDAQhBC,GHUF,IIuEIC,GJ0eWC,GAjjBI,SAAC,GAA2B,IAAzBpU,EAAwB,EAAxBA,SAAU0E,EAAc,EAAdA,QAC1B5K,EAAS,IAAI6K,gBAAgB3E,EAAS4E,QADE,EAGkBjM,qBAC5DC,MAJ0C,0BAGnCqF,EAHmC,EAGnCA,oBAAqBC,EAHc,EAGdA,iBAAoBrF,EAHN,KAOtCwb,EAAyB,SAAArb,GAC7BH,EAAS,CAAEI,KAAM,yBAA0BC,QAASF,KARV,EAWFrC,mBAAS,IAXP,mBAWrCmH,EAXqC,KAWtB4U,EAXsB,OAYI/b,oBAAS,GAZb,mBAYrC2d,EAZqC,KAYnBC,EAZmB,OAcR5d,mBAAS,MAdD,mBAcrCiS,EAdqC,KAczB4L,EAdyB,OAkBN7d,mBAAS,MAlBH,mBAkBrC8b,EAlBqC,KAkBxB/D,EAlBwB,OAsBV/X,oBAAS,GAtBC,mBAsBrCkS,EAtBqC,KAsB1B4L,EAtB0B,OAuBR9d,oBAAS,GAvBD,mBAuBrCic,EAvBqC,KAuBzBD,EAvByB,OAwBhBhc,mBAAS,QAxBO,mBAwBrCsT,EAxBqC,KAwB7ByK,EAxB6B,OAyBA/d,oBAAS,GAzBT,mBAyBrCge,EAzBqC,KAyBrBC,EAzBqB,OA0BZje,mBAAS,MA1BG,mBA2BtCke,GA3BsC,UA2B/B5N,SAAS6N,cAAc,SAE9BC,EAAcC,mBACdrM,EAASoM,EAAYE,QACrBC,EAAqB,WACrB,iBAAkB3D,YACpBva,QAAQC,IAAI,sBAEZsa,UAAU4D,aAAaC,SAAW,IAAI1a,OAAO2a,cAAc,CACzDna,MAAO+C,EAAoB/C,MAC3Boa,OAAQrX,EAAoB9C,aAC5Boa,QAAS,CACP,CACElZ,IAAK4B,EAAoB5C,YACzBma,MAAO,UACPvc,KAAM,gBAIZsY,UAAU4D,aAAaM,iBAAiB,QAAQ,WAE9CC,QAEFnE,UAAU4D,aAAaM,iBAAiB,SAAS,WAE/CV,EAAYE,QAAQlM,WAEtBwI,UAAU4D,aAAaM,iBAAiB,iBAAiB,WACvD7L,QAEF2H,UAAU4D,aAAaM,iBAAiB,aAAa,WACnDtD,UAKAuD,GAAY,WAChBX,EAAYE,QACTjM,OACA2I,MAAK,SAAA6B,GAGJxc,QAAQC,IAAI,qBACZie,OAEDtD,OAAM,SAAAC,GAGL7a,QAAQC,IAAI,sBACZud,EAAc,cAIpBzd,qBAAU,WACRC,QAAQC,IAAI,4BACZ,IAAM0e,EAAQ,uCAAG,WAAM3c,GAAN,eAAAW,EAAA,4DAIK,aAAhB8Y,GAA+BkC,IACjCjG,EAAe,aAEf1X,QAAQC,IAAI,mCAAoCwb,IAGlD3H,YAAW,WACT8J,GAAkB,KAEjB,KAEHJ,EAAc,WAfC,SAgBG5a,KAAaC,IAAI,QAAS,CAC1CC,OAAQ,CAAEpC,GAAIsB,KAjBD,OAgBTe,EAhBS,OAqBE,mCACjBgb,EAAYE,QAAQ5Y,IAAMtC,EAAIf,KAC9B0c,KAvBe,2CAAH,sDA6Cd,GAdIzX,EAAoBjD,OACtBhE,QAAQC,IAAI,mDAGZyX,EAAe,aACf8F,EAAc,WACdO,EAAYE,QAAQ5Y,IAAM3B,OAAOwR,IAAIC,gBACnClO,EAAoBjD,OAEtB0a,MACSzX,EAAoBvG,IAC7Bie,EAAS1X,EAAoBvG,IAG3BuG,EAAoBvG,GAAI,CAC1B,IAAMke,EAAa,uCAAG,4BAAAjc,EAAA,sEACFkM,KAAchM,IAAI,UAAW,CAC7CC,OAAQ,CACN+b,iBAAkB5X,EAAoBvG,GACtCoO,WAAY,MAJI,OACd/L,EADc,OAOpB2Y,EAAiB3Y,EAAIf,KAAKyI,OAPN,2CAAH,qDAWdkT,IAEEL,GAUH5P,EAAQiI,QAAR,mBAA4B1O,EAAoBvG,KAChD6c,GAAoB,KARM,UAAtBvU,EAASwF,UAEXd,EAAQa,KAAR,mBAAyBtH,EAAoBvG,KAG/Cke,MAOJ5e,QAAQC,IAAIgH,GAIdyW,EAAU,UACT,CAACzW,EAAqBsW,IAMzBxd,qBAAU,WACRmY,GAAmBpR,EACnB9G,QAAQC,IAAI,UAAW6G,KACtB,CAACA,IAEJ/G,qBAAU,WACRC,QAAQC,IAAI,eAAgB0d,KAC3B,CAACA,IAEJ,IAAMmB,GAAkB,uCAAG,WAAMpe,GAAN,eAAAiC,EAAA,sEACPC,KAAaC,IAAI,QAAS,CAC1CC,OAAQ,CAAEpC,GAAIA,KAFS,OACnBqC,EADmB,OAMzBgb,EAAYE,QAAQ5Y,IAAMtC,EAAIf,KAC9B0c,KAPyB,2CAAH,sDAUlBK,GAAkB,SAAA/C,GACtB,IACEqB,EAAuB,CACrB3c,GAAIsb,EAAMtb,GAAGqD,QACbG,MAAO8X,EAAM9Z,QAAQgC,MACrBC,aAAc6X,EAAM9Z,QAAQiC,aAC5BC,aAAa,8BAAD,OAAgC4X,EAAMtb,GAAGqD,QAAzC,kBACZM,YAAY,8BAAD,OAAgC2X,EAAMtb,GAAGqD,QAAzC,oBAIf,MAAMib,GAEJhf,QAAQ6a,MAAM,MAAOmE,GAGnB/O,SAASgP,QACXH,GAAmB9C,EAAMtb,GAAGqD,UAI1BoX,GAAW,WAEfoC,GAAoB,GACpBvd,QAAQC,IAAI,2BAA4B6G,GAExC,IAKIkV,EALEkD,EAAehH,GAAiBiH,WACpC,SAAAnD,GAAK,OAAIA,EAAMtb,GAAGqD,UAAYkD,EAAoBvG,MAEpDV,QAAQC,IAAI,uBAAwBif,GAGpClf,QAAQC,IAAI,8BACZ+b,EAAQ9D,GAAiBgH,EAAe,GAExCH,GAAgB/C,IAGZpJ,GAAe,WAInB,GAHA2K,GAAoB,GAGhB5L,EAAOsF,YAAc,EACvBtF,EAAOsF,YAAc,MAChB,CACL,IAGI+E,EAHEkD,EAAehH,GAAiBiH,WACpC,SAAAnD,GAAK,OAAIA,EAAMtb,GAAGqD,UAAYkD,EAAoBvG,OAG9B,IAAlBwe,GACFlD,EAAQ9D,GAAiBgH,EAAe,GACxCH,GAAgB/C,IAEhBrK,EAAOsF,YAAc,IAKvBmI,GAAc,CAChB7N,SAAU,QACVsD,MAAO,EACPE,OAAQ,EACRtB,WAAY,OACZxO,MAAO,OACPC,OAAQ,OACR9E,OAAQ,KACRoW,QAAS,eACT7C,WAAY,gBAGM,cAAhB8H,IACF2D,GAAY/Y,UAAY,iCACxB+Y,GAAYhf,OAAS,EAGnBgf,GAAY3L,WADW,SAArBvM,EACuB,OAEA,UAM3B2W,EAAK1d,MAAMkf,SAAW,QAGJ,cAAhB5D,IAEFoC,EAAK1d,MAAMkf,SAAW,SACG,SAArBnY,IACFkY,GAAY3L,WAAa,SAIT,aAAhBgI,IACF2D,GAAY/Y,UAAY,sBAG1B,IAAMiZ,GAAe,SAACpe,GACpBA,EAAEgL,iBACkB,cAAhBuP,IACF/D,EAAe,aACf+F,GAAa,GACb/P,EAAQa,KAAK,CACXC,SAAU,QACVZ,OAAO,OAAD,OAAS3G,EAAoBvG,IACnChC,MAAO,CAAE6gB,OAAO,OAKhBhE,GAAoB,WAEtB7D,EADkB,aAAhB+D,EACa,YAEA,YAEjBzb,QAAQC,IAAI,0BAGRuf,GAAY,uCAAG,4BAAA7c,EAAA,sEACE8c,aAAkBxY,GADpB,OACbgM,EADa,OAGnByK,EAAUzK,GACVjT,QAAQC,IAAIgT,GAJO,2CAAH,qDAkBdyM,GAAe,EACbC,GAAe3B,iBAAO,MAEtB4B,GAAwBxM,aAAa,CACzCyM,aAAc,SAAA3e,GACZwW,EAAe,aACfhK,EAAQ6B,UAEVuQ,UAAW,SAAA5e,GAGY,IAAjBwe,KACFA,GAAexe,EAAE+S,MAAM8L,eAAe,GAAGC,SAG3C,IAAMA,EAAU9e,EAAE+S,MAAM8L,eAAe,GAAGC,QACtCC,EAAqBrJ,KAAKsJ,MAAMF,EAAUN,IAC1CO,EAAqB,IACvBA,EAAqB,GAGvB,IAAME,EAAoBR,GAAa1B,QAAQ9d,MAC/CggB,EAAkB9Z,UAAlB,qBAA4C4Z,EAA5C,OACAE,EAAkBxM,WAAa,QAEjCyM,SAAU,SAAAlf,GACRwe,GAAe,EACfC,GAAa1B,QAAQ9d,MAAQ,IAG/BkT,WAAY,SAAAnS,GACU,cAAhBua,GACF/D,EAAe,cAGnB2I,cAAe,SAAAnf,GACb,IAAMof,EAAcxM,YAAW,WAC7B6E,aAAa2H,GACbnF,OACC,MAELoF,aAAc,SAAArf,GACZ,IAAMof,EAAcxM,YAAW,WAC7B6E,aAAa2H,GACb1N,OACC,QAID4N,GAAkBpN,aAAa,CACnCC,WAAY,SAAAnS,GACVoe,QAIJvf,qBAAU,WACkB,UAAtBiJ,EAASwF,UAAyBvH,EAAoBvG,KACxDV,QAAQC,IAAI,oCAEZwgB,GAA+B3d,EAAOD,IAAI,QAK3B6K,EAAQ2D,QAAO,SAAArI,GAEJ,UAAtBA,EAASwF,SAEY,YAAnBd,EAAQtG,SACVsQ,EAAe,aACf1X,QAAQC,IAAI,mCAGdyX,EAAe,aACf1X,QAAQC,IAAI,kCAEdD,QAAQC,IAAIyN,QAEb,CAACA,IAEJ3N,qBAAU,WACRC,QAAQC,IAAIwb,KACX,CAACA,IAEJ,IAiGMgF,GAAiC,SAAA/f,GACrCmO,KACGhM,IAAI,SAAU,CACbC,OAAQ,CACNpC,GAAIA,KAGPia,MAAK,SAAA5X,GACJ,IAAM4H,EAAO5H,EAAIf,KAAKyI,MAAM,GAC5BzK,QAAQC,IAAIgH,GACZoW,EAAuB,CACrB3c,GAAIiK,EAAKjK,GACTwD,MAAOyG,EAAKzI,QAAQgC,MACpBC,aAAcwG,EAAKzI,QAAQiC,aAC3BC,aAAa,8BAAD,OAAgCuG,EAAKjK,GAArC,sBACZ2D,YAAY,8BAAD,OAAgCsG,EAAKjK,GAArC,wBAMnB,OAAKuG,EAAoBvG,GAKvB,yBAGEwF,IAAKyZ,GAELne,QAAS8d,GACTta,UAAW,yBAhIO,cAAhByW,EACK,kBACkB,aAAhBA,EACF,sBADF,IAKqB,WAC5B,GAAoB,cAAhBA,GAA+C,aAAhBA,EACjC,OACE,oCACE,kBAACvM,GAAA,EAAD,CACEC,WAAS,EACT+B,UAAU,SACVlM,UAAU,oBACV7E,MAAO,CACL+E,OAAQ,sBACRwb,eAAgB,iBAGlB,kBAAC,GAAD,CACE5c,KAAMmD,EACN0K,OAAQA,EACR+F,eAAgBA,EAChBhK,QAASA,IAEX,yCAASkS,GAAT,CAAgC5a,UAAU,sBACxC,kBAAC,GAAD,CACEhD,KAAMiF,EACNgM,OAAQA,EACRC,QAASvB,KAGb,kBAAC,GAAD,CAAoBC,WAAYA,EAAYD,OAAQA,IAEpD,kBAACzC,GAAA,EAAD,CACEC,WAAS,EACT+B,UAAU,MACV9B,QAAQ,eACRxK,WAAW,SACXzE,MAAO,CAAEgG,SAAU,QAASjB,OAAQ,OAAQqS,OAAQ,WAEpD,kBAACoJ,GAAD,CAAgB/N,aAAcA,KAC9B,kBAAC,GAAD,CAAiBjB,OAAQA,EAAQC,WAAYA,IAC7C,kBAACgP,GAAD,CAAYlO,WAAYyI,OAG5B,kBAAC,GAAD,CACEI,kBAAmBA,GACnBC,YAAa,kBAAM+B,GAAoB,IACvC9B,YAAaA,EACb3U,cAAeA,EACf4U,iBAAkB,SAAA1Z,GAAI,OAAI0Z,EAAiB1Z,IAC3C4Z,WAAYA,EAEZD,cAAe,WACbA,GAAeC,OA0EtBiF,GAlEyB,WAC5B,GAAoB,cAAhBpF,GAA+BxU,EAAoBvG,GACrD,OACE,wBAAS8f,GACP,kBAACM,GAAD,CAEE5F,UAAW,CACTvJ,OAAQA,EACRE,UAAWA,EACXD,WAAYA,GAEduJ,SAAU,SAAAja,GACRA,EAAE+Q,kBACF2L,GAAkB,GAClBzC,MAEFnZ,KAAMiF,EACNmU,YAAa,SAAAla,GACXA,EAAE+Q,kBACFoL,EAAuB,OAG3B,kBAAC,GAAD,CACEzL,WAAYA,EACZD,OAAQA,EACRE,UAAWA,KA0ChBkP,GACD,2BAEEC,YAAa,WACXxD,EAAc,YAEhB9c,GAAG,gBACHugB,aAAczB,GAEd0B,OAAQ,kBAAM1D,EAAc,YAC5B2D,UAAW,kBAAM3D,EAAc,YAC/B4D,QAAS,kBAAM5D,EAAc,WAC7B6D,QA9OY,WAEXzF,GAGHmC,EAAYE,QAAQhH,YAAc,EAClCyH,MAHAvD,MA4OEmG,UAAQ,EACRpb,IAAK6X,KA3BF,M,sGKhYIwD,I,OAvIG,WAAO,IAAD,EAC6B5f,qBAAWC,MADxC,0BACbmF,EADa,EACbA,SAAUG,EADG,EACHA,iBAAoBrF,EADjB,KAGhB2f,EAAc,SAAAxf,GAClBH,EAAS,CAAEI,KAAM,cAAeC,QAASF,KAGrCyf,EAAsB1f,uBAC1B,SAAAC,GACEH,EAAS,CAAEI,KAAM,sBAAuBC,QAASF,MAEnD,CAACH,IAXmB,EAcQlC,oBAAS,GAdjB,mBAcf+hB,EAde,KAcNC,EAdM,KAgBtB5hB,qBAAU,WAEN4hB,EADuB,SAArBza,KAKH,CAACA,IAEJ,IAAM0a,EAAc,SAAAC,GAClBJ,EAAoBI,GACpBrf,aAAaY,QAAQ,gBAAiBye,IAaxC,OACE,kBAACC,GAAA,EAAD,CACEzhB,KAAM0G,EACNzG,QAAS,kBAAMkhB,GAAY,IAC3BO,OAAQ,kBAAMP,GAAY,KAE1B,yBAAKrhB,MAAO,CAAE8E,MAAO,UACnB,yBACE9E,MAAO,CACLoX,OAAQ,OACRhG,SAAU,WACVtM,MAAO,OACPC,OAAQ,SAGV,kBAAC,KAAD,KAWE,yBAAKG,IAAKqc,EAAUM,KAAMC,KAAMjd,UAAU,oBAAoBkd,QAAS,CAAEC,MAAO,IAAKC,OAAQ,UAAYhd,IAAI,gBAAgB5D,QAAS,WAnCzIkgB,GAIHE,EAAY,WACZD,GAAW,KAJXC,EAAY,QACZD,GAAW,SAqCT,kBAACrb,EAAA,EAAD,MAEA,kBAACkH,GAAA,EAAD,CACE7H,UAAU,MACVX,UAAW,YACXxD,QAAS,kBAAMggB,GAAY,KAE3B,kBAAC7c,GAAA,EAAD,CAAUE,QAAM,EAACc,UAAW0c,IAAMlZ,GAAG,mBACnC,kBAACkE,GAAA,EAAD,KACE,kBAACiV,GAAA,EAAD,OAEF,kBAAChd,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACZ,GAAA,EAAD,CAAUE,QAAM,EAACc,UAAW0c,IAAMlZ,GAAG,mBACnC,kBAACkE,GAAA,EAAD,KACE,kBAACkV,GAAA,EAAD,OAEF,kBAACjd,GAAA,EAAD,CAAcC,QAAQ,cAExB,kBAACZ,GAAA,EAAD,CAAUE,QAAM,EAACc,UAAW0c,IAAMlZ,GAAG,iBACnC,kBAACkE,GAAA,EAAD,KACE,kBAACmV,GAAA,EAAD,OAEF,kBAACld,GAAA,EAAD,CAAcC,QAAQ,sBAExB,kBAACZ,GAAA,EAAD,CAAUE,QAAM,EAACc,UAAW0c,IAAMlZ,GAAG,uBACnC,kBAACkE,GAAA,EAAD,KACE,kBAACoV,GAAA,EAAD,OAEF,kBAACnd,GAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACZ,GAAA,EAAD,CACEE,QAAM,EACNc,UAAW0c,IACXlhB,OAAO,QACPuZ,KAAK,+BAEL,kBAACrN,GAAA,EAAD,KACE,yBACEpI,MAAM,KACNyd,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,SACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRC,KAAK,SAEL,0BAAMC,EAAE,+xCAGZ,kBAAC5d,GAAA,EAAD,CAAcC,QAAQ,YAExB,kBAACZ,GAAA,EAAD,CAAUE,QAAM,EAACc,UAAW0c,IAAMlZ,GAAG,kBACnC,kBAACkE,GAAA,EAAD,KACE,kBAAC8V,GAAA,EAAD,OAEF,kBAAC7d,GAAA,EAAD,CAAcC,QAAQ,2B,6GCrDnB6d,GAnDM,WAAO,IAAD,EACgBzhB,qBAAWC,MAD3B,mBAChBsF,EADgB,KAChBA,iBAAoBrF,EADJ,KAEnB4f,EAAsB1f,uBAC1B,SAAAC,GACEH,EAAS,CAAEI,KAAM,sBAAuBC,QAASF,MAEnD,CAACH,IAOH9B,qBAAU,WACRC,QAAQC,IAAIiH,KACX,CAACA,IAEJ,IAAMmc,EACJ,kBAACC,GAAA,EAAD,CAAKC,EAAG,GAEN,kBAACC,GAAA,EAAD,CACEpiB,MAAO8F,EACPjG,SAdoB,SAAAC,GACxBugB,EAAoBvgB,EAAEC,OAAOC,OAC7BoB,aAAaY,QAAQ,gBAAiBlC,EAAEC,OAAOC,QAa3CqiB,cAAY,EACZ7a,KAAK,OAEL,kBAAC8a,GAAA,EAAD,CAAUtiB,MAAM,WAAhB,WACA,kBAACsiB,GAAA,EAAD,CAAUtiB,MAAM,QAAhB,QACA,kBAACsiB,GAAA,EAAD,CAAUtiB,MAAM,QAAhB,UAIN,OACE,kBAACuiB,GAAA,EAAD,KACE,6BACA,kBAACje,GAAA,EAAD,CAAYE,QAAQ,KAAK4P,MAAM,SAASoO,cAAY,GAApD,YAGA,kBAACC,GAAA,EAAD,CAAale,UAAU,YACrB,kBAACme,GAAA,EAAD,CAAW7d,KAAG,GACZ,kBAACrF,GAAA,EAAD,CACE+Y,eAAe,QACftY,MAAM,gBACND,MAAM,MACNP,QAASwiB,Q,kDFrDfU,GAAYC,gBAAK,kBAAM,iCACvBzgB,GAAiBygB,gBAAK,kBAAM,4CAC5BC,GAAeD,gBAAK,kBAAM,wDAC1BE,GAAWF,gBAAK,kBAAM,iCACtBG,GAAeH,gBAAK,kBAAM,wDAC1BI,GAAcJ,gBAAK,kBAAM,iCACzBK,GAAaL,gBAAK,kBAAM,iCACxBM,GAAmBN,gBAAK,kBAAM,iCAG9BO,GAAYzO,aAAW,CAC3BrF,KAAM,CACJgD,WAAY,UACZlC,SAAU,QACVwD,OAAQ,IACRzE,QAAS,EACTrL,MAAO,OACP7E,OAAQ,MAEVokB,UAAW,CACThO,QAAS,QAEXiO,UAAW,CACTlN,OAAQ,IAbMzB,CAef4O,MAEGC,GAAa7O,aAAW,CAC5BrF,KAAM,CACJ1P,MAAO,UACPsR,SAAU,SACVkF,OAAQ,EAER,UAAW,CACTxW,MAAO,YACPuR,QAAS,GAEX,aAAc,CACZvR,MAAO,QAET,UAAW,CACTA,MAAO,YAIX6jB,SAAU,IAlBO9O,CAmBhB+O,MAECC,QAAiBC,EAGrBrhB,OAAOshB,iBAAiB,uBAAuB,SAAA9jB,GAE7C4jB,GAAiB5jB,KAGnB,IAwPeuM,gBAxPQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAS1E,EAAe,EAAfA,SAAe,EACArH,qBAAWC,MADX,sBACvCqF,EADuC,EACvCA,oBAAqBJ,EADkB,EAClBA,aAC9B7G,QAAQC,IAAIgH,GAFoC,MAIHtH,mBAAS,IAJN,mBAIzCslB,EAJyC,KAItBC,EAJsB,OAKPvlB,mBAAS,IALF,mBAKzCwlB,EALyC,KAKxBC,EALwB,OAMGzlB,mBAAS,IANZ,mBAMzC0lB,EANyC,KAMnBC,EANmB,OAOhB3lB,mBAAS,GAPO,mBAOzC4lB,EAPyC,KAO/BC,EAP+B,OAQV7lB,mBAAS,GARC,mBAQzC8lB,EARyC,KAQ5BC,EAR4B,OASN/lB,mBAAS,MATH,mBASzCgmB,EATyC,KAS1BC,EAT0B,KAW1CC,EACJ,kBAAC3W,GAAA,EAAD,CACE/O,MAAO,CAAE+E,OAAQ,SACjBiK,WAAS,EACTC,QAAQ,SACRxK,WAAW,UAEX,kBAACyK,GAAA,EAAD,OAQJ,IAAMyW,EAAa/jB,sBAAW,sBAAC,sBAAAY,EAAA,2DAErB4iB,EAFqB,OAGtB,IAHsB,OAOtB,IAPsB,OAWtB,IAXsB,oCAIzBH,EAJyB,SAILW,eAJK,iFAQzBT,EARyB,UAQAU,eARA,mFAYzBd,EAZyB,UAYHe,eAZG,+IAkB5B,CAACV,IAEJxlB,qBAAU,WACR+lB,MACC,CAACP,EAAUO,IAEd/lB,qBAAU,WACR+lB,IACA9lB,QAAQC,IAAI,wBACX,CAACwlB,EAAaK,IAEjB/lB,qBAAU,WACRmmB,KAAGC,GAAG,WAAW,WACfT,GAAe,SAAAU,GAAC,OAAIA,EAAI,QAG1BC,eAGsB,OADA7jB,aAAaC,QAAQ,cAEzCmjB,GAAiB,GAGnBzI,GAAmBnU,EACnB0E,EAAQ2D,QAAO,SAAArI,GACa,UAAtBA,EAASwF,WACX2O,GAAmBnU,EACnBhJ,QAAQC,IAAIkd,UAGf,IAEHpd,qBAAU,WAEJ4lB,GAA+C,MAA9BjY,EAAQ1E,SAASwF,UACpCd,EAAQiI,QAAQ,WAIjB,CAACiQ,EAAkBlY,EAASiY,IAE/B,IASMW,EAAiB,WACrB9jB,aAAaY,QAAQ,YAAa,MAClCsK,EAAQiI,QAAQ,KAEZmP,KAEFA,GAAeyB,SAEfzB,GAAe0B,WAAW7L,MAAK,SAAA8L,GACA,aAAzBA,EAAaC,QACf1mB,QAAQC,IAAI,iCAEZD,QAAQC,IAAI,kCAEd6kB,GAAiB,UAiBvB,OACE,6BACE,kBAAC,WAAD,CAAU6B,SAAUd,GAClB,kBAAC,IAAD,CAAQ7c,SA1Cc,UAAtBA,EAASwF,SACJ2O,GAEAnU,GAwCH,kBAAC,IAAD,CACE4d,OAAK,EACLre,KAAK,SACLse,OAAQ,SAAArjB,GACN,OAAO,kBAACugB,GAAD,CAAWuC,eAAgBA,OAGtC,kBAAC,IAAD,CACE/d,KAAK,UACLse,OAAQ,SAAArjB,GAAK,OAAI,kBAACygB,GAAD,CAAc6C,OAAQjgB,OAEzC,kBAAC,IAAD,CACE0B,KAAK,cACLse,OAAQ,SAAArjB,GAEN,OADAgiB,EAAY,GACL,kBAACtB,GAAD,SAGX,kBAAC,IAAD,CACE3b,KAAK,eACLse,OAAQ,SAAArjB,GAEN,OADAgiB,EAAY,GAEV,kBAAC,GAAD,eACE/hB,MAAO0hB,GACH3hB,EAFN,CAGEoH,IAAK5B,EAASwF,eAKtB,kBAAC,IAAD,CACEjG,KAAK,mBACLse,OAAQ,SAAArjB,GAEN,OADAgiB,EAAY,GAEV,kBAAC,GAAD,CACE/hB,MAAO4hB,EACPza,IAAK5B,EAASwF,cAKtB,kBAAC,IAAD,CACEjG,KAAK,iBACLse,OAAQ,SAAArjB,GAEN,OADAgiB,EAAY,GAEV,kBAAC,GAAD,CACE/hB,MAAOwhB,EACPra,IAAK5B,EAASwF,cAKtB,kBAAC,IAAD,CACEjG,KAAK,aACLse,OAAQ,SAAArjB,GAIN,OAHAE,OAAOsF,SAAS2M,QACd,KAEK,iEAIX,kBAAC,IAAD,CAAOpN,KAAK,kBAAkB5C,UAAWyd,KACzC,kBAAC,IAAD,CAAO7a,KAAK,iBAAiB5C,UAAWye,KAExC,kBAAC,IAAD,CAAO7b,KAAK,kBAAkB5C,UAAWwe,KACzC,kBAAC,IAAD,CAAO5b,KAAK,gBAAgB5C,UAAW0e,KACvC,kBAAC,IAAD,CAAO9b,KAAK,sBAAsB5C,UAAW2e,MAE/C,kBAAC,IAAD,CAAO/b,KAAK,IAAIse,OAAQ,SAAArjB,GAAK,OAxFV,SAAAA,GAGvB,MAAiC,MAA7BE,OAAOsF,SAASwF,SACX,kBAAC,GAAehL,GAEhB,KAkF4BujB,CAAiBvjB,MAElD,yBAAKrD,MAAO,CAAE+E,OAAQ+B,EAAoBvG,GAAK,QAAU,WAG3D,kBAAC6jB,GAAD,CACEnjB,MAAOmkB,EACPtkB,SA1LN,SAAsBgT,EAAOuD,GAC3BgO,EAAYhO,IA0LR5R,QAAQ,YACRohB,eAAe,UACfC,UAAU,WAEV,kBAACtC,GAAD,CACEhb,KAAM,kBAAC,KAAD,MACNuB,aAAW,OACXvF,UAAW0c,IACXlZ,GAAG,cACH9H,MAAM,SAGR,kBAACsjB,GAAD,CACEhb,KAAM,kBAACud,GAAA,EAAD,MACNhc,aAAW,QACXvF,UAAW0c,IACXlZ,GAAG,eACH9H,MAAM,UAGR,kBAACsjB,GAAD,CACEhb,KAAM,kBAACoR,GAAA,EAAD,MACN7P,aAAW,YACXvF,UAAW0c,IACXlZ,GAAG,mBACH9H,MAAM,cAER,kBAACsjB,GAAD,CACEhb,KAAM,kBAACwd,GAAA,EAAD,MACNjc,aAAW,UACXvF,UAAW0c,IACXlZ,GAAG,iBACH9H,MAAM,iBG3UVwc,GAAO5N,SAAS6N,cAAc,QAE9BsJ,GAAe,CACnBC,QAAS,CACP9hB,QAAS+hB,KACTC,MAAOC,KACPhiB,UAAW,CACTgH,KAAM,YAGVib,WAAY,CACVC,iBAAiB,IAIfC,GAAY,CAChBN,QAAS,CACPplB,KAAM,OACNsD,QAAS+hB,KACTC,MAAOC,KACPhiB,UAAW,CACTgH,KAAM,YAGVib,WAAY,CACVC,iBAAiB,IAIfE,GAAeC,aAAeF,IAC9BG,GAAkBD,aAAeT,IAqCxBW,GAnCF,WAAO,IAAD,EACwBpmB,qBAAWC,MADnC,mBACRsF,EADQ,KACRA,iBAED8gB,GAHS,KDhCa,WAAO,IAAD,EACfrmB,qBAAWC,MAAvBC,EAD2B,oBAE9B4f,EAAsB1f,uBAC1B,SAAAC,GACEH,EAAS,CAAEI,KAAM,sBAAuBC,QAASF,MAEnD,CAACH,IAkCH,MAAO,CAAEmmB,cAhCa,WACpB,IAAMC,EAAgBzlB,aAAaC,QAAQ,iBAa3C,GAAIwlB,EAAe,CACjBjoB,QAAQC,IAAIgoB,GACZxG,EAAoBwG,GAEpB,IACMC,GADO,IAAItpB,MACAupB,WAGK,SAAlBF,GAEAxG,EADEyG,GAAO,IAAMA,GAAO,EACF,OAEA,cCCFE,GAAlBJ,eAmBR,OAjBAjoB,qBAAU,WACRioB,IAEIzN,UAAU8N,UAAUC,MAAM,cAC5BzK,GAAK1d,MAAMooB,mBAAqB,UAGjC,IAEHxoB,qBAAU,WACiB,SAArBmH,EACF2W,GAAK2K,UAAUC,IAAI,QAEnB5K,GAAK2K,UAAUE,OAAO,UAEvB,CAACxhB,IAGF,kBAAC,KAAD,CAAkB2a,MAA4B,SAArB3a,EAA8B0gB,GAAeE,IACpE,kBAAC,IAAD,KACA,kBAAC,IAAD,KACM,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAOniB,UAAWgjB,KAClB,kBAAC,GAAD,UC7DGC,OARf,WACE,OACC,kBAACvhB,GAAA,EAAD,KACG,kBAAC,GAAD,Q,+LCiBN,IAAMK,GAAUC,IAAOkC,QAAV,MASEgf,GA5Bf,YAAoC,IAAbphB,EAAY,EAAZA,SAAY,EACJK,cAArBK,EADyB,EACzBA,UAAW0S,EADc,EACdA,MACnB,OAAI1S,EAEA,kBAAC,GAAD,KACE,yBAAK9C,IAAKyjB,KAAY1jB,IAAI,aAI5ByV,EAEA,kBAAC,GAAD,KACE,4BAAKA,EAAMkO,UAIV,oCAAGthB,I,UCFGuhB,GAfM,SAAC,GAA2B,IAAzBvhB,EAAwB,EAAxBA,SAAawhB,EAAW,+BAEZnhB,cAE5BO,EAAS,CAAEN,gBAJ6B,EAEtCA,gBAE0BG,KAJY,EAErBA,MAIzB,OACE,kBAAC,IAAD,iBACM+gB,EADN,CAEEpC,OAAQ,WACN,OAAOxe,EAASZ,EAAW,kBAAC,IAAD,CAAU0B,GAAG,gB,olBCPhD,IAiBMzB,GAAUC,IAAOkC,QAAV,MAuBEqf,GAxCD,WAAO,IACXlhB,EAAsBF,cAAtBE,kBACR,OACE,kBAACQ,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQvE,MAAM,YACV,kBAAC,GAAD,KACI,4BACI,yBAAKmB,IAAK8jB,KAAU/jB,IAAI,iBAEhC,kBAAC,IAAD,CAAM5D,QAASwG,EAAmBhD,UAAU,cAA5C,wB,8FCRKokB,I,OAAb,kDACI,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACnoB,GACX,EAAKgF,MAAQ,EAAKA,IAAIojB,SAASpoB,EAAEC,UAChCnB,QAAQC,IAAI,mCACZ,EAAKnB,SAAS,CACVyqB,cAAc,EACdC,cAAc,MAnBb,EA+Bbxe,SAAW,SAAC9J,GAAO,IACPuoB,EAAU,EAAKjmB,MAAfimB,MADM,EAEa,EAAK/qB,MAAxBwJ,EAFM,EAENA,KAAOwhB,EAFD,EAECA,QACfxoB,EAAEgL,iBACF,EAAKpN,SAAS,CACViqB,QAAS,OACV,WACIW,EACCD,EAAME,MAAMzhB,EAAK0hB,MAAO1hB,EAAK2hB,UAAUlP,MAAK,SAACzS,GACzC,EAAKpJ,SAAS,CACViqB,QAAS,KACTQ,cAAc,EACdC,cAAc,OAGnB5O,OAAM,SAACoE,GACNhf,QAAQC,IAAI+e,GACZ,EAAKlgB,SAAS,CACViqB,QAAS,CACLlL,KAAMmB,EACN/c,KAAM,cAKlBwnB,EAAMK,SAAS5hB,GAAMyS,MAAK,SAAC6B,GACvB,EAAK1d,SAAS,CACViqB,QAAS,CACLlL,KAAM,eACN5b,KAAM,aAEX,WAECwnB,EAAME,MAAMzhB,EAAK0hB,MAAO1hB,EAAK2hB,UAAUlP,MAAK,SAACzS,GAE7C,EAAKpJ,SAAS,CACViqB,QAAS,KACTQ,cAAc,EACdC,cAAc,OAGnB5O,OAAM,SAACoE,GACNhf,QAAQC,IAAI+e,GACZ,EAAKlgB,SAAS,CACViqB,QAAS,CACLlL,KAAMmB,EACN/c,KAAM,wBA7ErB,EAyFb8nB,iBAAmB,SAAC7oB,GAAO,IACjBgH,EAAS,EAAKxJ,MAAdwJ,KAENA,EADchH,EAAEC,OAAOyH,MACT1H,EAAEC,OAAOC,MACvB,EAAKtC,SAAS,CACVoJ,KAAMA,KA5FV,EAAKxJ,MAAQ,CACTqqB,QAAS,KACTQ,cAAe,EACfG,SAAS,EACTxhB,KAAM,CACF0hB,MAAO,GACPC,SAAU,GACVjhB,KAAM,KATL,EADjB,gEAyBQlF,OAAOshB,iBAAiB,YAAanmB,KAAKwqB,gBAC1CrpB,QAAQC,IAAI,cA1BpB,6CA6BQyD,OAAOsmB,oBAAoB,YAAanrB,KAAKwqB,gBAC7CrpB,QAAQC,IAAI,aA9BpB,+BAmGc,IAAD,SAC8BpB,KAAKH,MAAhCwJ,EADH,EACGA,KAAM6gB,EADT,EACSA,QAASW,EADlB,EACkBA,QACfD,EAAU5qB,KAAK2E,MAAfimB,MACFQ,EAAKR,EAAMS,iBACXC,EAAa3N,KAAE3Z,IAAIonB,EAAI,UACvBrhB,EAAO4T,KAAE3Z,IAAIonB,EAAG,QAChBL,EAAQpN,KAAE3Z,IAAIonB,EAAI,SAClBG,EAAS5N,KAAE3Z,IAAIonB,EAAK,UAC1B,OACJ,oCACI,yBAAKjlB,UAAU,YACRilB,EAAyH,KAApH,4BAAQhoB,KAAK,SAAST,QAAS,SAACN,GAAD,OAAO,EAAKpC,SAAS,CAACyqB,cAAc,KAAQvkB,UAAU,aAArF,WACR,yBAAKA,UAAU,aAAawX,KAAE3Z,IAAIonB,EAAI,SACtC,yBAAK5kB,IAAK8kB,GAA0B5e,IAAY/J,QAAS,SAACN,GAAD,OAAO,EAAKpC,SAAS,CAAC0qB,cAAc,KAASpkB,IAAI,WAAWJ,UAAU,aAE7HilB,GAAMprB,KAAKH,MAAM8qB,aAAgB,yBAAKxkB,UAAU,cAAckB,IAAO,SAACA,GAAD,OAAS,EAAKA,IAAMA,IACvF,0BAAM8E,SAAWnM,KAAKmM,UACtB,wBAAIhG,UAAU,kBACV,4BACI,6CAOJ,wBAAIA,UAAW,eACX,yBAAKK,IAAK+kB,EAAQhlB,IAAI,aACtB,8BAAOwD,IAEX,yBAAK5D,UAAW,aACZ,uBAAGqlB,QAAQ,SAAX,SAA0BzhB,GAC1B,6BACA,kBAAC0G,GAAA,EAAD,CAAanP,MAAO,CAAEY,MAAO,uBACzB,kBAAC,KAAD,SAIR,yBAAKiE,UAAW,aACZ,uBAAGqlB,QAAQ,SAAX,UAA2BT,GAC3B,iCAAM,kBAACta,GAAA,EAAD,CAAanP,MAAO,CAAEY,MAAO,uBAC/B,kBAAC,KAAD,SAiCR,yBAAKiE,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAK7E,MAAO,CAACmJ,UAAW,OAAQnD,SAAU,QAASd,IAAKkG,IAAYnG,IAAI,SAE5E,yBAAKJ,UAAU,UACf,4BACA,4BAAQxD,QAAY,kBAAMioB,EAAMa,WAChCroB,KAAK,SAAS+C,UAAU,aADxB,iBAYR,MAEAilB,GAAMprB,KAAKH,MAAM6qB,aAAe,yBAAKvkB,UAAU,YAAYkB,IAAO,SAACA,GAAD,OAAS,EAAKA,IAAMA,IACtF,0BAAM8E,SAAWnM,KAAKmM,UACtB,wBAAIhG,UAAU,kBACV,4BACI,gEAEJ,4BACM+jB,EAAU,uBAAG/jB,UAAWulB,KAAW,UAAW/N,KAAE3Z,IAAIkmB,EAAS,UAC1DvM,KAAE3Z,IAAIkmB,EAAS,SACb,MAGNW,EAWL,KAXe,4BACX,2BAAOW,QAAQ,QAAf,QAGA,2BAAOppB,SAAU,SAACC,GAAD,OAAO,EAAK6oB,iBAAiB7oB,IAC9C+J,YAAY,YACZuf,UAAQ,EAACvoB,KAAK,OAAO2G,KAAK,OAC1BxH,MAASob,KAAE3Z,IAAIqF,EAAM,QACrBxH,GAAG,UAMP,4BACI,2BAAO2pB,QAAQ,SAAf,SAGA,2BAAOppB,SAAU,SAACC,GAAD,OAAO,EAAK6oB,iBAAiB7oB,IAC9C+J,YAAY,qBACZuf,UAAQ,EAACvoB,KAAK,QAAQ2G,KAAK,QAC3BxH,MAASob,KAAE3Z,IAAIqF,EAAM,SACrBxH,GAAG,WAEP,4BACI,2BAAO2pB,QAAQ,YAAf,YACA,2BAAOppB,SAAU,SAACC,GAAD,OAAO,EAAK6oB,iBAAiB7oB,IAC9CupB,aAAgB,MAChBxf,YAAY,gBACZuf,UAAQ,EAACvoB,KAAK,WACdb,MAASob,KAAE3Z,IAAIqF,EAAM,YACrBxH,GAAG,WAAWkI,KAAK,cAEvB,yBAAK5D,UAAU,gBACX,yBAAKA,UAAU,OACX,yBAAK7E,MAAO,CAACmJ,UAAW,OAAQnD,SAAU,QAASd,IAAKkG,IAAYnG,IAAI,SAE5E,yBAAKJ,UAAU,UACf,4BACA,4BAAQ/C,KAAK,SAAS+C,UAAU,aAAa0kB,EAAU,SAAW,gBAErEA,EAAU,4BACR,4BAAQloB,QAAW,WAChB,EAAK1C,SAAS,CACV4qB,SAAS,KAGjB1kB,UAAU,aALT,wBAMO,UAOd,WApQhB,GAA6B7F,c,yCC+BdurB,G,kDArCb,WAAYlnB,GAAQ,IAAD,8BACjB,cAAMA,IACDmnB,OAAS7qB,IAAM8qB,YAFH,E,iEAKjB/rB,KAAKgsB,S,6BAGC,IACEC,EAAcjsB,KAAK2E,MAAnBsnB,UACFH,EAAS9rB,KAAK8rB,OAAO1M,QACrB/Y,EAASylB,EAAOzlB,OAChBD,EAAQ0lB,EAAO1lB,MACf8lB,EAAUJ,EAAOK,WAAW,MAC9BC,EAAI,EACFC,EAAsB,EAARjmB,EAAe6lB,EAAUtkB,OAC7CukB,EAAQI,UAAY,KACpBJ,EAAQK,YAAc,2BACtBL,EAAQM,UAAU,EAAG,EAAGpmB,EAAOC,GAE/B6lB,EAAQO,YACRP,EAAQQ,OAAO,EAAGrmB,EAAS,GAbtB,qBAcc4lB,GAdd,IAcL,2BAA8B,CAAC,IACvBU,EADsB,QACV,IAAStmB,EAC3B6lB,EAAQU,OAAOR,EAAGO,GAClBP,GAAKC,GAjBF,8BAmBLH,EAAQU,OAAOR,EAAG/lB,EAAS,GAC3B6lB,EAAQW,W,+BAIR,OAAO,4BAAQzmB,MAAM,SAASC,OAAO,QAAQgB,IAAKrH,KAAK8rB,a,GAjC7BxrB,aCgCfwsB,G,kDA9Bb,WAAYnoB,GAAQ,IAAD,8BACjB,cAAMA,IACD9E,MAAQ,CAAEosB,UAAW,IAAIc,WAAW,IACzC,EAAKC,KAAO,EAAKA,KAAKC,KAAV,iBAHK,E,gEAMjBjtB,KAAKktB,aAAe,IAAKroB,OAAOsoB,cAC9BtoB,OAAOuoB,oBACTptB,KAAKqtB,SAAWrtB,KAAKktB,aAAaI,iBAClCttB,KAAKutB,UAAY,IAAIR,WAAW/sB,KAAKqtB,SAASG,mBAC9CxtB,KAAKytB,OAASztB,KAAKktB,aAAaQ,wBAAwB1tB,KAAK2E,MAAMQ,OACnEnF,KAAKytB,OAAOE,QAAQ3tB,KAAKqtB,UACzBrtB,KAAKytB,OAAOE,QAAQ3tB,KAAKqtB,UACzBrtB,KAAK4tB,MAAQC,sBAAsB7tB,KAAKgtB,Q,6BAGxChtB,KAAKqtB,SAASS,sBAAsB9tB,KAAKutB,WACzCvtB,KAAKC,SAAS,CAAEgsB,UAAWjsB,KAAKutB,YAChCvtB,KAAK4tB,MAAQC,sBAAsB7tB,KAAKgtB,Q,6CAGxCe,qBAAqB/tB,KAAK4tB,OAC1B5tB,KAAKqtB,SAASW,aACdhuB,KAAKytB,OAAOO,e,+BAGZ,OAAO,kBAAC,GAAD,CAAiB/B,UAAWjsB,KAAKH,MAAMosB,gB,GA3BtB3rB,a,qBCCf2tB,GAAb,kDACI,WAAYtpB,GAAO,IAAD,8BACd,cAAMA,IAmEVupB,WAAa,SAACC,EAAaC,GACvB,EAAKC,OAAOC,KAAmB,CAC3BC,SAAU,EAAKF,OAAOxsB,GACtBusB,aAvEU,EA0ElBI,YAAc,WACVrtB,QAAQC,IAAI,SAEZ,EAAKqtB,GAAGD,YAAY,CAACE,oBAAqB,IACzC5S,MAAK,SAAA6S,GAEF,EAAKF,GAAGG,oBAAoBD,GAE5B,EAAKT,WAAW,gBAAiBS,OAlFvB,EAsFlBE,aAAe,WACX1tB,QAAQC,IAAI,UACZ,EAAKqtB,GAAGI,aAAa,CAACH,oBAAqB,IAC1C5S,MAAK,SAAA6S,GAEF,EAAKF,GAAGG,oBAAoBD,GAE5B,EAAKT,WAAW,gBAAiBS,OA7FvB,EAgGlBG,qBAAuB,WACnB,IAAMC,EAAO9U,KAAKC,MAAM,EAAK8U,QAAQzsB,OACrC,EAAKksB,GAAGK,qBAAqB,IAAIG,sBAAsBF,KAlGzC,EAoGlBG,aAAe,WAIX,EAAKC,WAAWC,SAAQ,SAAAC,GACpBluB,QAAQC,IAAI6Y,KAAKe,UAAUqU,IAC3B,EAAKZ,GAAGa,gBAAgB,IAAIC,gBAAgBF,QAxGhD,EAAKG,cAAgBvuB,IAAM8qB,YAC3B,EAAK0D,eAAiBxuB,IAAM8qB,YAC5B,EAAKsC,OAAS,KACd,EAAKc,WAAa,GALJ,EADtB,gEAUyB,IAAD,OAEhBnvB,KAAKquB,OAASqB,KACV,cACA,CACIhmB,KAAM,UACNyG,MAAO,KAKfnQ,KAAKquB,OAAO/G,GAAG,sBAAsB,SAAAqI,GACjCxuB,QAAQC,IAAIuuB,MAEhB3vB,KAAKquB,OAAO/G,GAAG,iBAAiB,SAACqH,GAC7B,EAAKK,QAAQzsB,MAAQ0X,KAAKe,UAAU2T,GACpCxtB,QAAQC,IAAI,iBAEhBpB,KAAKquB,OAAO/G,GAAG,aAAa,SAAC+H,GAC1B,EAAKF,WAAL,uBAAsB,EAAKA,YAA3B,CAAuCE,OAO1CrvB,KAAKyuB,GAAK,IAAImB,kBADI,MAGlB5vB,KAAKyuB,GAAGoB,eAAiB,SAACxtB,GACnBA,EAAEgtB,WACD,EAAKnB,WAAW,YAAa7rB,EAAEgtB,YAGvCrvB,KAAKyuB,GAAGqB,2BAA6B,SAACztB,GAClClB,QAAQC,IAAIiB,IAGhBrC,KAAKyuB,GAAGsB,YAAc,SAAC1tB,GACnB,EAAKotB,eAAerQ,QAAQ4Q,UAAY3tB,EAAE4tB,QAiB9CvU,UAAUwU,aAAaC,aAFH,CAAEhrB,OAAO,EAAOgY,OAAO,IAG1CrB,MAbe,SAACmU,GACbprB,OAAOurB,YAAcH,EACrB,EAAKT,cAAcpQ,QAAQ4Q,UAAYC,EACvC,EAAKxB,GAAG4B,UAAUJ,MAWrBlU,OATe,SAAC1Z,GACblB,QAAQC,IAAI,UAAWiB,QA3DnC,+BA+Gc,IAAD,OAEL,OACI,6BACI,2BAAOgF,IAAKrH,KAAKwvB,cACjBluB,MAAO,CAAC8E,MAAO,IAAKC,OAAQ,IAAKqS,OAAQ,EAAG4X,gBAAiB,SAC7D7N,UAAQ,IAER,2BAAOpb,IAAKrH,KAAKyvB,eACjBnuB,MAAO,CAAC8E,MAAO,IAAKC,OAAQ,IAAKqS,OAAQ,EAAG4X,gBAAiB,SAC7D7N,UAAQ,IAER,4BAAQ9f,QAAS3C,KAAKwuB,aAAtB,SACA,4BAAQ7rB,QAAS3C,KAAK6uB,cAAtB,UACA,6BACA,8BAAUvtB,MAAO,CAAC+E,OAAO,OAAQD,MAAO,SAAUiB,IAAO,SAAAA,GAAS,EAAK2nB,QAAU3nB,KACjF,6BACA,4BAAQ1E,QAAS3C,KAAK8uB,sBAAtB,oBACA,4BAAQnsB,QAAS3C,KAAKkvB,cAAtB,sBAjIhB,GAA+B5uB,aCgBViwB,G,kDACjB,WAAY5rB,GAAO,IAAD,8BACd,cAAMA,IAgEN6lB,eAAiB,SAACnoB,GACX,EAAKgF,MAAQ,EAAKA,IAAIojB,SAASpoB,EAAEC,SAEhC,EAAKrC,SAAS,CACVuwB,WAAW,KArET,EA0EdC,OAAS,SAACC,GAAW,IACV9F,EAAS,EAAKjmB,MAAdimB,MACPzpB,QAAQC,IAAI,aAAasvB,GACzB,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQH,EAAM,IAC9B9F,EAAMkG,WAAWH,GACjBxvB,QAAQC,IAAI,gBAAgBuvB,IAhFlB,EAwFdI,WAAa,WAAM,IACPnG,EAAU,EAAKjmB,MAAfimB,MACFoG,EAAgBpG,EAAMqG,mBAC5B,EAAKC,eAAiBnxB,KAAKoxB,MACvB,EAAKtxB,MAAMuxB,WACX,EAAKnxB,SAAS,CAACmxB,UAAS,IACxBxG,EAAMyG,UAAUL,GAAe,GAC/B,EAAKM,wBA/FC,EAwGdA,oBAAsB,WAClBnwB,QAAQC,IAAI,UACZ,EAAKmwB,eAAiBrxB,aAAY,WAC1BH,KAAKoxB,MAAQ,EAAKD,eAAkB,MACpC,EAAKjxB,SAAS,CAACmxB,UAAS,IACxB,EAAKI,wBAEV,MA/GO,EAqHdA,mBAAqB,WAAK,IACd5G,EAAU,EAAKjmB,MAAfimB,MACFoG,EAAgBpG,EAAMqG,mBAC5B9vB,QAAQC,IAAI,eACT,EAAKmwB,iBACJhZ,cAAc,EAAKgZ,gBACnB3G,EAAMyG,UAAUL,GAAe,KA3HzB,EAoJlBS,mBAAqB,WAAqB,IAApBC,EAAmB,uDAAT,KACpB9G,EAAU,EAAKjmB,MAAfimB,MACF+G,EAAU/G,EAAMgH,sBAAsBF,GACrCG,EAAQ,GAEdF,EAAQvC,SAAQ,SAAC/lB,GACb,IAAMU,EAAO4T,KAAE3Z,IAAIqF,EAAM,QACzBwoB,EAAMniB,KAAK3F,MAEf,IAAI1E,EAAQsY,KAAEmU,KAAKD,EAAO,MAI3B,OAHKxsB,GAASsY,KAAE3Z,IAAI0tB,EAAS,WACxBrsB,EAAQ,WAEN,4BAAKA,IAjKE,EAoKlB0sB,cAAgB,SAAC1oB,GAAU,IAEfuhB,EAAS,EAAKjmB,MAAdimB,MACFoH,EAASrU,KAAE3Z,IAAIqF,EAAM,OACrB4oB,EAAYtU,KAAE3Z,IAAK4mB,EAAMqG,mBAAmB,OAClDrG,EAAMsH,iBAAiBD,EAAWD,GAClC,EAAK/xB,SAAS,CACVkyB,WAAY,MA3KF,EA8KlBC,iBAAmB,SAAC/vB,GAChBA,EAAEgL,iBADoB,IAEdud,EAAS,EAAKjmB,MAAdimB,MACFyH,EAAczH,EAAMS,iBACpBiH,EAAgB3U,KAAE3Z,IAAIquB,EAAa,OAEnCX,EAAU,CACZa,KAFc,IAAIC,aAAWC,WAG7BptB,MAAO,GACPqtB,YAAa,eACbf,QAAS,IAAIgB,KACbC,SAAU,IAAID,KACdE,OAAO,EACPb,OAAQM,EACRQ,QAAS,IAAI/yB,KACbgzB,QAAQ,GAEZrB,EAAQC,QAAUD,EAAQC,QAAQqB,IAAIV,GAAe,GACrD1H,EAAMqI,mBAAmBvB,IAhMX,EAkMlBwB,uBAAyB,WAClB,EAAKC,cACJ,EAAKA,YAAYC,UAAY,EAAKD,YAAYE,eApMpC,EAqOlBC,aAAe,SAACjxB,GAAO,IAEXkxB,EAAe,EAAK1zB,MAApB0zB,WACA3I,EAAU,EAAKjmB,MAAfimB,MAGR,GAFAvoB,EAAEgL,iBAECsQ,KAAE6V,KAAKD,GAAY5rB,OAAO,CACzB,IAAM8rB,GAAY,IAAIjB,aAAWC,WAC3Bf,EAAU9G,EAAMqG,mBAChBgB,EAAYtU,KAAE3Z,IAAI0tB,EAAU,MAAO,MACnCW,EAAczH,EAAMS,iBACpBnB,EAAU,CACZqI,IAAKkB,EACLxB,UAAWA,EACXjT,KAAOuU,EACPvB,OAAQrU,KAAE3Z,IAAIquB,EAAa,OAC3BjvB,KAAK,OACLgoB,IAAI,GAGRR,EAAM8I,WAAWD,EAAWvJ,GAC5B,EAAKjqB,SAAS,CAACszB,WAAY,KAE/B,EAAKtzB,SAAS,CACVszB,WAAY,GACZ/C,WAAW,KA9PD,EAkQlBmD,QAAU,WACN,EAAK1zB,SAAS,CAACoG,OAAQxB,OAAOC,eAjQ9B,EAAKjF,MAAQ,CACTwG,OAAQxB,OAAOC,YACfyuB,WAAY,GACZpB,WAAY,GACZyB,gBAAiB,EACjBxC,UAAU,EACVZ,WAAW,EACXrrB,MAAO,KACPmG,KAAO,IACPuoB,cAAc,EACdC,QAAQ,GAZE,E,wLAmBE9zB,KAAK2E,MAAdimB,M,SACalP,UAAUwU,aAAaC,aAAa,CACtDhrB,OAAO,EACPgY,OAAO,I,OAFHhY,E,OAINnF,KAAKC,SAAS,CAAEkF,UAChBnF,KAAKC,SAAS,CAAC4zB,cAAc,IAC7B7zB,KAAKC,SAAS,CAAE6zB,QAAQ,IAElBC,EAAS,IACTC,EAAU,IAAIC,cAAc9uB,IAC1B+uB,QAERF,EAAQG,gBAAkB,SAAS9xB,GAC/B0xB,EAAOrkB,KAAKrN,EAAEc,MACd,IAAMixB,GAAW,IAAI5B,aAAWC,WAC5B/B,EAAQ,IAAI2D,KAAKN,EAAT,UAAoBK,EAAS,QAAW,CAAChxB,KAAM,cACrDsG,EAAO2M,IAAIC,gBAAgBoa,GACjCA,EAAMhnB,KAAN,UAAgBiU,KAAE8U,SAAS/oB,EAAK4qB,UAAU,IAAI,SAC9C,IAAMvqB,EAAO4T,KAAE8U,SAAS/B,EAAMhnB,MAC9BgnB,EAAM6D,SAAN,UAAoBxqB,GAEpB,IAAIyqB,EAAO,GACXA,EAAK9kB,KAAKghB,IAEO,IAAIE,UACZC,OAAO,OAAQ2D,EAAK,K,6IAOV,OAArBx0B,KAAKH,MAAMsF,OACbnF,KAAKH,MAAMsF,MAAMsvB,YAAYrF,SAAQ,SAAA7X,GAAK,OAAIA,EAAMmd,UACpD10B,KAAKC,SAAS,CAAEkF,MAAO,OACvBnF,KAAKC,SAAS,CAAE6zB,QAAQ,KAErB3yB,QAAQC,IAAI,4B,6CA4BXpB,KAAKwxB,uB,0CA4COE,GAAS,IAGnBC,EAFU3xB,KAAK2E,MAAdimB,MAEegH,sBAAsBF,GAGtCiD,EAAQhD,EAAQ1e,KADH,IACoC0e,EAAQ1e,KAEzD2hB,EAAUjD,EAAQ/rB,KAAI,SAACyD,EAAMxD,GAI/B,OAAOA,EAPQ,EAOc,yBAAKkG,IAAKlG,EAAOW,IAAKmX,KAAE3Z,IAAIqF,EAAM,UAAW9C,IAAKoX,KAAE3Z,IAAIqF,EAAM,UAAc,QAK7G,OAAO,yBAAKlD,UAAWA,KAAU,kBAAD,0BAAuCwuB,KAAWC,K,2CA6JlF50B,KAAKkzB,2B,0CAKLruB,OAAOshB,iBAAiB,SAAUnmB,KAAK2zB,SACvC9uB,OAAOshB,iBAAiB,YAAanmB,KAAKwqB,kB,6CAK1C3lB,OAAOsmB,oBAAoB,SAAUnrB,KAAK2zB,SAC1C9uB,OAAOsmB,oBAAoB,YAAanrB,KAAKwqB,kB,+BAIvC,IAAD,SAEkDxqB,KAAKH,MAApDwG,EAFH,EAEGA,OAAQktB,EAFX,EAEWA,WAAY/C,EAFvB,EAEuBA,UAAWqD,EAFlC,EAEkCA,aAC/BjJ,EAAU5qB,KAAK2E,MAAfimB,MAEFoG,EAAgBpG,EAAMqG,mBACtB2B,EAAWhI,EAAMiK,uBAAuB7D,GACxCW,EAAU/G,EAAMgH,sBAAsBZ,GACtC8D,EAAWlK,EAAMmK,cACjBC,EAAYpK,EAAMqK,iBAClB7J,EAAKR,EAAMS,iBAQX/pB,EAAQ,CACV+E,OAAQA,GAkBZ,OACI,yBAAK/E,MAAOA,EAAO6E,UAAU,QAE1B,yBAAKA,UAAU,eACV,yBAAKA,UAAU,eACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMxD,QAAS,SAACN,GAAD,OAAO,EAAK+vB,iBAAiB/vB,IAAI8D,UAAU,eAA1D,YAGPwX,KAAE3Z,IAAIgtB,EAAe,SAAW,yBAAK7qB,UAAU,WAC5C,0BAAMA,UAAU,QACZ,8BACA/C,KAAK,OACLb,MAASvC,KAAKH,MAAMsyB,WACpB/lB,YAAY,oBACZhK,SAAY,SAACC,GACT,IAAM6yB,EAAYvX,KAAE3Z,IAAI3B,EAAG,gBAC3B,EAAKpC,SAAS,CACVkyB,WAAY+C,IACb,WACCtK,EAAMuK,iBAAiBD,UAjCvC,yBAAK/uB,UAAU,eACX,yBAAKA,UAAU,aACd6uB,EAAUpvB,KAAI,SAACyD,EAAMxD,GAClB,OAAO,yBAAKlD,QAAS,kBAAM,EAAKovB,cAAc1oB,IAAO0C,IAAKlG,EAAOM,UAAU,QAC3E,yBAAKK,IAAK6C,EAAKkiB,OAAQhlB,IAAK8C,EAAKU,OACjC,8BAAOV,EAAKU,aAmCP,KAEb,yBAAK5D,UAAU,cACTnG,KAAKyxB,mBAAmBT,IAE9B,yBAAK7qB,UAAU,gBACX,kBAAC,GAAD,CAASykB,MAAUA,IACnB,yBAAKzkB,UAAU,kBACf,kBAACsK,GAAA,EAAD,CAAanP,MAAO,CAAEY,MAAO,uBACzB,kBAAC,KAAD,UAKZ,yBAAKiE,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACV2uB,EAASlvB,KAAI,SAAC8rB,EAAS7rB,GACpB,OACI,yBAAKlD,QAAU,SAACkD,GACZ+kB,EAAMwK,mBAAmB1D,EAAQa,MAClCxmB,IAAK2lB,EAAQa,IAAKpsB,UAAWA,KAAU,SAAU,CAAC,OAAWwX,KAAE3Z,IAAIgtB,EAAe,SAAWrT,KAAE3Z,IAAI0tB,EAAS,MAAO,SAClH,yBAAKvrB,UAAU,YACV,EAAKkvB,oBAAoB3D,IAE9B,yBAAKvrB,UAAWA,KAAU,cAAc,CAAC,OAAUwX,KAAE3Z,IAAI0tB,EAAS,SAAU,SACvE,EAAKD,mBAAmBC,UASjD,yBAAKvrB,UAAU,gBACX,yBAAKA,UAAU,YACX,kBAAC,KAAD,CAAUsqB,OAAQzwB,KAAKywB,SAClB,gBAAE6E,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACG,iCACA,wBAASD,IACL,0BAAWC,KACX,kBAAC9kB,GAAA,EAAD,KACI,kBAAC,KAAD,aAOpB,yBAAKpJ,IAAK,SAACA,GAAD,OAAS,EAAK8rB,YAAc9rB,GAAKlB,UAAU,YAE7CysB,EAAShtB,KAAI,SAAC4vB,EAAM3vB,GAChB,IAAMwD,EAAOsU,KAAE3Z,IAAIwxB,EAAM,QACzB,OACA,yBAAKzpB,IAAKlG,EAAOM,UAAS,UAAKqvB,EAAKpK,GAAK,aAAe,YAExD,yBAAK5kB,IAAKmX,KAAE3Z,IAAIqF,EAAM,UAAW9C,IAAI,WAAWJ,UAAU,aAE1D,yBAAKA,UAAU,gBAEX,yBAAKA,UAAU,YAAf,UAA8BqvB,EAAKpK,GAAK,MAAQzN,KAAE3Z,IAAIwxB,EAAM,cAA5D,UAEA,uBAAGrvB,UAAU,gBACgC,aAAnC,UAAGqvB,EAAKxW,MAAOsV,UAAU,EAAG,GAGuD,QAArF,UAAIkB,EAAKxW,MAAQsV,UAAU,UAAIkB,EAAKxW,MAAQrX,OAAS,EAAG,UAAI6tB,EAAKxW,MAAQrX,QACrE,2BACIrG,MAAO,CAAEgG,SAAU,SACnBd,IAAG,gCAA2BgvB,EAAKxW,MAAQzY,IAAI,QAC/CnD,KAAK,YAAYqyB,UAAQ,IAG7B,yBACIn0B,MAAO,CAAEgG,SAAU,SACnBd,IAAG,gCAA2BgvB,EAAKxW,MACnCzY,IAAI,QAGhB,2BAAIivB,EAAKxW,MAGT,uBAAG7Y,UAAU,UAAUqvB,EAAKE,cASvClF,EAAY,yBAAKrqB,UAAU,QAAQkB,IAAO,SAACA,GAAD,OAAS,EAAKA,IAAMA,IAC3D,kBAAC,KAAD,CAASsuB,aAjJhB,SAACvgB,EAAOwgB,GACzB,EAAK31B,SAAS,CAACszB,WAAW,GAAD,OAAIqC,EAAYC,SACzC10B,QAAQC,IAAR,UAAew0B,EAAYC,SA+IkCC,SAAUC,4BAC1C,MAKjBlC,EAAe,yBAAK1tB,UAAU,UACtB,6BACCnG,KAAKH,MAAMsF,MAAQ,kBAAC,GAAD,CAAeA,MAAOnF,KAAKH,MAAMsF,QAAY,OAEhE,KAGRwY,KAAE3Z,IAAIgtB,EAAe,WAAarT,KAAE3Z,IAAIgtB,EAAe,YAAcrT,KAAE3Z,IAAIonB,EAAI,OAAS,yBAAM4K,SAAazC,EAAW5rB,OAAS,EAAIxB,UAAU,iBAArD,eAAyF,KAC9KwrB,EAAQ1e,KAAO,EAAI,yBAAK9M,UAAU,iBAClC,0BACIgG,SAAYnM,KAAKszB,aACjB0C,SAAazC,EAAW5rB,OAAS,EACjCxB,UAAU,gBACV,kBAACsK,GAAA,EAAD,CAAY9N,QAAW,WAAO,EAAK1C,SAAS,CAACuwB,WAAYA,MACrD,kBAAC,KAAD,OAEJ,8BACI3uB,GAAK,UACLwF,IAAK,SAAC0K,GAAD,OAAU,EAAKA,MAAQA,GAC5B3O,KAAO,OACP+C,UAAY,eACZ5D,MAAUgxB,EACV3H,aAAgB,MAChBxf,YAAc,6BACd6pB,QAAY,SAAC5zB,GACU,KAAdA,EAAE6zB,SAAmB7zB,EAAE8zB,UACtB,EAAK7C,aAAajxB,GACJ,KAAdA,EAAE6zB,SAAkB,EAAKnF,cAGnC3uB,SACC,YAAa,IAAXE,EAAU,EAAVA,OACD,EAAKrC,SAAS,CAACszB,WAAWjxB,EAAOC,WAO/B,kBAACkO,GAAA,EAAD,KACA,kBAAC,KAAD,CAAO2lB,YAAc,WAAO,EAAKC,kBAAmBC,UAAY,WAAO,EAAKC,oBAGpF,4BACIP,SAAazC,EAAW5rB,OAAS,EACjCvE,KAAO,SACP+C,UAAY,OACZxD,QAAY3C,KAAKszB,cAJrB,YASJ,MAIR,yBAAKntB,UAAU,iBACX,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,WACTwrB,EAAQ/rB,KAAI,SAAC4wB,EAAQ3wB,GAEnB,IAAM4wB,EAAW9Y,KAAE3Z,IAAIwyB,EAAQ,UAAU,GACzC,OACI,yBAAKzqB,IAAOlG,EAAQM,UAAU,UAE1B,yBAAKA,UAAU,oBACX,yBAAKK,IAAKmX,KAAE3Z,IAAIwyB,EAAQ,UAAWjwB,IAAI,aACvC,0BAAMJ,UAAWA,KAAU,cAAe,CAAC,OAAUswB,OAEzD,yBAAKtwB,UAAU,eACX,4BAAMqwB,EAAOzsB,MACb,sDAEJ,yBAAKpH,QAAW,WACZioB,EAAM8L,wBAAwB1F,EAAewF,IAEhDrwB,UAAU,gBACX,kBAACsK,GAAA,EAAD,CAAanP,MAAO,CAAEY,MAAO,mBAAoBsR,SAAU,OACvD,kBAAC,KAAD,cAWxB,kBAAC,GAAD,Y,GA5jBclT,aCnB5Bq2B,GAAS,wBACMC,G,4FACbC,GAA0B,IAAhBC,EAAe,uDAAL,KACdvpB,EAAG,UAAMopB,GAAN,YAAgBE,GACzB,OAAOppB,IAAMzJ,IAAIuJ,EAAKupB,K,6BAM1B,IAHKD,EAGN,uDAHiB,GAAI1zB,EAGrB,uDAH4B,GAAI2zB,EAGhC,uDAH0C,CAACC,QAAS,CAC/C,eAAgB,mBAChB,QAAW,wBAELxpB,EAAG,UAAMopB,GAAN,YAAgBE,GACzB,OAAOppB,IAAMupB,KAAKzpB,EAAKpK,EAAM2zB,O,KCVhBG,G,WAEjB,WAAYrM,GAAO,oBACf5qB,KAAK4qB,MAAQA,EACb5qB,KAAKk3B,GAAK,KACVl3B,KAAKm3B,aAAc,EACnBn3B,KAAK2tB,UACL3tB,KAAKo3B,Y,wDAGG,IAAD,OACDxM,EAAQ5qB,KAAK4qB,MACnB/lB,OAAO3E,aAAY,WACF0qB,EAAMS,mBACP,EAAK8L,aACb,EAAKxJ,YAEV,O,kCAEK0J,GACR,IAAInN,EAAU,GACd,IACIA,EAAUjQ,KAAKC,MAAMmd,GAEzB,MAAMlX,GACFhf,QAAQC,IAAI+e,GAEhB,OAAO+J,I,kCAECmN,GACR,IAAMzM,EAAQ5qB,KAAK4qB,MACbyH,EAAczH,EAAMS,iBACpBiH,EAAgB3U,KAAE8U,SAAS9U,KAAE3Z,IAAIquB,EAAa,QAC9CnI,EAAUlqB,KAAKs3B,YAAYD,GAC3B9uB,EAASoV,KAAE3Z,IAAIkmB,EAAS,UACxBkE,EAAUzQ,KAAE3Z,IAAIkmB,EAAS,WAE/B,OAAO3hB,GACH,IAAK,gBACDpH,QAAQC,IAAIgtB,GACZ,IAAMmJ,EAAM5Z,KAAE3Z,IAAIoqB,EAAS,OACrB6D,EAAatU,KAAE3Z,IAAIuzB,EAAK,aAC1BxE,EAASpV,KAAE3Z,IAAIuzB,EAAK,WACpBC,EAAS7Z,KAAE3Z,IAAIuzB,EAAK,UACxBv3B,KAAKy3B,mBAAmBxF,EAAWc,EAAQyE,GAC3C,MACJ,IAAK,eAEDx3B,KAAK03B,mBAAmBtJ,GAAS,GACjC,MACJ,IAAK,cAEDpuB,KAAK03B,mBAAmBtJ,GADP,GAEjB,MACJ,IAAK,gBAED,IAAM4C,EAAgBpG,EAAMqG,mBACxB0G,EAASha,KAAE3Z,IAAIgtB,EAAe,SAAWrT,KAAE3Z,IAAIoqB,EAAS,cAAgBkE,IAAkB3U,KAAE3Z,IAAIoqB,EAAS,UAC7GpuB,KAAK43B,aAAaxJ,EAASuJ,GAE/B,MACA,QACI,MACJ,IAAK,gBAED33B,KAAK63B,aAAazJ,M,yCAIX6D,GAAqC,IAA1Bb,EAAyB,wDAAPoG,EAAO,uCAC7C5M,EAAQ5qB,KAAK4qB,MACnBA,EAAMkK,SAAWlK,EAAMkK,SAASgD,OAAO7F,GAAW,SAACP,GAK/C,OAJGA,IACCA,EAAQqB,OAAS3B,EACjBM,EAAQ8F,OAASA,GAEd9F,KAEX9G,EAAMkN,W,yCAGS9F,GAA0B,IAAlByE,EAAiB,wDAClC7L,EAAQ5qB,KAAK4qB,MAEnBA,EAAMmN,MAAQnN,EAAMmN,MAAMD,OAAO9F,GAAQ,SAAC3oB,GAKtC,OAJGA,IACCA,EAAK2uB,OAASvB,GAGXptB,KAEXuhB,EAAMkN,W,mCAIG1J,GAAyB,IAAhBuJ,EAAe,wDAC7BtuB,EAAOsU,KAAE3Z,IAAIoqB,EAAS,QACpBxD,EAAQ5qB,KAAK4qB,MACbyH,EAAczH,EAAMS,iBACpBiH,EAAgB3U,KAAE8U,SAAS9U,KAAE3Z,IAAIquB,EAAa,QAGpDhpB,EAAOuhB,EAAMqN,eAAe5uB,GAE5B,IAAM6uB,EAAgB,CAClB3F,IAAKnE,EAAQmE,IACbvT,KAAMrB,KAAE3Z,IAAIoqB,EAAS,OAAQ,IAC7B4D,OAAQrU,KAAE3Z,IAAIoqB,EAAS,UACvB6D,UAAWtU,KAAE3Z,IAAIoqB,EAAS,aAC1B0E,QAASnV,KAAE3Z,IAAIoqB,EAAS,UAAW,IAAIruB,MACvCqD,KAAMua,KAAE3Z,IAAIoqB,EAAS,QACrBhD,GAAIkH,IAAkB3U,KAAE8U,SAAS9U,KAAE3Z,IAAIoqB,EAAS,WAChD/kB,KAAMA,GAEVlI,QAAQC,IAAI,2BAA4B82B,GACxCtN,EAAMuN,WAAWD,EAAeP,K,mCAIvBvJ,GAAS,IAAD,OACXxD,EAAQ5qB,KAAK4qB,MACbqH,EAAS,UAAM7D,EAAQmE,KACvBP,EAAM,UAAM5D,EAAQ4D,QACpB+F,EAAQpa,KAAE3Z,IAAIoqB,EAAS,QAAS,IAClCsD,EAAU,CAEVa,IAAIN,EACJ5sB,MAAOsY,KAAE3Z,IAAIoqB,EAAS,QAAS,IAC/BsE,YAAa/U,KAAE3Z,IAAIoqB,EAAS,cAAe,IAC3CuD,QAAS,IAAIgB,KACbC,SAAU,IAAID,KACdE,OAAO,EACPb,OAAQA,EACRc,QAAS,IAAI/yB,KACbgzB,QAAQ,GAEZpV,KAAEya,KAAKL,GAAO,SAAC1uB,GAEX,IAAMgvB,EAAQ,UAAMhvB,EAAKkpB,KACzB,EAAK3H,MAAMqN,eAAe5uB,GAC1BqoB,EAAQC,QAAUD,EAAQC,QAAQqB,IAAIqF,GAAU,MAE5BzN,EAAMgI,SAAS0F,QAAO,SAAC5T,GAAD,OAAO/G,KAAE8U,SAAS/N,EAAEuN,aAAeA,KACjE7C,SAAQ,SAACiI,GACrB,IAAMkB,EAAQ5a,KAAE8U,SAAS9U,KAAE3Z,IAAIqzB,EAAK,QACpC3F,EAAQkB,SAAWlB,EAAQkB,SAASI,IAAIuF,GAAO,MAEnD3N,EAAM4N,WAAWvG,EAAWP,K,6BAEhB,IAAV2F,EAAS,uDAAH,GACFF,EAAcn3B,KAAKm3B,YACzB,GAAGn3B,KAAKk3B,IAAMC,EAAY,CACtB,IAAMsB,EAAYxe,KAAKe,UAAUqc,GACjCr3B,KAAKk3B,GAAGwB,KAAKD,M,uCAIjB,IACME,EADQ34B,KAAK4qB,MACGgO,iBAChB1O,EAAU,CACZ3hB,OAAQ,OACR6lB,QAAQ,GAAD,OAAKuK,IAEZ34B,KAAK04B,KAAKxO,K,gCAGR,IAAD,OAECgN,EAAK,IAAI2B,UAAU,uBACzB74B,KAAKk3B,GAAKA,EACVA,EAAG4B,OAAS,WAER,EAAK3B,aAAc,EACnB,EAAK4B,iBAEL7B,EAAG8B,UAAY,SAAC32B,GACZ,EAAK42B,YAAYtb,KAAE3Z,IAAI3B,EAAG,OAAO,KACjClB,QAAQC,IAAI,wBAAyBiB,EAAEc,QAI/C+zB,EAAGgC,QAAU,WACT,EAAK/B,aAAc,EACnB,EAAKvM,MAAMkN,UAIfZ,EAAGiC,QAAU,WACT,EAAKhC,aAAc,EACnB,EAAKvM,MAAMkN,c,KCxLFsB,G,WACjB,WAAYC,GAAc,oBACtBr5B,KAAKs5B,IAAMD,EACXr5B,KAAKu5B,QAAU,IAAI3C,GACnB52B,KAAK4yB,SAAW,IAAID,KACpB3yB,KAAK80B,SAAW,IAAInC,KACpB3yB,KAAKw5B,gBAAkB,KAEvBx5B,KAAKqJ,KAAOrJ,KAAKy5B,0BACjBz5B,KAAK05B,MAAQ15B,KAAK25B,2BAClB35B,KAAK+3B,MAAQ,IAAIpF,KAEjB3yB,KAAK45B,SAAW,IAAI3C,GAASj3B,MAC7BA,KAAK65B,oBACL75B,KAAK+O,OAAS,CACVgpB,MAAO,IAAIpF,M,uDAKRhC,GAAU,IAAD,OACE3wB,KAAK44B,kBAInB54B,KAAKu5B,QAAQvC,KAAK,2BAA4BrG,GAAU7U,MAAK,SAAC5X,GAM1D,GAJA/C,QAAQC,IAAI8C,EAAIf,KAAKwsB,SACjBzrB,EAAIf,KAAKwsB,SACTxuB,QAAQC,IAAI8C,EAAIf,KAAK6Y,OAErB9X,EAAIf,KAAKwsB,QAAS,CAClB,IAAM8D,GAAY,IAAIjB,aAAWC,WAC3Bf,EAAU,EAAKT,mBACfgB,EAAYtU,KAAE3Z,IAAI0tB,EAAU,MAAO,MACnCW,EAAc,EAAKhH,iBACnBnB,EAAU,CACZqI,IAAKkB,EACLxB,UAAWA,EACXjT,KAAO9a,EAAIf,KAAKoK,IAChBykB,OAAQrU,KAAE3Z,IAAIquB,EAAa,OAC3BjvB,KAAK,eACLgoB,IAAI,GAEZ,EAAKsI,WAAWD,EAAWvJ,OAG5BnO,OAAM,SAACoE,GACNhf,QAAQC,IAAI,qBAAsB+e,Q,0CAM1B,IAAD,OACT2Z,EAAW95B,KAAK44B,iBACtB,GAAGkB,EAAU,CACT,IAAMhD,EAAU,CACZC,QAAS,CACLgD,cAAeD,IAGvB95B,KAAKu5B,QAAQv1B,IAAb,kBAAoC8yB,GAAShb,MAAK,SAAC5X,GAC/C,IAAM4wB,EAAW5wB,EAAIf,KACrBwa,KAAEya,KAAKtD,GAAU,SAACvN,GACd,EAAKqS,SAAS/B,aAAatQ,MAG/B,IAAMyS,EAAiBrc,KAAE3Z,IAAI8wB,EAAU,UAAW,MAClD,EAAKmF,qBAAqBD,MAC3Bje,OAAM,SAACoE,GAENhf,QAAQC,IAAI,gCAAiC+e,S,qCAI1C9W,GACXA,EAAKkiB,OAASvrB,KAAKk6B,eAAe7wB,GAClC,IAAMxH,EAAK8b,KAAE8U,SAASppB,EAAKkpB,KAE3B,OADAvyB,KAAK+3B,MAAQ/3B,KAAK+3B,MAAM/E,IAAInxB,EAAIwH,GACzBA,I,uCAIP,OAAOsU,KAAE3Z,IAAIhE,KAAK05B,MAAO,MAAO,Q,qCAErBrwB,GAEP,MAAM,uCAAN,OAA8CA,EAAKkpB,IAAnD,U,yCAGiB,IAAD,OAAPziB,EAAO,uDAAH,GACjB9P,KAAK+O,OAAOgpB,MAAQ/3B,KAAK+O,OAAOgpB,MAAMoC,QAEtC,IAAMh3B,EAAO,CAAC4L,OAASe,GAEvB9P,KAAKu5B,QAAQvC,KAAK,mBAAoB7zB,GAAM2Y,MAAK,SAAC5X,GAE9C,IAAM6zB,EAAQpa,KAAE3Z,IAAIE,EAAK,OAAQ,IAEjCyZ,KAAEya,KAAKL,GAAO,SAAC1uB,GAGZA,EAAKkiB,OAAS,EAAK2O,eAAe7wB,GAClC,IAAM2oB,EAAM,UAAM3oB,EAAKkpB,KACvB,EAAKwF,MAAQ,EAAKA,MAAM/E,IAAIhB,EAAQ3oB,GACpC,EAAK0F,OAAOgpB,MAAQ,EAAKhpB,OAAOgpB,MAAM/E,IAAIhB,EAAQ3oB,MAGtD,EAAKyuB,YAEL/b,OAAM,SAACoE,GACNhf,QAAQC,IAAI,mBAAoB+e,Q,mCAK3Bia,GACT,IAAIA,EAGA,OAFAp6B,KAAK2D,aAAaoX,WAAW,cAC7B/a,KAAK05B,MAAQ,MAGjB15B,KAAK05B,MAAQU,EACbz2B,aAAaY,QAAQ,QAAS0V,KAAKe,UAAUof,M,uCAG7Cp6B,KAAK80B,SAAW90B,KAAK80B,SAASqF,QAC9Bn6B,KAAK+3B,MAAQ/3B,KAAK+3B,MAAMoC,QACxBn6B,KAAK4yB,SAAW5yB,KAAK4yB,SAASuH,U,gCAI9B,IAAMnI,EAASrU,KAAE8U,SAAS9U,KAAE3Z,IAAIhE,KAAKqJ,KAAM,MAAO,OAI5CytB,EAAU,CACZC,QAAU,CACNgD,cAJQpc,KAAE3Z,IAAIhE,KAAK05B,MAAO,MAAO,QAOzC15B,KAAKu5B,QAAQv1B,IAAI,kBAAmB8yB,GACpC92B,KAAKm3B,cACLn3B,KAAKqJ,KAAO,KACZ1F,aAAaoX,WAAW,MACxBpX,aAAaoX,WAAW,SACrBiX,IACChyB,KAAK+3B,MAAQ/3B,KAAK+3B,MAAMlO,OAAOmI,IAEnChyB,KAAKq6B,iBACLr6B,KAAK83B,W,iDAKL,GAAG93B,KAAK05B,MACJ,OAAO15B,KAAK05B,MAGhB,IAAIA,EAAQ,KACNv2B,EAAOQ,aAAaC,QAAQ,SAClC,GAAGT,EACC,IACIu2B,EAAQzf,KAAKC,MAAM/W,GAEvB,MAAOgd,GACHhf,QAAQC,IAAI+e,GAIpB,OAAOuZ,I,gDAGe,IAAD,OAEjBrwB,EAAO,KACLlG,EAAOQ,aAAaC,QAAQ,MACjC,IACOyF,EAAO4Q,KAAKC,MAAM/W,GAEzB,MAAMgd,GACFhf,QAAQC,IAAI+e,GAEhB,GAAG9W,EAAK,CAEL,IAAMqwB,EAAQ15B,KAAK25B,2BAEb7C,EAAU,CACZC,QAAS,CACLgD,cAHQpc,KAAE3Z,IAAI01B,EAAO,SAO7B15B,KAAKu5B,QAAQv1B,IAAI,eAAgB8yB,GAAShb,MAAK,SAAC5X,GAE5C,IAAMk2B,EAAcl2B,EAAIf,KAClBkG,EAAOsU,KAAE3Z,IAAIo2B,EAAa,QAEhC,EAAKE,eAAejxB,GACpB,EAAKkxB,aAAaH,MAEnBre,OAAM,SAAAoE,GACL,EAAKsL,aAIZ,OAAOpiB,I,qCAIGA,GAGX,GAFAA,EAAKkiB,OAASvrB,KAAKk6B,eAAe7wB,GAClCrJ,KAAKqJ,KAAOA,EACTA,EAAK,CAEJ1F,aAAaY,QAAQ,KAAM0V,KAAKe,UAAU3R,IAE1C,IAAM2oB,EAAM,UAAK3oB,EAAKkpB,KACtBvyB,KAAK+3B,MAAQ/3B,KAAK+3B,MAAM/E,IAAIhB,EAAQ3oB,GAGxCrJ,KAAK83B,W,+BAGAzuB,GAAM,IAAD,OACV,OAAO,IAAImxB,SAAQ,SAACC,EAASC,GACzB,EAAKnB,QAAQvC,KAAK,YAAa3tB,GAAMyS,MAAK,SAACzS,GAEvC,OADAlI,QAAQC,IAAI,mBAAoBiI,GACzBoxB,EAAQpxB,MAChB0S,OAAM,SAACoE,GAEN,OAAOua,EAAO,yC,8BAMW,IAAD,OAA9B3P,EAA8B,uDAAtB,KAAMC,EAAgB,uDAAL,KAErB2P,EAAYhd,KAAEid,QAAQ7P,GACtB1hB,EAAO,CACT0hB,MAAO4P,EACP3P,SAAUA,GAId,OAFA7pB,QAAQC,IAAI,kBAAmBiI,GAExB,IAAImxB,SAAQ,SAACC,EAASC,GAEzB,EAAKnB,QAAQvC,KAAK,kBAAmB3tB,GAAMyS,MAAK,SAAC5X,GAE7C,IAAMk2B,EAAczc,KAAE3Z,IAAIE,EAAK,QACzBmF,EAAOsU,KAAE3Z,IAAIo2B,EAAa,QAEhC,EAAKE,eAAejxB,GACpB,EAAKkxB,aAAaH,GAClB,EAAKR,SAASjM,UAGd,EAAKkM,uBAON9d,OAAM,SAACoE,GAEN,IAAM+J,EAAUvM,KAAE3Z,IAAImc,EAAK,uBAAwB,eACnD,OAAOua,EAAOxQ,W,uCAaT+H,EAAWD,GACxB,IAAMN,EAAU1xB,KAAK80B,SAAS9wB,IAAIiuB,GAC/BP,IACCA,EAAQC,QAAUD,EAAQC,QAAQqB,IAAIhB,GAAQ,GAC9ChyB,KAAK80B,SAAW90B,KAAK80B,SAAS9B,IAAIf,EAAWP,GAC7C1xB,KAAK83B,Y,uCAeT,OAAO93B,KAAK+O,OAAOgpB,MAAM8C,a,2CAGI,IAAdnJ,EAAa,uDAAH,GACnBO,EAAYtU,KAAE3Z,IAAI0tB,EAAS,OACjC1xB,KAAKw4B,WAAWvG,EAAWP,GAC3B1xB,KAAKo1B,mBAAmBnD,K,uCAKxB,OAAOjyB,KAAKqJ,O,2CAGK4oB,GAAW,IAAD,OAEvBP,EAAU1xB,KAAK80B,SAAS9wB,IAAIiuB,GAC5B,GAAIP,IAAY/T,KAAE3Z,IAAI0tB,EAAS,mBAAmB,CAE9C,IACMoF,EAAU,CACZC,QAAS,CACLgD,cAHMpc,KAAE3Z,IAAIhE,KAAK05B,MAAO,SAOhC15B,KAAKu5B,QAAQv1B,IAAb,uBAAiCiuB,EAAjC,aAAuD6E,GAAShb,MAAK,SAAC5X,GAClEwtB,EAAQoJ,iBAAkB,EAE1B,IAAMlI,EAAW1uB,EAAIf,KAErBwa,KAAEya,KAAKxF,GAAU,SAAC1I,GACd,EAAK0P,SAAShC,aAAa1N,MAE/B,EAAK4K,SAAW,EAAKA,SAAS9B,IAAIf,EAAWP,MAE9C3V,OAAM,SAACoE,GACNhf,QAAQC,IAAI,wCAAyC+e,S,oCAQjE,OAAOngB,KAAK45B,SAASzC,c,yCAGNt1B,GACf7B,KAAKw5B,gBAAkB33B,EACvB7B,KAAKi6B,qBAAqBp4B,GAC1B7B,KAAK83B,W,yCAIL,OADgB93B,KAAKw5B,gBAAkBx5B,KAAK80B,SAAS9wB,IAAIhE,KAAKw5B,iBAAmBx5B,KAAK80B,SAASiG,U,iCAIxF7Q,GAAyB,IAAD,OAAfyN,EAAe,wDACzB91B,EAAK8b,KAAE8U,SAAS9U,KAAE3Z,IAAIkmB,EAAS,QACrClqB,KAAK4yB,SAAW5yB,KAAK4yB,SAASI,IAAInxB,EAAIqoB,GACtC,IAAM+H,EAAYtU,KAAE8U,SAASvI,EAAQ+H,WAC/BP,EAAU1xB,KAAK80B,SAAS9wB,IAAIiuB,GAE9BP,GACAA,EAAQkB,SAAWlB,EAAQkB,SAASI,IAAInxB,GAAI,GAC5C6vB,EAAQgB,YAAc/U,KAAE3Z,IAAIkmB,EAAS,OAAQ,IAC7CwH,EAAQiG,OAASA,EAEjB33B,KAAK80B,SAAW90B,KAAK80B,SAAS9B,IAAIf,EAAWP,IAI7C1xB,KAAKu5B,QAAQv1B,IAAb,uBAAiCiuB,IAAanW,MAAK,SAAC/L,GAGhD,IAAM2hB,EAAU/T,KAAE3Z,IAAI+L,EAAU,QAQhC,EAAK6pB,SAAS/B,aAAanG,MAKnC1xB,KAAK83B,W,gCAGCpG,GAAyB,IAAhBqB,EAAe,wDAE9B,GAAGrB,EAAQ,CACP,IAAMM,EAAM,UAAMrU,KAAE3Z,IAAIhE,KAAKqJ,KAAM,MAAO,OACpC4oB,EAAYtU,KAAE3Z,IAAI0tB,EAAS,OAC3B6F,EAAM,CACRtF,UAAWA,EACX7D,QAAS2E,EACTyE,OAAQxF,GAEZ7wB,QAAQC,IAAI,mBAAoB6wB,GAChCjyB,KAAK45B,SAASlB,KACV,CACInwB,OAAQ,gBACR6lB,QAAS,CAACmJ,SAItBv3B,KAAK83B,W,iCAGEj2B,GAAkB,IAAdqoB,EAAa,uDAAH,GAEf7gB,EAAOrJ,KAAKqrB,iBAClBnB,EAAQ7gB,KAAOA,EACfrJ,KAAK4yB,SAAW5yB,KAAK4yB,SAASI,IAAInxB,EAAIqoB,GAEtC,IAAM+H,EAAYtU,KAAE3Z,IAAIkmB,EAAS,aACjC,GAAG+H,EAAU,CAGT,IAAIP,EAAU1xB,KAAK80B,SAAS9wB,IAAIiuB,GAEhCP,EAAQgB,YAAc/U,KAAE3Z,IAAIkmB,EAAS,OAAQ,IAG9ClqB,KAAK45B,SAASlB,KACV,CACKnwB,OAAQ,iBACR6lB,QAASsD,IAIjB1xB,KAAK45B,SAASlB,KACV,CACInwB,OAAQ,iBACR6lB,QAASlE,IAIjBwH,EAAQkB,SAAWlB,EAAQkB,SAASI,IAAInxB,GAAI,GAG5C6vB,EAAQmB,OAAQ,EAChB7yB,KAAK80B,SAAW90B,KAAK80B,SAAS9B,IAAIf,EAAWP,GAEjD1xB,KAAK83B,W,gDAG6C,IAA7BpG,EAA4B,uDAAlB,KAAMroB,EAAY,uDAAL,KAC5C,GAAIqoB,GAAYroB,EAAhB,CAGA,IAAM4oB,EAAYtU,KAAE3Z,IAAI0tB,EAAS,OAC3BM,EAASrU,KAAE3Z,IAAIqF,EAAM,OAC3BqoB,EAAQC,QAAUD,EAAQC,QAAQ9H,OAAOmI,GACzChyB,KAAK80B,SAAW90B,KAAK80B,SAAS9B,IAAIf,EAAWP,GAC7C1xB,KAAK83B,Y,oCAIL,OAAO93B,KAAK4yB,SAASiI,a,6CAEFnJ,GAAS,IAAD,OACvBkB,EAAW,IAAID,KAUnB,OARGjB,GACCA,EAAQkB,SAASxD,SAAQ,SAAC7sB,EAAOwJ,GAE7B,IAAMme,EAAU,EAAK0I,SAAS5uB,IAAI+H,GAClC6mB,EAAWA,EAASI,IAAKjnB,EAAKme,MAI/B0I,EAASiI,a,4CAIEnJ,GAAS,IAAD,OACtBC,EAAU,IAAIgB,KAelB,OAdGjB,GACCA,EAAQC,QAAQvC,SAAQ,SAAC7sB,EAAOwJ,GAE5B,IAAMimB,EAAM,UAAMjmB,GACZ1C,EAAO,EAAK0uB,MAAM/zB,IAAIguB,GAEtBgJ,EAAa,EAAK3P,iBACpB1N,KAAE3Z,IAAIg3B,EAAY,SAAWrd,KAAE3Z,IAAIqF,EAAM,SACzCsoB,EAAUA,EAAQqB,IAAIjnB,EAAK1C,OAMhCsoB,EAAQkJ,a,iCAIRh1B,GAAqB,IAAd6rB,EAAa,uDAAH,GACxB1xB,KAAK80B,SAAW90B,KAAK80B,SAAS9B,IAAd,UAAqBntB,GAAS6rB,GAG9C1xB,KAAK83B,W,oCAKL,OADA93B,KAAK80B,SAAW90B,KAAK80B,SAASmG,MAAK,SAACn3B,EAAGo3B,GAAJ,OAAUp3B,EAAEq3B,QAAUD,EAAEC,WACpDn7B,KAAK80B,SAAS+F,a,+BAGrB76B,KAAKs5B,IAAI8B,kB,KCrgBIC,ICCU/6B,Y,kDDA3B,WAAYqE,GAAO,IAAD,8BACd,cAAMA,IACD9E,MAAQ,CACT+qB,MAAO,IAAIwO,GAAJ,kBAHG,E,qDAMT,IACGxO,EAAU5qB,KAAKH,MAAf+qB,MACYA,EAAMuM,cAE1B,OACI,kBAAC,GAAD,CAAMvM,MAAUA,Q,GAZOtqB,cEyCpBypB,G,uKA5BZ,OACA,kBAAC,GAAD,KACC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,GAAD,CAAcrgB,KAAK,IAAIqe,OAAO,GAC7B,kBAAC,EAAD,OAGD,kBAAC,IAAD,CAAOre,KAAK,UACX,kBAAC4xB,GAAD,OAED,kBAAC,IAAD,CAAO5xB,KAAK,UACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,UACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,UACX,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAO5C,UAAWy0B,U,GAtBLj7B,aCJEk7B,QACW,cAA7B32B,OAAOsF,SAASsxB,UAEe,UAA7B52B,OAAOsF,SAASsxB,UAEhB52B,OAAOsF,SAASsxB,SAAShS,MACvB,2DCRNiS,IAAS1T,OACP,kBAAC,IAAM2T,WAAP,KACE,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCC,OAAO,uBACPC,SAAS,mCACTC,YAAaj3B,OAAOsF,SAASC,QAGzB,kBAAC,GAAD,SAMRgH,SAASC,eAAe,SD0GpB,kBAAmBqK,WACrBA,UAAUqgB,cAAcC,MACrBlgB,MAAK,SAAAmgB,GACJA,EAAaC,gBAEdngB,OAAM,SAAAC,GACL7a,QAAQ6a,MAAMA,EAAMkO,a,8XEnIf7C,G,qBAAK,IAAI8U,IAAM,kBAI5B9U,EAAG+U,QAAQ,GAAGC,OAAO,CACnBz3B,MACE,sFAGJyiB,EAAG+U,QAAQ,GAAGC,OAAO,IAGd,IAAMzb,EAAiB,uCAAG,WAAMzd,GAAN,iBAAAW,EAAA,6DACzBw4B,EAAW,CACfp3B,QAAS/B,EAAKtB,GACd06B,UAAWx8B,KAAKoxB,MAChB9rB,MAAOlC,EAAKkC,MACZC,aAAcnC,EAAKmC,aACnBk3B,cAAe,GANc,SASZnV,EAAGziB,MAAMZ,IAAI,CAAEkB,QAAS/B,EAAKtB,KATjB,YASzBoD,EATyB,gCAY7BoiB,EAAGziB,MAAMkzB,OAAO30B,EAAKtB,GAAI,CACvB06B,UAAWx8B,KAAKoxB,MAChBqL,cAAev3B,EAAKu3B,cAAgB,IAEtCr7B,QAAQC,IAAI,gBAhBiB,kBAiBtB6D,EAAKmP,QAjBiB,QAqB7BjT,QAAQC,IAAI,cACZimB,EAAGziB,MAAMglB,IAAI0S,GAtBgB,4CAAH,sDA2BjBpnB,EAAQ,uCAAG,WAAOrT,EAAIuS,GAAX,SAAAtQ,EAAA,sDAGtBujB,EAAGziB,MAAMkzB,OAAOj2B,EAAI,CAClBuS,OAAQA,IAJY,2CAAH,wDAQRgT,EAAU,uCAAG,4BAAAtjB,EAAA,sEACOujB,EAAGziB,MAC/B63B,QAAQ,aACRC,MAAM,KACNC,UACAC,UALqB,cAClBC,EADkB,yBAMjBA,GANiB,2CAAH,qDASV3V,EAAa,uCAAG,4BAAApjB,EAAA,sEACFujB,EAAGziB,MACzBk4B,MAAM,sBACNC,QAAQ,CAAC,QAASZ,IAAMa,QAAS,CAAC,QAASb,IAAMc,SACjDN,UACAC,UALwB,cACrBM,EADqB,yBAMpBA,GANoB,2CAAH,qDASb/V,EAAkB,uCAAG,4BAAArjB,EAAA,sEACFujB,EAAGziB,MAC9Bk4B,MAAM,6BACNC,QAAQ,CAAC,aAAcZ,IAAMa,QAAS,CAAC,aAAcb,IAAMc,SAC3DN,UACAC,UAL6B,cAC1BO,EAD0B,yBAMzBA,GANyB,2CAAH,qDASlB3V,EAAsB,uCAAG,4BAAA1jB,EAAA,sEAEhBujB,EAAGziB,MACpBk4B,MAAM,6BACNC,QAAQ,CAAC,cAAeZ,IAAMa,QAAS,CAAC,cAAeb,IAAMc,SAC7DG,QAAO,SAAAhR,UACCA,EAAE1mB,iBANuB,OAE9Bd,EAF8B,OAQpCzD,QAAQC,IAAIwD,GARwB,2CAAH,qDAWtBT,EAAY,uCAAG,WAAOtC,EAAI0L,GAAX,uBAAAzJ,EAAA,sEAExBujB,EAAGziB,MAAMkzB,OAAOj2B,EAAI,CAClB6D,cAAe,gBAEX23B,EALkB,iCAKmBx7B,EALnB,2BAMgB24B,QAAQ8C,IAAI,CAClDC,EAAiBF,GACjBE,EAAiBhwB,KARK,0CAMjBiwB,EANiB,KAMFC,EANE,KAUxBpW,EAAGziB,MAAMkzB,OAAOj2B,EAAI,CAClB6D,cAAe,aACfN,UAAWo4B,EACXr4B,MAAOs4B,IAbe,kBAejB,cAfiB,2HAAH,wDAqBZn5B,EAAe,uCAAG,WAAMzC,GAAN,SAAAiC,EAAA,sEACvBujB,EAAGziB,MAAMk4B,MAAM,CAAE53B,QAASrD,IAAMu7B,QAAO,SAAAhR,UACpCA,EAAEjnB,aACFinB,EAAE1mB,iBAHkB,gCAKtB,gBALsB,2CAAH,sDAQ5B,SAAS63B,EAAiBhwB,GACxB,IAAM8I,EAAM9I,EACZ,OAAO,IAAIitB,SAAQ,SAASC,EAASC,GACnC,IAAIgD,EAAM,IAAIC,eACdD,EAAIl8B,KAAK,MAAO,mCAAqC6U,GACrDqnB,EAAIE,aAAe,OACnBF,EAAIG,OAAS,WACX,IAAIz5B,EAASs5B,EAAIt5B,OACbA,GAAU,KAAOA,EAAS,IAC5Bq2B,EAAQiD,EAAI3tB,UAEZ2qB,EAAO,CACLt2B,OAAQA,EACR05B,WAAYJ,EAAII,cAItBJ,EAAIhF,OACJzjB,YAAW,WACTyoB,EAAIK,QACJL,EAAIl8B,KAAK,MAAO,mCAAqC6U,GAErDqnB,EAAIhF,SACH,U,mLC1IP,IAeO7vB,E,MAAUC,EAAOkC,QAAV,KAMCpB,IArBA,SAAC,GAAiC,IAAhChB,EAA+B,EAA/BA,SAAUvD,EAAqB,EAArBA,MAAOwE,EAAc,EAAdA,SAC/B,OACA,kBAAChB,EAAD,KACC,yBAAK1C,UAAU,UACd,4BAAKd,GACL,8BACA,kBAAC,IAAD,MACA,2BAAIwE,GACHjB,M,gCCbN,sDAEe,SAASe,EAAT,GAAkC,IAAnBf,EAAkB,EAAlBA,SAAUo1B,EAAQ,EAARA,KACrC,OACE,4BAAQ73B,UAAW63B,GAAOp1B,GAG/Be,EAAKs0B,aAAe,CACnBD,KAAM,gB,mBCRPz9B,EAAOC,QAAU,IAA0B,qC,oBCA3C,cAQA,IAAI09B,EAAaC,SAAyB,SAAhBpmB,KAAK+F,SAAqB,IAGhDsgB,EAAoB,IAAIvnB,OAAO,qBAGnC,IACI,GAAIwnB,GAAUA,EAAOC,KAAM,IAAIC,GAAgB,EACjD,MAAOpe,GACLoe,GAAgB,EA4DpB,IAjDA,IAAI/L,EAAW,SAASA,EAAS3wB,GAE7B,GAAIA,aAAc2wB,EAAU,OAAO3wB,EACnC,KAAM7B,gBAAgBwyB,GAAW,OAAO,IAAIA,EAAS3wB,GAKrD,GAHA7B,KAAKw+B,UAAY,WAGP,MAAN38B,GAA4B,kBAAPA,EAMrB,OAJA7B,KAAK6B,GAAK7B,KAAKy+B,SAAS58B,QAEpB2wB,EAASkM,iBAAgB1+B,KAAK2+B,KAAO3+B,KAAKyyB,SAAS,SAM3D,IAAImM,EAAQpM,EAASqM,QAAQh9B,GAG7B,IAAK+8B,GAAe,MAAN/8B,EACV,MAAM,IAAIwI,MACN,2FAED,GAAIu0B,GAAuB,kBAAP/8B,GAAiC,KAAdA,EAAG8F,QAAiB42B,EAC9D,OAAO,IAAI/L,EAAS,IAAI6L,EAAOx8B,EAAI,QAChC,GAAI+8B,GAAuB,kBAAP/8B,GAAiC,KAAdA,EAAG8F,OAC7C,OAAO6qB,EAASsM,oBAAoBj9B,GACjC,GAAU,MAANA,GAA4B,KAAdA,EAAG8F,OAGrB,IAAU,MAAN9F,GAAcA,EAAGk9B,YAExB,OAAOl9B,EAEP,MAAM,IAAIwI,MACN,2FANJrK,KAAK6B,GAAKA,EAUV2wB,EAASkM,iBAAgB1+B,KAAK2+B,KAAO3+B,KAAKyyB,SAAS,SAOvDuM,EAAW,GACNphB,EAAI,EAAGA,EAAI,IAAKA,IACrBohB,EAASphB,IAAMA,GAAK,GAAK,IAAM,IAAMA,EAAE6U,SAAS,IASpDD,EAASyM,UAAUF,YAAc,WAC7B,GAAIvM,EAASkM,gBAAkB1+B,KAAK2+B,KAAM,OAAO3+B,KAAK2+B,KAEtD,IAAIO,EAAY,GAChB,IAAKl/B,KAAK6B,KAAO7B,KAAK6B,GAAG8F,OACrB,MAAM,IAAI0C,MACN,8EACA4P,KAAKe,UAAUhb,KAAK6B,IACpB,KAIR,GAAI7B,KAAK6B,cAAcs9B,EAGnB,OAFAD,EAAYE,EAAap/B,KAAK6B,IAC1B2wB,EAASkM,iBAAgB1+B,KAAK2+B,KAAOO,GAClCA,EAGX,IAAK,IAAIthB,EAAI,EAAGA,EAAI5d,KAAK6B,GAAG8F,OAAQiW,IAChCshB,GAAaF,EAASh/B,KAAK6B,GAAGw9B,WAAWzhB,IAI7C,OADI4U,EAASkM,iBAAgB1+B,KAAK2+B,KAAOO,GAClCA,GAUX1M,EAASyM,UAAUK,QAAU,WACzB,OAAQ9M,EAAS3sB,OAAS2sB,EAAS3sB,MAAQ,GAAK,UAUpD2sB,EAASyM,UAAUM,OAAS,WACxB,OAAOv/B,KAAKs/B,WAUhB9M,EAASyM,UAAUR,SAAW,SAAS3+B,GAC/B,kBAAoBA,IACpBA,KAAUC,KAAKoxB,MAAQ,MAI3B,IAAIqO,GACoB,qBAAZC,GAA2C,IAAhBA,EAAQD,IACrCznB,KAAKC,MAAsB,IAAhBD,KAAK+F,UAChB2hB,EAAQD,KAAO,MACrBE,EAAM1/B,KAAKs/B,UAEXK,EAAS,IAAItB,EAAO,IAkBxB,OAhBAsB,EAAO,GAAY,IAAP7/B,EACZ6/B,EAAO,GAAM7/B,GAAQ,EAAK,IAC1B6/B,EAAO,GAAM7/B,GAAQ,GAAM,IAC3B6/B,EAAO,GAAM7/B,GAAQ,GAAM,IAE3B6/B,EAAO,GAAkB,IAAbzB,EACZyB,EAAO,GAAMzB,GAAc,EAAK,IAChCyB,EAAO,GAAMzB,GAAc,GAAM,IAEjCyB,EAAO,GAAW,IAANH,EACZG,EAAO,GAAMH,GAAO,EAAK,IAEzBG,EAAO,IAAY,IAAND,EACbC,EAAO,IAAOD,GAAO,EAAK,IAC1BC,EAAO,GAAMD,GAAO,GAAM,IAEnBC,GAUXnN,EAASyM,UAAUxM,SAAW,SAASmN,GAEnC,OAAI5/B,KAAK6B,IAAM7B,KAAK6B,GAAGg+B,KACZ7/B,KAAK6B,GAAG4wB,SAA2B,kBAAXmN,EAAsBA,EAAS,OAI3D5/B,KAAK++B,eAShBvM,EAASyM,UAAUa,QAAUtN,EAASyM,UAAUxM,SAQhDD,EAASyM,UAAUc,OAAS,WACxB,OAAO//B,KAAK++B,eAUhBvM,EAASyM,UAAUe,OAAS,SAAgBC,GAGxC,OAAIA,aAAmBzN,EACZxyB,KAAKyyB,aAAewN,EAAQxN,WAEhB,kBAAZwN,GACPzN,EAASqM,QAAQoB,IACE,KAAnBA,EAAQt4B,QACR3H,KAAK6B,cAAcs9B,EAEZc,IAAYjgC,KAAK6B,GAAG4wB,SAAS,UACV,kBAAZwN,GAAwBzN,EAASqM,QAAQoB,IAA+B,KAAnBA,EAAQt4B,OACpEs4B,EAAQC,gBAAkBlgC,KAAK++B,cACZ,kBAAZkB,GAAwBzN,EAASqM,QAAQoB,IAA+B,KAAnBA,EAAQt4B,OACpEs4B,IAAYjgC,KAAK6B,KACN,MAAXo+B,KAAoBA,aAAmBzN,GAAYyN,EAAQlB,eAC3DkB,EAAQlB,gBAAkB/+B,KAAK++B,eAY9CvM,EAASyM,UAAUkB,aAAe,WAC9B,IAAI5D,EAAY,IAAIx8B,KAChBD,EAAOE,KAAK6B,GAAG,GAAM7B,KAAK6B,GAAG,IAAM,EAAM7B,KAAK6B,GAAG,IAAM,GAAO7B,KAAK6B,GAAG,IAAM,GAEhF,OADA06B,EAAU6D,QAA2B,IAAnBroB,KAAKC,MAAMlY,IACtBy8B,GAMX/J,EAAS3sB,SAA2B,SAAhBkS,KAAK+F,UAKzB0U,EAAS6N,SAAW,WAChB,OAAO,IAAI7N,GAUfA,EAAS8N,eAAiB,SAAwBxgC,GAC9C,IAAI6/B,EAAS,IAAItB,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAO1D,OALAsB,EAAO,GAAY,IAAP7/B,EACZ6/B,EAAO,GAAM7/B,GAAQ,EAAK,IAC1B6/B,EAAO,GAAM7/B,GAAQ,GAAM,IAC3B6/B,EAAO,GAAM7/B,GAAQ,GAAM,IAEpB,IAAI0yB,EAASmN,IAKxB,IAAIY,EAAe,GAEnB,IADA3iB,EAAI,EACGA,EAAI,IAAI2iB,EAAa,GAAO3iB,GAAKA,IACxC,KAAOA,EAAI,IAAI2iB,EAAa,GAAY3iB,GAAK2iB,EAAa,GAAY3iB,GAAKA,IAE3E,IAAIuhB,EAAUd,EACVe,EAAe,SAASoB,GACxB,OAAOA,EAAM/N,SAAS,QAU1BD,EAASsM,oBAAsB,SAA6B2B,GAExD,GAAsB,qBAAXA,GAAqC,MAAVA,GAAoC,KAAlBA,EAAO94B,OAC3D,MAAM,IAAI0C,MACN,2FAKR,GAAIk0B,EAAe,OAAO,IAAI/L,EAAS,IAAI6L,EAAOoC,EAAQ,QAO1D,IAJA,IAAIC,EAAQ,IAAIvB,EAAQ,IACpBwB,EAAI,EACJ/iB,EAAI,EAEDA,EAAI,IACP8iB,EAAMC,KAAQJ,EAAaE,EAAOpB,WAAWzhB,OAAS,EAAK2iB,EAAaE,EAAOpB,WAAWzhB,MAG9F,OAAO,IAAI4U,EAASkO,IASxBlO,EAASqM,QAAU,SAAiBh9B,GAChC,OAAU,MAANA,IAEc,kBAAPA,IAIO,kBAAPA,EACc,KAAdA,EAAG8F,QAAgC,KAAd9F,EAAG8F,QAAiBy2B,EAAkBwC,KAAK/+B,GAGvEA,aAAc2wB,IAId3wB,aAAcs9B,KAKdt9B,EAAGk9B,cACqB,KAAjBl9B,EAAGA,GAAG8F,QAAmC,KAAjB9F,EAAGA,GAAG8F,QAAiBy2B,EAAkBwC,KAAK/+B,EAAGA,SASxFg/B,OAAOC,eAAetO,EAASyM,UAAW,iBAAkB,CACxD8B,YAAY,EACZ/8B,IAAK,WACD,OAAOhE,KAAK6B,GAAG,GAAM7B,KAAK6B,GAAG,IAAM,EAAM7B,KAAK6B,GAAG,IAAM,GAAO7B,KAAK6B,GAAG,IAAM,IAEhFmxB,IAAK,SAASzwB,GAEVvC,KAAK6B,GAAG,GAAa,IAARU,EACbvC,KAAK6B,GAAG,GAAMU,GAAS,EAAK,IAC5BvC,KAAK6B,GAAG,GAAMU,GAAS,GAAM,IAC7BvC,KAAK6B,GAAG,GAAMU,GAAS,GAAM,OAOrChC,EAAOC,QAAUgyB,EACjBjyB,EAAOC,QAAQgyB,SAAWA,EAC1BjyB,EAAOC,QAAQwgC,SAAWxO,I,+DC5X1B,qBASe/kB,QAAMI,OAAO,CAC1BC,QAAS,wCACT7J,OAAQ,CACNg9B,KAAM,UACNC,gBAAiB,KACjB99B,KAAM,QACN2I,IAZ2B,WAC7B,IAAMo1B,EAAO1B,0CAAmC2B,MAAM,KAEtD,OAAOD,EADQppB,KAAKC,MAAMD,KAAK+F,SAAW/F,KAAKC,MAAMmpB,EAAKx5B,UAUnD05B,O,gCCfT,qBAEe5zB,QAAMI,OAAO,CAC1BC,QAAS,gC","file":"static/js/main.331cf5df.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Datetime1 extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = { time: new Date() }\r\n    }\r\n    loopTime()\r\n    {\r\n        this.setState({\r\n            time: new Date()\r\n        })\r\n    }\r\n    componentDidMount()\r\n    {\r\n        setInterval(() =>\r\n            this.loopTime(), 1000\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                VietNam, {this.state.time.toLocaleDateString()}-{this.state.time.toLocaleTimeString()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Datetime1\r\n","module.exports = __webpack_public_path__ + \"static/media/imgWeather1.691f92b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imgWeather3.f2de9424.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dottedCircle.c96ca893.svg\";","module.exports = __webpack_public_path__ + \"static/media/CompletedTick.ffcb10fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/DownloadIcon.e927ae19.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.bfe0ee19.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.f4e2a770.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.8c523a54.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-img.20a90984.svg\";","import React, { useContext, useState, useEffect } from \"react\";\r\n// import {\r\n//   List,\r\n//   AutoSizer,\r\n//   CellMeasurer,\r\n//   CellMeasurerCache\r\n// } from \"react-virtualized\";\r\n\r\nimport { DynamicSizeList as List } from \"react-window-dynamic\";\r\n\r\n\r\nimport CompletedTick from \"../images/CompletedTick.svg\";\r\nimport DownloadIcon from \"../images/DownloadIcon.svg\";\r\n\r\nimport {\r\n  ListItem,\r\n  Typography,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Divider,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\n\r\nimport DownloadDeleteDialog from \"./DownloadDeleteDialog\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nimport getAudioLink from \"../apis/getAudioLink\";\r\nimport { downloadSong, deleteSongAudio } from \"../external/saveSong\";\r\n\r\n// const cache = new CellMeasurerCache({\r\n//   minHeight: 50,\r\n//   defaultHeight: 60,\r\n//   fixedWidth: true\r\n//   // keyMapper: () => 1\r\n// });\r\n\r\nlet currentId;\r\n\r\nexport const useSongMethods = songId => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n\r\n  const setSnackbarMsg = React.useCallback(\r\n    data => {\r\n      dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [deleteDialogState, setDeleteDialogState] = useState(false);\r\n  const [dontAskPopup, setDontAskPopup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //convert string to bool\r\n    const popupLocalState = localStorage.getItem(\"dontAskPopup\") === \"true\";\r\n    setDontAskPopup(popupLocalState);\r\n    // for popup settings\r\n  }, []);\r\n\r\n  const handleDownload = async songId => {\r\n    // console.log(\"here is the id\", songId);\r\n    const res = await getAudioLink.get(\"/song\", {\r\n      params: { id: songId }\r\n    });\r\n    // first we will fetch the song link then we will download it\r\n    // the download song function takes id and the url\r\n    const status = await downloadSong(songId, res.data);\r\n    // after the downloading is done we will remove the downloading class\r\n    // set the snackbar message\r\n    setSnackbarMsg(\"Song Downloaded\");\r\n    console.log(\"song status\", status);\r\n  };\r\n\r\n  const disablePopup = () => {\r\n    localStorage.setItem(\"dontAskPopup\", true);\r\n    setDontAskPopup(true);\r\n  };\r\n\r\n  const deleteTheSong = async checkBox => {\r\n    const deleted = await deleteSongAudio(currentId);\r\n    setDeleteDialogState(false);\r\n    setSnackbarMsg(\"Deleted Successfully\");\r\n\r\n    console.log(currentId, checkBox);\r\n    // we will set it to localstorage the popup option\r\n    if (checkBox) {\r\n      disablePopup();\r\n    }\r\n  };\r\n\r\n  // hadnling download dialog\r\n  const handleRemoveSong = songId => {\r\n    console.log(\"handle remove dude\");\r\n    currentId = songId;\r\n    // when user clicks on the download badge we will check the state\r\n    // then delete the song without showing the popup if dontAskPopup is true\r\n    // and delete the song by calling deleteTheSong\r\n    dontAskPopup ? deleteTheSong() : setDeleteDialogState(true);\r\n  };\r\n\r\n  const deleteDialogComponent = dontAskPopup ? null : (\r\n    <DownloadDeleteDialog\r\n      isOpen={deleteDialogState}\r\n      handleCancel={() => setDeleteDialogState(false)} // we will just hide the dialog on cancel\r\n      handleDelete={deleteTheSong} //if user wants to delete the song we will just do it\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleDownload,\r\n    handleRemoveSong,\r\n    deleteTheSong,\r\n    dontAskPopup,\r\n    setDeleteDialogState,\r\n    deleteDialogState,\r\n    deleteDialogComponent\r\n  };\r\n};\r\n\r\nconst RenderDatabase = props => {\r\n  const songs = props.songs;\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n  const setSnackbarMsg = data => {\r\n    dispatch({ type: \"setSnakbarMsg\", snippet: data });\r\n  };\r\n\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  const handleClick = song => {\r\n    // set all the info of current clicked video in this object\r\n    setCurrentVideoSnippet({\r\n      id: song.videoId,\r\n      audio: song.audio,\r\n      thumbnail: song.thumbnail,\r\n      title: song.title,\r\n      channelTitle: song.channelTitle,\r\n      maxThumbnail: `https://img.youtube.com/vi/${song.videoId}/maxresdefault.jpg`,\r\n      sdThumbnail: `https://img.youtube.com/vi/${song.videoId}/sddefault.jpg`\r\n      // this is the url of the max resolution of thumbnail\r\n    });\r\n  };\r\n\r\n  const {\r\n    handleDownload,\r\n    handleRemoveSong,\r\n    deleteDialogComponent\r\n  } = useSongMethods();\r\n\r\n  const returnAnimatedClass = song => {\r\n    if (song.downloadState === \"downloading\") {\r\n      console.log(song.downloadState);\r\n      return \"downloading-animation\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setWindowHeight(window.innerHeight);\r\n  });\r\n\r\n  const renderResult = songs.map((song, index) => {\r\n    return (\r\n      <>\r\n        <ListItem\r\n          alignItems=\"flex-start\"\r\n          button\r\n          onClick={() => handleClick(song)}\r\n          // component={Link}\r\n          // to={{ pathname: \"/play\", search: `?id=${song.videoId}`, state: { modal: true } }}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              className=\"searchThumb\"\r\n              style={{ width: \"60px\", height: \"60px\", marginRight: \"15px\" }}\r\n              alt={song.title}\r\n              src={`https://img.youtube.com/vi/${song.videoId}/default.jpg`}\r\n            />\r\n          </ListItemAvatar>\r\n          {/* we will play the song when clicked on title */}\r\n          <ListItemText\r\n            primary={song.title}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {song.channelTitle}\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <div\r\n          className=\"download-container\"\r\n          onClick={() =>\r\n            song.audio\r\n              ? handleRemoveSong(song.videoId)\r\n              : handleDownload(song.videoId)\r\n          }\r\n        >\r\n          <div className=\"badge-container\">\r\n            {/* if there is audio file then we will show tick mark icon */}\r\n            <img\r\n              className={returnAnimatedClass(song)}\r\n              src={song.audio ? CompletedTick : DownloadIcon}\r\n              alt=\"downloading icon\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n\r\n  const renderItem = React.forwardRef((row, ref) => (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        ...row.style,\r\n        maxWidth: \"1000px\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\"\r\n      }}\r\n    >\r\n      {renderResult[row.index]}\r\n      <Divider />\r\n    </div>\r\n  ));\r\n  return (\r\n    <>\r\n      {deleteDialogComponent}\r\n\r\n      <List\r\n        height={window.innerHeight - 100}\r\n        itemCount={songs.length}\r\n        width={window.innerWidth}\r\n      >\r\n        {renderItem}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderDatabase;\r\n","import React, { useState } from \"react\";\r\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst DownloadDeleteDialog = ({ isOpen, handleCancel, handleDelete }) => {\r\n  const [checkBox, setCheckBox] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    console.log(checkBox);\r\n  }, [checkBox]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        style={{ zIndex: 1500 }}\r\n        open={isOpen}\r\n        onClose={handleCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Delete this song from your device ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color=\"primary\"\r\n                checked={checkBox}\r\n                onChange={e => setCheckBox(e.target.checked)}\r\n                value=\"checkBox\"\r\n              />\r\n            }\r\n            label=\"Don't ask again\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => handleDelete(checkBox)} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadDeleteDialog;\r\n","module.exports = __webpack_public_path__ + \"static/media/Logosvg3.fe8d21d4.svg\";","import React, { useReducer } from \"react\";\r\n\r\nexport const GlobalContext = React.createContext();\r\n\r\nconst initialState = {\r\n  searchState: \"home\",\r\n  searchResult: [],\r\n  relatedVideos: [],\r\n  menuOpen: false,\r\n  snackbarMsg: false,\r\n  currentVideoSnippet: {},\r\n  themeSelectValue: \"Default\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"setCurrentVideoSnippet\":\r\n      return {\r\n        ...state,\r\n        currentVideoSnippet: action.snippet\r\n      };\r\n\r\n    case \"setRelatedVideos\": {\r\n      return {\r\n        ...state,\r\n        relatedVideos: action.snippet\r\n      };\r\n    }\r\n    case \"setSnackbarMsg\": {\r\n      return {\r\n        ...state,\r\n        snackbarMsg: action.snippet\r\n      };\r\n    }\r\n    case \"setThemeSelectValue\": {\r\n      return {\r\n        ...state,\r\n        themeSelectValue: action.snippet\r\n      };\r\n    }\r\n    case \"setSearchState\": {\r\n      return {\r\n        ...state,\r\n        searchState: action.snippet\r\n      };\r\n    }\r\n    case \"setSearchResult\": {\r\n      return {\r\n        ...state,\r\n        searchResult: action.snippet\r\n      };\r\n    }\r\n    case \"setMenuOpen\": {\r\n      return {\r\n        ...state,\r\n        menuOpen: action.snippet\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const GlobalState = props => {\r\n  const globalState = useReducer(reducer, initialState);\r\n  return (\r\n    <GlobalContext.Provider value={globalState}>\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Hero from \"../components/Hero\";\r\nimport Banner from \"../components/Banner\";\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Divider} from '@material-ui/core';\r\n\r\nconst Home = () => {\r\n\t\tconst {\r\n\t\t\tisAuthenticated,\r\n\t\t\tloginWithRedirect,\r\n\t\t\tlogout,\r\n\t\t\tuser,\r\n\t\t\tisLoading,\r\n\t\t  } = useAuth0();\r\n\t\t  const [cookies, setCookie] = useCookies(['name']);\r\n\t\t  const isUser = isAuthenticated && user;\r\n\t\t  setCookie('name', {user} , { path: '/' });\r\n\t \treturn (\r\n\t \t<>\r\n\t \t<Hero>\r\n\t \t\t<Banner title=\"Welcome to nDsApp\" subtitle=\"\r\n\t\t\t\tInteresting Experience Right Now\">\r\n\t\t\t\t<Wrapper>\r\n\t\t\t\t<Divider className=\"divider\"/>\r\n\t\t\t\t{isUser && user.picture &&  <img src={user.picture} alt={user.name} />}\r\n\t\t\t\t{isUser && user.name && <h4>Welcome, <strong>{user.nickname.toUpperCase()}</strong></h4>}     \r\n\t\t\t\t{isUser ?\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Link className=\"btn-primary\" onClick={() => {logout({returnTo:window.location.origin})}}>logout</Link>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Link className=\"btn-primary\" onClick={loginWithRedirect}>login</Link>\r\n\t\t\t\t}\r\n\t\t\t</Wrapper>\r\n\t \t \t</Banner>\r\n\t \t </Hero>\r\n\t \t </>\r\n\t \t);\r\n\t};\r\n\r\n\tconst Wrapper = styled.nav`\r\n\th4 {\r\n\t\tmargin-bottom: 0;\r\n\t\tfont-weight: 400;\r\n\t}\r\n\timg {\r\n\t\twidth: 60px !important;\r\n\t\theight: 60px;\r\n\t\tborder-radius: 50%;\r\n\t\tobject-fit: cover;\r\n\t}\r\n\t.divider{\r\n\t\twidth: 100%;\r\n    \tmargin-bottom: 2rem;\r\n\t\tborder-top: .1rem solid  var(--clr-grey-5);\r\n\t}\r\n\t.btn-primary{\r\n\t\tmargin-top: 1rem;\r\n\t}\r\n\t`;\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport Hero from \"../components/Hero\";\r\nimport {Link} from 'react-router-dom';\r\nimport Banner from '../components/Banner';\r\n\r\n//import {Grid, Cell, ProgressBar} from 'react-mdl';\r\nclass Error extends Component {\r\n\t render() {\r\n\t \treturn(\r\n \t\t\t\t<Hero>\r\n \t\t\t\t\t<Banner title='404' subtitle=\"Page Not Found\">\r\n \t\t\t\t\t\t<Link to='/home' className=\"btn-primary\">\r\n \t\t\t\t\t\tReturn Home\r\n \t\t\t\t\t\t</Link>\r\n \t\t\t\t\t </Banner>\r\n \t\t\t\t </Hero>\r\n\t \t\t);\r\n\t }\r\n}\r\nexport default Error;","import React, { Component } from 'react';\r\nimport logo from '../images/logoSvg.svg';\r\nimport {FaAlignRight} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nclass Navbar extends Component {\r\n\tstate={\r\n\t\tisOpen:false\r\n\t}\r\n\thandleToggle = () =>{\r\n\tthis.setState({isOpen:!this.state.isOpen})\r\n\t\r\n};\r\n\r\n\t render() {\r\n\t \treturn(\r\n\t \t\t<nav className=\"navbar\">\r\n\t\t\t\t<div className=\"nav-center\">\r\n\t \t\t\t\t<div className=\"nav-header\">\r\n\t \t\t\t\t\t<Link to=\"/\">\r\n\t \t\t\t\t\t\t<img style={{maxHeight: \"2.6rem\", maxWidth: \"2.6rem\"}} className=\"logoApp\" src={logo} alt=\"Beach Resort\" />\r\n\t \t\t\t\t\t</Link>\r\n\t \t\t\t\t\t<button type=\"button\" \r\n\t \t\t\t\t\t\tclassName=\"nav-btn\"\r\n\t\t\t\t\t\t\tonClick={this.handleToggle}\r\n\t\t\t\t\t\t>\r\n\t \t\t\t\t\t<FaAlignRight className=\"nav-icon\" />\r\n\t \t\t\t\t\t</button>\r\n\t \t\t\t\t</div>\r\n\t\t\t\t\t<ul className={this.state.isOpen ? \"nav-links show-nav\" : \"nav-links\"}>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/page1\">Page1</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/page2\">Page2</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to=\"/page3\">Page3</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t \t\t\t</div>\r\n\t \t\t</nav>\r\n\r\n\t \t\t);\r\n\t }\r\n};\r\n\r\nexport default Navbar;","import React from 'react'\r\n// import styled from 'styled-components';\r\n// import Context1 from \"../Context1\";\r\n\r\n const Content1 = (props) => {\r\n    return (\r\n      <>{props.children}</>\r\n    ); \r\n  };\r\n  // const Wrapper = styled.section`\r\n  //   min-height: 100vh;\r\n  //   display: grid;\r\n  //   place-items: center;\r\n  //   align-content:center;\r\n  // `;\r\nexport default Content1","import {createContext} from \"react\";\r\n\r\nconst Context1 = createContext();\r\n\r\nexport default Context1","import React, {useContext} from 'react'\r\nimport styled from 'styled-components';\r\nimport { WiThermometer, WiHumidity, WiBarometer, WiCloudyGusts } from 'react-icons/wi';\r\n\r\nimport Context1 from \"../Context1\";\r\n\r\nconst Detail1 = () => {\r\n    \r\n    const {coording, city, wind, weathers} = useContext(Context1);\r\n    const { temp, humidity, pressure} = weathers;\r\n    const { lat, lon } = coording;\r\n    const { speed } = wind;\r\n    const {name} = city;\r\n\r\n    const items = [\r\n        {\r\n        id: 2,\r\n          icon:<WiThermometer className=\"icon\" />,\r\n          label:'temp',\r\n          value: (temp-273.15).toFixed(2),\r\n          color: 'pink',\r\n          unit: 'C',\r\n\r\n      },\r\n      {\r\n        id: 3,\r\n          icon:<WiHumidity className=\"icon\" />,\r\n          label:'humidity',\r\n          value: humidity,\r\n          color: 'green',\r\n          unit: '%',\r\n      },\r\n      {\r\n        id: 4,\r\n          icon:<WiBarometer className=\"icon\" />,\r\n          label:'pressure',\r\n          value: pressure,\r\n          color: 'purple',\r\n          unit: 'hPa',\r\n      },\r\n      {\r\n        id: 1,\r\n          icon:<WiCloudyGusts className=\"icon\" />,\r\n          label:'windspeed',\r\n          value: speed,\r\n          color: 'yellow',\r\n          unit: 'm/s',\r\n      },\r\n      ];\r\n    return (\r\n        <section className='section'>\r\n        <h4>Weather forecast for <span className=\"weather-city\">{name}</span></h4>\r\n        <p>Coordinates: <span className=\"coord-city\">{lat},{lon}</span></p>\r\n        <Wrapper>\r\n            {items.map((item) => {\r\n            return <Item key={item.id} {...item}></Item>;\r\n            })}\r\n        </Wrapper>\r\n        </section>\r\n  );\r\n};\r\n\r\nconst Item = ({icon, label, value, color, unit}) => {\r\n    return <article className=\"item\">\r\n      <span className={color}>{icon}</span>\r\n        <p>{value}{unit}</p>\r\n        <h4>{label}</h4>\r\n\r\n    </article>\r\n  }\r\n\r\nconst Wrapper = styled.section`\r\n    display: grid;\r\n    grid-template-columns: repeat( minmax(260px, 1fr));\r\n    gap: 1rem 2rem;\r\n    @media (max-width: 640px) {\r\n    grid-template-columns: repeat( minmax(260px, 1fr));\r\n    /* .item{\r\n        \r\n        padding: 1rem 2rem 1rem 2rem;\r\n    } */\r\n    }\r\n.item {\r\n    border-radius: var(--radius);\r\n    padding: 1rem 4rem 1rem 4rem;\r\n    background: var(--clr-white);\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: auto 1fr;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    span {\r\n        width: 3rem;\r\n        height: 3rem;\r\n        display: grid;\r\n        place-items: center;\r\n        border-radius: 50%;\r\n    }\r\n    .icon {\r\n        font-size: 1.5rem;\r\n    }\r\n    h4 {\r\n        color: rgba(0, 0, 0, 0.5);\r\n        margin-bottom: 0;\r\n        letter-spacing: 0;\r\n        text-transform: capitalize;\r\n    }\r\n    p {\r\n        color: rgba(0, 0, 0, 0.5);\r\n        margin-bottom: 0;\r\n        margin-top: 0rem;\r\n        /* text-transform: capitalize; */\r\n    }\r\n    .pink {\r\n        background: #ffe0f0;\r\n        color: #da4a91;\r\n    }\r\n    .green {\r\n        background: var(--clr-primary-10);\r\n        color: var(--clr-primary-5);\r\n    }\r\n    .purple {\r\n        background: #e6e6ff;\r\n        color: #5d55fa;\r\n    }\r\n    .yellow {\r\n        background: var(--clr-primary-9) ;\r\n        color: rgb(221, 141, 37);\r\n    }\r\n    }\r\n`;\r\nexport default Detail1\r\n","import React, {useContext} from 'react'\r\nimport styled from 'styled-components';\r\n\r\nimport Context1 from \"../Context1\";\r\n\r\n\r\nconst Search1 = () => {\r\n   const {api_call} = useContext(Context1);\r\n    return (\r\n        <Wrapper>\r\n        <form onSubmit={api_call} className='form-control'>\r\n        <input name=\"location\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Type City/Country\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n        </Wrapper>\r\n    );\r\n};\r\n    const Wrapper = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    gap: 1rem 1.75rem;\r\n    @media (min-width: 768px) {\r\n      grid-template-columns: 1fr max-content;\r\n      align-items: center;\r\n      h3 {\r\n        padding: 0 0.5rem;\r\n      }\r\n    }\r\n    .form-control {\r\n      background: var(--clr-white);\r\n      display: grid;\r\n      align-items: center;\r\n      grid-template-columns: auto 1fr auto;\r\n      column-gap: 0.5rem;\r\n      border-radius: 5px;\r\n      padding: 0.5rem;\r\n      input {\r\n        border-color: transparent;\r\n        outline-color: var(--clr-white);\r\n        letter-spacing: var(--spacing);\r\n        color: var(--clr-grey-3);\r\n        padding: 0.75rem 1rem;\r\n        font-size: .75rem\r\n      }\r\n      input::placeholder {\r\n        color: var(--clr-grey-3);\r\n        text-transform: capitalize;\r\n        letter-spacing: var(--spacing);\r\n      }\r\n      button {\r\n        border-radius: 5px;\r\n        border-color: transparent;\r\n        padding: 0.5rem 0.75rem;\r\n        text-transform: capitalize;\r\n        letter-spacing: var(--spacing);\r\n        background: var(--clr-primary-5);\r\n        color: var(--clr-white);\r\n        transition: var(--transition);\r\n        cursor: pointer;\r\n        &:hover {\r\n          background: var(--clr-primary-8);\r\n          color: var(--clr-primary-1);\r\n        }\r\n      }\r\n    }\r\n  `;\r\nexport default Search1\r\n","import styled from 'styled-components';\r\nimport defaultImg from '../images/imgWeather1.jpg';\r\nimport defaultImg1 from '../images/imgWeather3.jpg';\r\n\r\nconst StyledHero = styled.header`\r\nmin-height: 82vh;\r\nbackground: url(${props => (props.img ? defaultImg1 : defaultImg )}) center/cover no-repeat;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\nexport default StyledHero;","export default {\r\n\"name\":\"Ho Chi Minh City\"\r\n};\r\n    \r\n\r\n","export default \r\n    {\r\n        \"speed\":3.6,\"deg\":230\r\n    };\r\n","export default {\r\n    \"lon\":106.67,\"lat\":10.75\r\n};","export default {\r\n    \"temp\":300.15,\"feels_like\":303.95,\"temp_min\":300.15,\"temp_max\":300.15,\"pressure\":1009,\"humidity\":88\r\n};\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n// import Hero from './Hero';\r\nimport Banner from './Banner';\r\n// import Main1 from './Main1';\r\nimport axios from 'axios';\r\nimport Content1 from './Content1';\r\nimport Detail1 from './Detail1';\r\nimport Search1 from './Search1';\r\nimport Context1 from '../Context1';\r\nimport StyledHero from './StyleHero';\r\n// import defaultImg from '../images/imgWeather1.jpg';\r\nimport mock1 from \"./data1.js/mockName\";\r\nimport mock2 from \"./data1.js/mockWind\";\r\nimport mock3 from \"./data1.js/mockCoord\";\r\nimport mock4 from \"./data1.js/mockMain\";\r\nimport Datetime1 from './Datetime1';\r\n\r\n\r\n\r\n\r\n\r\nconst App1 = () => {\r\n  const [weathers, setWeather] = useState(mock4);\r\n  const [coording, setCoord] = useState(mock3);\r\n  const [wind, setWind] = useState(mock2); \r\n  let [img, setImg] = useState(\"\");\r\n  const [city, setCity] = useState(mock1);\r\n    const api_call = async e => {\r\n    e.preventDefault();\r\n    const location = e.target.elements.location.value;\r\n    const API_KEY = \"cc8f77093d29a14ebde27ae45bf28497\";\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}`;\r\n    const req = axios.get(url) ;\r\n    const res = await req ;\r\n   \r\n    setCoord(res.data.coord);\r\n    setWind(res.data.wind);\r\n    setWeather(res.data.main);\r\n    setCity(res.data);\r\n    \r\n    // \r\n    if((res.data.main.temp))\r\n    {\r\n      setImg(\"../images/defaultBcg.jpg\");\r\n    }\r\n    else {\r\n      setImg(\"../images/defaultBcg.jpg\");\r\n    }\r\n  }\r\n \r\n  // useEffect(() => {\r\n  //   api_call()\r\n   \r\n  // }, [])\r\n    return (\r\n      <StyledHero>\r\n         <Wrapper>\r\n          <div className='container'>\r\n            <Banner title=\"Weather App\" subtitle=\"Where you pass the mind?\">\r\n              <Content1>\r\n                <Context1.Provider value={{ api_call, weathers, coording, wind, city }}>\r\n                  <Search1 api_call={api_call}/>\r\n                  {weathers && <Detail1 /> }\r\n                  </Context1.Provider>\r\n              </Content1>\r\n            </Banner>\r\n          </div>\r\n         </Wrapper>\r\n      </StyledHero>\r\n       \r\n    );\r\n  };\r\n  const Wrapper = styled.section`\r\n    min-height: 100vh;\r\n    display: grid;\r\n    width: 60vw;\r\n    place-items: center;\r\n    text-align: center;\r\n    /* .container {\r\n      width: 90vw;\r\n      max-width: 600px;\r\n      text-align: center;\r\n    } */\r\n  `;\r\nexport default App1\r\n","import React from \"react\"\r\nimport App1 from \"../components/App1\"\r\n\r\nconst Page1 = () => {\r\n    return (\r\n        <App1 />\r\n    )\r\n}\r\nexport default Page1","import axios from \"axios\";\nimport jsonpAdapter from \"axios-jsonp\"\n\nexport default axios.create({\n  baseURL: \"https://suggestqueries.google.com/complete/search?\",\n  adapter: jsonpAdapter,\n  params: {\n    hl: \"en\", // Language\n    ds: \"yt\", // Restrict lookup to youtube\n    client: \"youtube\" // force youtube style response, i.e. jsonp\n  }\n});\n","import React from \"react\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst AutoSearchResult = ({ results, onSearchSelect }) => {\n  let renderResult = [];\n  if (results) {\n    renderResult = results.map((result, index) => {\n      return (\n        <ListItem key={index} onClick={() => onSearchSelect(result[0])} button>\n          <ListItemIcon style={{ paddingLeft: \"16px\" }}>\n            <Search />\n          </ListItemIcon>\n          <ListItemText primary={result[0]} />\n        </ListItem>\n      );\n    });\n  }\n  return <List>{renderResult}</List>;\n};\n\nexport default AutoSearchResult;\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  InputBase,\r\n  IconButton,\r\n  Popper,\r\n  CircularProgress,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport youtubeSearch from \"../../apis/youtubeSearch\";\r\nimport { GlobalContext } from \"../GlobalState\";\r\nimport suggestSearch from \"../../apis/suggestSearch\";\r\nimport AutoSearchResult from \"./AutoSearchResult\";\r\n\r\n\r\nconst SearchBox = ({ history, location }) => {\r\n  let params = new URLSearchParams(location.search);\r\n\r\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\r\n\r\n  const setSearchState = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setSearchState\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setSearchResult = useCallback(\r\n    data => {\r\n      console.log(data);\r\n      dispatch({ type: \"setSearchResult\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [autoSearchData, setAutoSearch] = useState(\"\");\r\n\r\n  const [ytSearchQuery, setYtSearchQuery] = useState(null);\r\n\r\n  // toggle popper\r\n  const [isPopperOpen, setPopper] = useState(true);\r\n\r\n  console.log(\"search box re rendered\");\r\n\r\n  // get back the selected search data\r\n  const onSearchSelect = result => {\r\n    setSearchQuery(result);\r\n    setYtSearchQuery(result);\r\n    setSearchState(\"searching\");\r\n    history.push({ pathname: \"/search\", search: `?q=${result}` });\r\n  };\r\n\r\n  // when user hits enter then also fetch the data from yt api\r\n  const onSearchSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.lastChild);\r\n    e.target.lastChild.lastChild.blur();\r\n    setSearchState(\"completed\");\r\n    setYtSearchQuery(searchQuery);\r\n    history.push({ pathname: \"/search\", search: `?q=${searchQuery}` });\r\n  };\r\n\r\n  // for controlled input change\r\n  const onChange = e => {\r\n    setSearchQuery(e.target.value);\r\n    getAutocomplete();\r\n  };\r\n\r\n  // get autocomplete data form api\r\n  const getAutocomplete = async () => {\r\n    const response = await suggestSearch.get(\"/\", {\r\n      params: {\r\n        q: searchQuery\r\n      }\r\n    });\r\n    setAutoSearch(response.data[0]);\r\n  };\r\n\r\n  // get youtube search result from api\r\n  useEffect(() => {\r\n    const searchYt = async data => {\r\n      const res = await youtubeSearch.get(\"/search\", {\r\n        params: {\r\n          q: data,\r\n          maxResults: 15\r\n        }\r\n      });\r\n      setSearchResult(res.data.items);\r\n      setSearchState(\"completed\");\r\n    };\r\n    // only search if there is any value\r\n    if (ytSearchQuery && ytSearchQuery !== \"\") {\r\n      searchYt(ytSearchQuery);\r\n    }\r\n    // console.log(ytSearchQuery);\r\n  }, [ytSearchQuery, setSearchResult, setSearchState]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"search state\", searchState);\r\n  }, [searchState]);\r\n\r\n  useEffect(() => {\r\n    // Listen for changes to the current location.\r\n    const query = params.get(\"q\");\r\n    if (query) {\r\n      setYtSearchQuery(query);\r\n      setSearchQuery(query);\r\n      setSearchState(\"searching\");\r\n      console.log(\"changing query to\", query);\r\n    }\r\n\r\n    // const unlisten = history.listen(location => {\r\n    //   // setYtSearchQuery(params.get(\"q\"));\r\n    //   // we will se the q from params\r\n    //   // location is an object like window.location\r\n    //   const path = location.pathname;\r\n    //   // if (path.slice(1, 7) === \"search\" || path.slice(1, 5) === \"song\") {\r\n    //   //   setSearchState(\"searched\");\r\n    //   // } else {\r\n    //   //   setSearchState(\"home\");\r\n    //   // }\r\n    // });\r\n  }, [setSearchState, setYtSearchQuery]);\r\n\r\n  // show loading icon while we fetch the results from api\r\n\r\n  const popperResult = () => {\r\n    switch (searchState) {\r\n      case \"searching\":\r\n        return (\r\n          <Grid\r\n            style={{ height: \"100vh\" }}\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <CircularProgress />\r\n          </Grid>\r\n        );\r\n      case \"clicked\":\r\n        return (\r\n          <AutoSearchResult\r\n            results={autoSearchData}\r\n            onSearchSelect={onSearchSelect}\r\n          />\r\n        );\r\n      case \"completed\":\r\n        setPopper(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"Function ran\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          setSearchState(\"home\");\r\n          if (history.location.pathname === \"/search\") {\r\n            history.goBack();\r\n          }\r\n          // only go back if u have searched something\r\n        }}\r\n        color=\"inherit\"\r\n        aria-label=\"Menu\"\r\n      >\r\n        <ArrowBack />\r\n      </IconButton>\r\n      <form style={{ width: \"100%\" }} onSubmit={e => onSearchSubmit(e)}>\r\n        <InputBase\r\n          fullWidth\r\n          placeholder=\"Search...\"\r\n          autoFocus\r\n          style={{ color: \"#fff\", paddingLeft: \"16px\" }}\r\n          value={searchQuery}\r\n          onChange={onChange}\r\n          // on click we will show popper\r\n          onClick={() => {\r\n            setSearchState(\"clicked\");\r\n            setPopper(true);\r\n          }}\r\n        />\r\n      </form>\r\n\r\n      <Popper\r\n        className=\"searchPopper\"\r\n        open={isPopperOpen}\r\n        anchorEl={document.getElementById(\"navbar\")}\r\n        popperOptions={{\r\n          modifiers: {\r\n            preventOverflow: {\r\n              padding: 0\r\n            }\r\n          }\r\n        }}\r\n        placement=\"bottom\"\r\n      >\r\n        {popperResult}\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchBox);\r\n","import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { GlobalContext } from \"../GlobalState\";\n\nimport SearchBox from \"./SearchBox\";\nimport PropTypes from \"prop-types\";\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Slide\n} from \"@material-ui/core/\";\n\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nimport { Menu, Search } from \"@material-ui/icons/\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    textAlign: \"center\",\n    width: \"calc(100% - 96px)\"\n  },\n  input: {\n    color: \"#fff\"\n  }\n};\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nfunction SimpleAppBar(props) {\n  const [{ searchState }, dispatch] = useContext(GlobalContext);\n\n  const setMenuOpen = data => {\n    console.log(data);\n    dispatch({ type: \"setMenuOpen\", snippet: data });\n  };\n  const setSearchState = React.useCallback(\n    data => {\n      console.log(data);\n      dispatch({ type: \"setSearchState\", snippet: data });\n    },\n    [dispatch]\n  );\n\n  React.useEffect(() => {\n    // if the page is on search we will change the search state\n    const changeAppBar = () => {\n      const path = props.history.location.pathname;\n      if (path === \"/search\") {\n        setSearchState(\"searching\");\n      } else {\n        setSearchState(\"home\");\n      }\n      console.log(\"history change detected in app bar\");\n    };\n\n    changeAppBar();\n    const unlisten = props.history.listen(location => {\n      changeAppBar();\n    });\n  }, [setSearchState, props.history]);\n\n  const toggleSearch = () => {\n    if (searchState === \"home\") {\n      return (\n        <>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={() => setMenuOpen(true)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.title}>\n            nDs Music\n          </Typography>\n          <IconButton\n            onClick={() => setSearchState(\"clicked\")}\n            color=\"inherit\"\n            aria-label=\"Search\"\n          >\n            <Search />\n          </IconButton>\n        </>\n      );\n    } else {\n      return <SearchBox />;\n    }\n  };\n\n  return (\n    <>\n      <HideOnScroll {...props}>\n        <AppBar id=\"navbar\" position=\"sticky\">\n          <Toolbar>{toggleSearch()}</Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n\nexport default withRouter(SimpleAppBar);\n","import React, { useState } from \"react\";\r\nimport { IconButton, CircularProgress } from \"@material-ui/core/\";\r\nimport {\r\n  PauseCircleFilled,\r\n  PlayCircleFilled,\r\n  Pause,\r\n  PlayArrow\r\n} from \"@material-ui/icons/\";\r\n\r\nconst PlayPauseButton = ({ player, audioState, minimized }) => {\r\n  const togglePlayPause = e => {\r\n    if (audioState === \"playing\") {\r\n      player.pause();\r\n    } else if (audioState === \"paused\") {\r\n      player.play();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const showPlayPause = () => {\r\n    if (audioState === \"playing\") {\r\n      // if the state will be minimized then we will return the nromal pause button\r\n      if (minimized) {\r\n        return <Pause style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PauseCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"paused\" || audioState === \"loaded\") {\r\n      if (minimized) {\r\n        return <PlayArrow style={{ fontSize: \"3em\", opacity: \".8\" }} />;\r\n      }\r\n      return <PlayCircleFilled style={{ fontSize: \"4em\" }} color=\"primary\" />;\r\n    } else if (audioState === \"loading\") {\r\n      return <CircularProgress />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"small\"\r\n      color={minimized ? \"secondary\" : \"primary\"}\r\n      aria-label=\"Pause\"\r\n      onClick={togglePlayPause}\r\n      disableFocusRipple={true}\r\n      disableRipple={true}\r\n    >\r\n      {showPlayPause()}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core/\";\r\nimport { SkipNext } from \"@material-ui/icons/\";\r\n\r\nconst PlayPauseButton = ({onPlayNext}) => {\r\n  return (\r\n    <IconButton color=\"primary\" aria-label=\"Next\" onClick={onPlayNext}>\r\n      <SkipNext fontSize=\"large\"/>\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton","import React from \"react\";\r\nimport { IconButton } from \"@material-ui/core/\";\r\nimport { SkipPrevious } from \"@material-ui/icons/\";\r\n\r\nconst PlayPauseButton = ({playPrevious}) => {\r\n  return (\r\n    <IconButton color=\"primary\" aria-label=\"Pause\" onClick={playPrevious}>\r\n      <SkipPrevious fontSize=\"large\"/>\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default PlayPauseButton","import React, { useState, useCallback } from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Avatar, Grid, Typography } from \"@material-ui/core\";\r\nimport { FavoriteTwoTone } from \"@material-ui/icons\";\r\nimport circleSvg from \"../../images/dottedCircle.svg\";\r\nimport { rateSong } from \"../../external/saveSong\";\r\n\r\nconst dblTouchTapMaxDelay = 300;\r\nlet latestTouchTap = {\r\n  time: 0,\r\n  target: null\r\n};\r\n\r\nfunction isDblTouchTap(event) {\r\n  const touchTap = {\r\n    time: new Date().getTime(),\r\n    target: event.currentTarget\r\n  };\r\n  const isFastDblTouchTap =\r\n    touchTap.target === latestTouchTap.target &&\r\n    touchTap.time - latestTouchTap.time < dblTouchTapMaxDelay;\r\n  latestTouchTap = touchTap;\r\n  return isFastDblTouchTap;\r\n}\r\n\r\nlet initialPosition;\r\n\r\nconst MusicArt = ({ data, rating, audioEl }) => {\r\n  const swipeUpHandler = useSwipeable({\r\n    onSwipedUp: e => {\r\n      dislikeSong();\r\n    }\r\n  });\r\n\r\n  const [heartStyle, setHeartStyle] = useState({\r\n    transform: \"scale(0)\"\r\n  });\r\n  const [artContainerStyle, setArtContainerStyle] = useState({\r\n    background: `url(${circleSvg}) no-repeat`,\r\n    padding: \"18px\",\r\n    position: \"relative\",\r\n    transition: \"transform 100ms\",\r\n    transform: \"translateY(0)\"\r\n  });\r\n\r\n  // const artContainerStyle = {\r\n  //   background: `url(${circleSvg}) no-repeat`,\r\n  //   padding: \"18px\",\r\n  //   position: \"relative\",\r\n  //   zIndex: \"1\"\r\n  // };\r\n\r\n  // if its less than 400 width we will use default hq thumbnail\r\n  const checkImg = e => {\r\n    if (e.target.naturalWidth < 400) {\r\n      e.target.src = data.sdThumbnail;\r\n    }\r\n  };\r\n\r\n  // double tap to like the song\r\n  const likeSong = useCallback(() => {\r\n    // run the like function to like provided with song id and rating\r\n    setHeartStyle({ transform: \"scale(0)\" });\r\n    setTimeout(() => {\r\n      setHeartStyle({ transform: \"scale(1)\" });\r\n    }, 300);\r\n  }, [setHeartStyle]);\r\n\r\n  const dislikeSong = useCallback(() => {\r\n    rateSong(data.id, \"disliked\");\r\n    setHeartStyle({ transform: \"scale(0)\" });\r\n    setTimeout(() => {\r\n      setHeartStyle({ transform: \"scale(1)\", color: \"#2d3436\" });\r\n    }, 200);\r\n  }, [setHeartStyle, data.id]);\r\n\r\n  React.useEffect(() => {\r\n    if (rating === \"liked\") {\r\n      likeSong();\r\n    } else if (rating === \"disliked\") {\r\n      dislikeSong();\r\n    } else {\r\n      setHeartStyle({ transform: \"scale(1)\" });\r\n    }\r\n  }, [rating, likeSong, dislikeSong, setHeartStyle]);\r\n\r\n  // if we find the channel name is before the song title we will remove it\r\n  //using the regex\r\n  const shortTitle = data => {\r\n    // this regex is to remove channel name from song title\r\n    const re = new RegExp(data.channelTitle + \" - | : \", \"g\");\r\n\r\n    return data.title.replace(re, \"\");\r\n  };\r\n\r\n  const getThumbnail = () => {\r\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\r\n    if (data.thumbnail) {\r\n      return window.URL.createObjectURL(data.thumbnail);\r\n    } else {\r\n      return data.maxThumbnail;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ marginTop: \"40px\" }}\r\n      onClick={e => {\r\n        if (isDblTouchTap(e)) {\r\n          likeSong();\r\n          rateSong(data.id, \"liked\", audioEl);\r\n        }\r\n        // call the like song function on double tap\r\n      }}\r\n    >\r\n      <motion.div\r\n        className=\"box\"\r\n        drag\r\n        dragElastic={true}\r\n        dragTransition={{ bounceStiffness: 100, bounceDamping: 10 }}\r\n        dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\r\n        style={artContainerStyle}\r\n        {...swipeUpHandler}\r\n      >\r\n        <FavoriteTwoTone className={\"songHeart left\"} style={heartStyle} />\r\n        <FavoriteTwoTone className={\"songHeart right\"} style={heartStyle} />\r\n        <Avatar\r\n          className=\"searchThumb\"\r\n          style={{\r\n            width: \"215px\",\r\n            height: \"215px\",\r\n            boxShadow: \"#0000008c 1px 3px 8px\"\r\n          }}\r\n          alt=\"video thumbnail\"\r\n          src={getThumbnail()}\r\n          imgProps={{ onLoad: e => checkImg(e) }}\r\n        />\r\n      </motion.div>\r\n      <br />\r\n      <Typography variant=\"h5\" className=\"musicArtTitle\" align=\"center\">\r\n        {shortTitle(data)}\r\n      </Typography>\r\n      <h5 className=\"musicChannel\">\r\n        {data.channelTitle}\r\n      </h5>\r\n      <br />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MusicArt;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Switch,\r\n  DialogActions,\r\n  Button,\r\n  FormControlLabel,\r\n  FormControl,\r\n  DialogTitle,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { TimerOff, Timer } from \"@material-ui/icons\";\r\nimport { CircleSlider } from \"react-circle-slider\";\r\n\r\nimport \"./SleepTimerStyle.css\";\r\n\r\nconst setSleepTimeToLocalStorage = (time, alwaysOn) => {\r\n  const sleepTimerSettings = JSON.stringify({ time: time, alwaysOn: alwaysOn });\r\n\r\n  localStorage.setItem(\"sleepTimerSettings\", sleepTimerSettings);\r\n};\r\n\r\nconst getSleepTimeFromLocalStoarge = () => {\r\n  const sleepTimerSettings = localStorage.getItem(\"sleepTimerSettings\");\r\n  return JSON.parse(sleepTimerSettings);\r\n};\r\n\r\nconst removeSleepTimer = () => {\r\n  localStorage.removeItem(\"sleepTimerSettings\");\r\n};\r\n\r\nlet timerTimeout;\r\n\r\nfunction SleepTimer({ player }) {\r\n  const [sliderValue, changeSliderValue] = useState(20);\r\n  const [open, setOpen] = useState(false);\r\n  const [checkbox, setCheckbox] = useState(false);\r\n  const [isTimerSet, setIsTimerSet] = useState(false);\r\n\r\n  const setTimer = time => {\r\n    console.log(\"timer has been set with time\", time);\r\n    clearTimeout(timerTimeout);\r\n    setIsTimerSet(true);\r\n    timerTimeout = setTimeout(() => {\r\n      player.pause(); //pause after music finished\r\n    }, time * 60 * 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sleepTimerObj = getSleepTimeFromLocalStoarge();\r\n    if (sleepTimerObj) {\r\n      changeSliderValue(sleepTimerObj.time);\r\n      setCheckbox(sleepTimerObj.alwaysOn);\r\n    }\r\n\r\n    //only set timer when there is no timer\r\n    if (sleepTimerObj && sleepTimerObj.alwaysOn) {\r\n      console.log(sleepTimerObj);\r\n      setTimer(sleepTimerObj.time);\r\n    }\r\n    console.log(sleepTimerObj);\r\n  }, []);\r\n\r\n  const handleSetTimer = () => {\r\n    setSleepTimeToLocalStorage(sliderValue, checkbox);\r\n    //   then also set a set timeout\r\n    // if there is any timer already clear it\r\n    setOpen(false);\r\n    setTimer(sliderValue);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    removeSleepTimer();\r\n    setIsTimerSet(false);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isTimerSet ? (\r\n        <Timer color=\"primary\" onClick={() => setOpen(true)} />\r\n      ) : (\r\n        <TimerOff color=\"primary\" onClick={() => setOpen(true)} />\r\n      )}\r\n      <Dialog\r\n        style={{ zIndex: 1400 }}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"primary\"\r\n          align=\"center\"\r\n          style={{ marginTop: \"10px\" }}\r\n        >\r\n          Pause Music After\r\n        </Typography>\r\n        <div className=\"container\">\r\n          <div className=\"textContainer\">\r\n            {sliderValue}\r\n            <div className=\"minute\">MINUTES</div>\r\n          </div>\r\n          <CircleSlider\r\n            value={sliderValue}\r\n            stepSize={5}\r\n            onChange={value => changeSliderValue(value)}\r\n            size={300}\r\n            max={120}\r\n            gradientColorFrom=\"#ec008c\"\r\n            gradientColorTo=\"#fc6767\"\r\n            knobRadius={25}\r\n            progressWidth={30}\r\n            circleWidth={30}\r\n          />\r\n        </div>\r\n\r\n        <DialogActions>\r\n          <FormControlLabel\r\n            value=\"Always On\"\r\n            control={\r\n              <Switch\r\n                checked={checkbox}\r\n                onChange={e => setCheckbox(e.target.checked)}\r\n                value=\"checked always on\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"ALWAYS\"\r\n            labelPlacement=\"end\"\r\n            style={{ color: \"#e91e63\" }}\r\n          />\r\n          <Button color=\"primary\" onClick={handleRemove}>\r\n            Remove\r\n          </Button>\r\n\r\n          <Button color=\"primary\" onClick={handleSetTimer}>\r\n            Set\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SleepTimer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles, Typography, Grid, Slider } from \"@material-ui/core/\";\r\nimport { PauseCircleFilled } from \"@material-ui/icons/\";\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    height: 6,\r\n    color: \"rgb(27, 154, 238)\",\r\n    textAlign: \"center\",\r\n  },\r\n  thumb: {\r\n    color: \"rgb(27, 154, 238)\",\r\n    height: 16,\r\n    width: 16,\r\n    marginTop: -5.3,\r\n    marginLeft: -8,\r\n    \"&::before\": {\r\n      content: \"''\",\r\n      height: \"inherit\",\r\n      width: \"inherit\",\r\n      position: \"absolute\",\r\n      transform: \"scale(1.6)\",\r\n      borderRadius: \"50px\",\r\n      border: \"1px solid\"\r\n    }\r\n  },\r\n  track: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 6,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nconst MiniSlider = withStyles({\r\n  root: {\r\n    height: 5,\r\n    position: \"relative\",\r\n    bottom: \"16px\",\r\n    color: \"#ffff\",\r\n    padding: 0\r\n  },\r\n  thumb: {\r\n    display: \"none\"\r\n  },\r\n  track: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    borderRadius: 0\r\n  }\r\n})(Slider);\r\n\r\nconst formatTime = secs => {\r\n  let minutes = Math.floor(secs / 60);\r\n  let seconds = Math.ceil(secs - minutes * 60);\r\n\r\n  if (seconds < 10) seconds = `0${seconds}`;\r\n\r\n  return `${minutes}:${seconds}`;\r\n};\r\n\r\nconst TimelineController = ({ audioState, player, minimized }) => {\r\n  const [value, setValue] = useState(50);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (player) {\r\n      setCurrentTime(player.currentTime);\r\n    }\r\n    // we will update the time of player every 800ms\r\n    let setTimeInterval;\r\n    if (audioState === \"playing\") {\r\n      setTimeInterval = setInterval(() => {\r\n        setCurrentTime(player.currentTime);\r\n        console.log()\r\n      }, 800);\r\n    } else {\r\n      clearInterval(setTimeInterval);\r\n    }\r\n    return () => clearInterval(setTimeInterval);\r\n  }, [audioState, player]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    player.currentTime = newValue;\r\n    setCurrentTime(newValue);\r\n  };\r\n\r\n  const showDuration = () => {\r\n    if (player) {\r\n      if (player.duration) {\r\n        return formatTime(player.duration);\r\n      } else {\r\n        return \"0:00\";\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // condition rendering\r\n  if (minimized) {\r\n    return (\r\n      <MiniSlider value={currentTime} max={player ? player.duration : 0} />\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ margin: \"0 auto\", width: \"90%\" }}>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant=\"body1\" className=\"timeright\">\r\n            {formatTime(currentTime)}\r\n          </Typography>\r\n          <Typography variant=\"body1\" className=\"timeright\">\r\n            {showDuration()}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <PrettoSlider\r\n          value={currentTime}\r\n          onChange={handleChange}\r\n          max={player ? player.duration : 0}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TimelineController;\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, Grid, Slider } from \"@material-ui/core/\";\r\nimport { VolumeUp } from \"@material-ui/icons/\";\r\n\r\nconst VolumeController = ({ player, setPlayerState }) => {\r\n  const [volume, setVolume] = useState(100);\r\n\r\n  const volumeChange = (e, newVal) => {\r\n    setVolume(newVal);\r\n    player.volume = newVal / 100;\r\n    //\r\n  };\r\n\r\n\r\n  return (\r\n\r\n      <Grid container spacing={1} style={{ maxWidth: \"200px\", color:\"rgb(27, 154, 238)\" }}>\r\n        <Grid item>\r\n          <VolumeUp style={{color:\"rgb(27, 154, 238)\" }} />\r\n        </Grid>\r\n        <Grid  item xs={3}>\r\n          <Slider style={{color:\"rgb(27, 154, 238)\" }} value={volume} onChange={volumeChange} />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default VolumeController;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport { RiRepeatOneLine, RiRepeat2Fill, RiHome2Line} from 'react-icons/ri';\r\nimport { TiArrowShuffle } from 'react-icons/ti';\r\n\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Grid,\r\n  Divider,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  Home,\r\n  MusicVideo,\r\n  LibraryMusic,\r\n  Shuffle,\r\n  Repeat,\r\n  KeyboardArrowUp,\r\n  KeyboardArrowDown,\r\n  RepeatOne\r\n} from \"@material-ui/icons\";\r\n\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nlet renderResult;\r\n\r\n// written by @bushblade\r\nconst shuffle = arry =>\r\n  arry.reduce(\r\n    (acc, _, i) => {\r\n      const rnd = Math.floor(Math.random() * acc.length),\r\n        temp = acc[i];\r\n      acc[i] = acc[rnd];\r\n      acc[rnd] = temp;\r\n      return acc;\r\n    },\r\n    [...arry]\r\n  );\r\n\r\nconst RelatedVideos = ({\r\n  toggleMaxPlaylist,\r\n  setPlaylist,\r\n  playerState,\r\n  relatedVideos,\r\n  setRelatedVideos,\r\n  setIsRepeatOn,\r\n  isRepeatOn\r\n}) => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n  const handleShuffleClick = () => {\r\n    setRelatedVideos(shuffle(relatedVideos));\r\n  };\r\n\r\n  const spring = {\r\n    type: \"spring\",\r\n    damping: 20,\r\n    stiffness: 300\r\n  };\r\n  const handleClick = video => {\r\n    // set all the info of current clicked video in this object\r\n    setCurrentVideoSnippet({\r\n      id: video.id.videoId,\r\n      title: video.snippet.title,\r\n      channelTitle: video.snippet.channelTitle,\r\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\r\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\r\n      // this is the url of the max resolution of thumbnail\r\n    });\r\n    setPlaylist();\r\n  };\r\n\r\n  if (relatedVideos.length > 1) {\r\n    renderResult = relatedVideos.map(song => {\r\n      return (\r\n        <motion.li key={song.id.videoId} positionTransition={spring}>\r\n          <ListItem\r\n            // key={song.id.videoId}\r\n            button\r\n            onClick={() => handleClick(song)}\r\n            // component={Link}\r\n            // replace\r\n            // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\r\n          >\r\n            <ListItemIcon>\r\n              <MusicVideo style={{ color: \"#fff\" }} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={song.snippet.title.slice(0, 40)}\r\n              secondary={song.snippet.channelTitle.slice(0, 40)}\r\n            />\r\n          </ListItem>\r\n        </motion.li>\r\n      );\r\n    });\r\n  } else {\r\n    return <LinearProgress />;\r\n  }\r\n\r\n  const returnPlaylistExpandBtn = () => {\r\n    if (playerState === \"playlist\") {\r\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\r\n    } else {\r\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"RelatedVideoContainer\">\r\n      <Grid\r\n        className={\"playlistHeader\"}\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"space-between\"\r\n      >\r\n        \r\n        <Link to={\"/page1/home\"}>\r\n        <RiHome2Line className=\"cssIcons\" />\r\n        </Link>\r\n        <Typography variant=\"h6\">nDs Coming</Typography>\r\n        <TiArrowShuffle className=\"cssIcons\" onClick={handleShuffleClick} />\r\n        {/* this will show the repeat button and repeat the song */}\r\n        {isRepeatOn ? (\r\n          <RiRepeatOneLine className=\"cssIcons\" onClick={setIsRepeatOn} />\r\n        ) : (\r\n          <RiRepeat2Fill className=\"cssIcons\" onClick={setIsRepeatOn} />\r\n        )}\r\n        {returnPlaylistExpandBtn()}\r\n      </Grid>\r\n      <List dense={true}>{renderResult}</List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedVideos;\r\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSwipeable } from \"react-swipeable\";\nimport PlayPauseButton from \"./PlayPauseButton\";\nimport NextButton from \"./NextButton\";\nimport PreviousButton from \"./PreviousButton\";\nimport MusicArt from \"./MusicArt\";\nimport TimelineController from \"./TimelineController\";\nimport TopBar from \"./TopBar\";\nimport MiniMusicArt from \"./MiniMusicArt\";\nimport RelatedVideos from \"../RelatedVideos\";\nimport getAudioLink from \"../../apis/getAudioLink\";\nimport youtubeSearch from \"../../apis/youtubeSearch\";\nimport { updatePlayingSong } from \"../../external/saveSong\";\n\nimport \"../../external/saveCountry\";\n\nimport \"../../style.css\";\n\nimport { GlobalContext } from \"../GlobalState\";\n\n// window.onbeforeunload = function() {\n//   return 'You have unsaved changes!';\n// }\nlet relatedVideosVar;\n\nconst MainPlayer = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n\n  const [{ currentVideoSnippet, themeSelectValue }, dispatch] = useContext(\n    GlobalContext\n  );\n\n  const setCurrentVideoSnippet = data => {\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\n  };\n\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [isItFromPlaylist, setIsItFromPlaylist] = useState(false);\n  //\n  const [audioState, setAudioState] = useState(null);\n  // there will be 4 states\n  // loading, loaded, playing, paused\n\n  const [playerState, setPlayerState] = useState(null);\n  // there will be 3 states\n  // maximized, minimized, playlist\n\n  const [minimized, setMinimized] = useState(true);\n  const [isRepeatOn, setIsRepeatOn] = useState(false);\n  const [rating, setRating] = useState(\"none\");\n  const [isNextFromMini, setIsNextFromMini] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const body = document.querySelector(\"body\");\n\n  const audioPlayer = useRef();\n  const player = audioPlayer.current;\n  const setupMediaSessions = () => {\n    if (\"mediaSession\" in navigator) {\n      console.log(\"navigator setupped\");\n\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: currentVideoSnippet.title,\n        artist: currentVideoSnippet.channelTitle,\n        artwork: [\n          {\n            src: currentVideoSnippet.sdThumbnail,\n            sizes: \"512x512\",\n            type: \"image/png\"\n          }\n        ]\n      });\n      navigator.mediaSession.setActionHandler(\"play\", () => {\n        /* Code excerpted. */\n        playAudio();\n      });\n      navigator.mediaSession.setActionHandler(\"pause\", () => {\n        /* Code excerpted. */\n        audioPlayer.current.pause();\n      });\n      navigator.mediaSession.setActionHandler(\"previoustrack\", () => {\n        playPrevious();\n      });\n      navigator.mediaSession.setActionHandler(\"nexttrack\", () => {\n        playNext();\n      });\n    }\n  };\n\n  const playAudio = () => {\n    audioPlayer.current\n      .play()\n      .then(_ => {\n        // Automatic playback started!\n        // Show playing UI.\n        console.log(\"audio played auto\");\n        setupMediaSessions();\n      })\n      .catch(error => {\n        // Auto-play was prevented\n        // Show paused UI.\n        console.log(\"playback prevented\");\n        setAudioState(\"paused\");\n      });\n  };\n\n  useEffect(() => {\n    console.log(\"state changed triggedred\");\n    const getAudio = async data => {\n      // audioPlayer.current.src = \"\";\n      // maximize the player every time id changes\n      // only if playlist is not open\n      if (playerState !== \"playlist\" && !isNextFromMini) {\n        setPlayerState(\"maximized\");\n        //\n        console.log(\"maximizing here yar and state is\", playerState);\n      }\n\n      setTimeout(() => {\n        setIsNextFromMini(false);\n        // change it back to false\n      }, 200);\n\n      setAudioState(\"loading\");\n      const res = await getAudioLink.get(\"/song\", {\n        params: { id: data }\n      });\n\n      // set the audio data\n      const proxyURL = \"https://server.ylight.xyz/proxy/\";\n      audioPlayer.current.src = res.data;\n      playAudio();\n\n      // var audioContext = new AudioContext();\n\n      // var track = audioContext.createMediaElementSource(audioPlayer.current);\n      // track.connect(audioContext.destination);\n    };\n\n    if (currentVideoSnippet.audio) {\n      console.log(\"yes its downloaded we will play from local file\");\n      // maximize the player every time id changes\n\n      setPlayerState(\"maximized\");\n      setAudioState(\"loading\");\n      audioPlayer.current.src = window.URL.createObjectURL(\n        currentVideoSnippet.audio\n      );\n      playAudio();\n    } else if (currentVideoSnippet.id) {\n      getAudio(currentVideoSnippet.id);\n    }\n\n    if (currentVideoSnippet.id) {\n      const searchRelated = async () => {\n        const res = await youtubeSearch.get(\"/search\", {\n          params: {\n            relatedToVideoId: currentVideoSnippet.id,\n            maxResults: 10\n          }\n        });\n        setRelatedVideos(res.data.items);\n      };\n\n      // if its not from the mini next button then only change history\n      if (!isNextFromMini) {\n        // if the click is not from playlist then only we will search for realated video\n        if (!isItFromPlaylist) {\n          // console.log(\"searching for related vids\", relatedVideos);\n          // if player is in playlist mode we will just replace history else push it\n          if (location.pathname !== \"/play\") {\n            // prevent duplicating history\n            history.push(`/play?id=${currentVideoSnippet.id}`);\n          }\n\n          searchRelated();\n        } else {\n          history.replace(`/play?id=${currentVideoSnippet.id}`);\n          setIsItFromPlaylist(false);\n        }\n      }\n\n      console.log(currentVideoSnippet);\n    }\n\n    // set rating to none when we load new song\n    setRating(\"none\");\n  }, [currentVideoSnippet, setIsItFromPlaylist]);\n\n  // useEffect(() => {\n  //   console.log(\"from playlist\", isItFromPlaylist);\n  // }, [isItFromPlaylist]);\n\n  useEffect(() => {\n    relatedVideosVar = relatedVideos;\n    console.log(\"related\", relatedVideos);\n  }, [relatedVideos]);\n\n  useEffect(() => {\n    console.log(\"isnext state\", isNextFromMini);\n  }, [isNextFromMini]);\n\n  const setAudioSrcAndPlay = async id => {\n    const res = await getAudioLink.get(\"/song\", {\n      params: { id: id }\n    });\n\n    // set the audio data\n    audioPlayer.current.src = res.data;\n    playAudio();\n  };\n\n  const setVideoSnippet = video => {\n    try{\n      setCurrentVideoSnippet({\n        id: video.id.videoId,\n        title: video.snippet.title,\n        channelTitle: video.snippet.channelTitle,\n        maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/hqdefault.jpg`,\n        sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\n        // this is the url of the max resolution of thumbnail\n      });\n    }\n    catch(err)\n    {\n      console.error('err', err)\n    }\n    // if window is minimized then only we will run this function\n    if (document.hidden) {\n      setAudioSrcAndPlay(video.id.videoId);\n    }\n  };\n\n  const playNext = () => {\n    // also set this is from playlist\n    setIsItFromPlaylist(true);\n    console.log(\"play next related videos\", relatedVideos);\n    // find the index of playing song in the playlist\n    const currentIndex = relatedVideosVar.findIndex(\n      video => video.id.videoId === currentVideoSnippet.id\n    );\n    console.log(\"the current index is\", currentIndex);\n\n    let video;\n    console.log(\"hey we will play next song\");\n    video = relatedVideosVar[currentIndex + 1]; //we will play the next song\n\n    setVideoSnippet(video);\n  };\n\n  const playPrevious = () => {\n    setIsItFromPlaylist(true);\n\n    // if the player time is greater than 5 sec we will move the time to 0\n    if (player.currentTime > 5) {\n      player.currentTime = 0;\n    } else {\n      const currentIndex = relatedVideosVar.findIndex(\n        video => video.id.videoId === currentVideoSnippet.id\n      );\n      let video;\n      if (currentIndex !== -1) {\n        video = relatedVideosVar[currentIndex - 1]; //we will play the next song\n        setVideoSnippet(video);\n      } else {\n        player.currentTime = 0;\n      }\n    }\n  };\n\n  let playerStyle = {\n    position: \"fixed\",\n    right: 0,\n    bottom: 0,\n    background: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1400,\n    display: \"inline block\",\n    transition: \"all .3s ease\"\n  };\n\n  if (playerState === \"minimized\") {\n    playerStyle.transform = \"translateY(calc(100% - 106px))\";\n    playerStyle.zIndex = 0;\n    // if theme is not dark then only apply the pink style\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    } else {\n      playerStyle.background = \"#e91e63\";\n    }\n    // playerStyle.bottom = \"48px\";\n    // calculate the top height and we are subtracting 148px becz\n    // 48 is the value of menu bar and 100px is minimized height\n    // make body overflow scroll 😝\n    body.style.overflow = \"auto\";\n  }\n\n  if (playerState === \"maximized\") {\n    // make body overflow hidden 🙈\n    body.style.overflow = \"hidden\";\n    if (themeSelectValue === \"Dark\") {\n      playerStyle.background = \"#333\";\n    }\n  }\n\n  if (playerState === \"playlist\") {\n    playerStyle.transform = \"translateY(-418px)\";\n  }\n\n  const expandPlayer = (e) => {\n    e.preventDefault();\n    if (playerState === \"minimized\") {\n      setPlayerState(\"maximized\");\n      setMinimized(true);\n      history.push({\n        pathname: \"/play\",\n        search: `?id=${currentVideoSnippet.id}`,\n        state: { modal: true }\n      });\n    }\n  };\n\n  const toggleMaxPlaylist = () => {\n    if (playerState === \"playlist\") {\n      setPlayerState(\"maximized\");\n    } else {\n      setPlayerState(\"playlist\");\n    }\n    console.log(\"Maximize the playlist\");\n  };\n\n  const updateSongDB = async () => {\n    const rating = await updatePlayingSong(currentVideoSnippet);\n    //  it will update song on db and return the rating\n    setRating(rating);\n    console.log(rating);\n  };\n\n  // this will be fired when song is ended\n  const songEnded = () => {\n    // if repeat is false we will play next else just set the time to 0\n    if (!isRepeatOn) {\n      playNext();\n    } else {\n      audioPlayer.current.currentTime = 0;\n      playAudio();\n    }\n  };\n\n  let initPosition = 0;\n  const containerRef = useRef(null);\n\n  const swipeHandlerMaximized = useSwipeable({\n    onSwipedDown: e => {\n      setPlayerState(\"minimized\");\n      history.goBack();\n    },\n    onSwiping: e => {\n      // console.log(e);\n      // getting the event for touches to extract the position\n      if (initPosition === 0) {\n        initPosition = e.event.changedTouches[0].screenY;\n      }\n\n      const screenY = e.event.changedTouches[0].screenY;\n      let positionDifference = Math.round(screenY - initPosition);\n      if (positionDifference < 1) {\n        positionDifference = 0;\n      }\n\n      const containerRefStyle = containerRef.current.style;\n      containerRefStyle.transform = `translateY(${positionDifference}px)`;\n      containerRefStyle.transition = \"none\";\n    },\n    onSwiped: e => {\n      initPosition = 0;\n      containerRef.current.style = \"\";\n      // we will make the initial position 0 again after user leaves the screen\n    },\n    onSwipedUp: e => {\n      if (playerState === \"minimized\") {\n        setPlayerState(\"maximized\");\n      }\n    },\n    onSwipedRight: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playNext();\n      }, 250);\n    },\n    onSwipedLeft: e => {\n      const playTimeout = setTimeout(() => {\n        clearTimeout(playTimeout);\n        playPrevious();\n      }, 250);\n    }\n  });\n\n  const swipeHandlerMin = useSwipeable({\n    onSwipedUp: e => {\n      expandPlayer();\n    }\n  });\n\n  useEffect(() => {\n    if (location.pathname === \"/play\" && !currentVideoSnippet.id) {\n      console.log(\"history is in play fetching song\");\n\n      fetchAndSetCurrentVideoSnippet(params.get(\"id\")); // math will give the song id from\n    }\n    // we will only change if its push  otherwise while changing song from playlist changes the state\n\n    // Listen for changes to the current location.\n    const unlisten = history.listen(location => {\n      // location is an object like window.location\n      if (location.pathname === \"/play\") {\n        // we will only change if its push  otherwise while changing song from playlist changes the state\n        if (history.action !== \"REPLACE\") {\n          setPlayerState(\"maximized\");\n          console.log(\"set player state to maximized\");\n        }\n      } else {\n        setPlayerState(\"minimized\");\n        console.log(\"set player state to minimized\");\n      }\n      console.log(history);\n    });\n  }, [history]);\n\n  useEffect(() => {\n    console.log(playerState);\n  }, [playerState]);\n\n  const returnMinMaxClass = () => {\n    if (playerState === \"minimized\") {\n      return \"playerMinimized\";\n    } else if (playerState === \"playlist\") {\n      return \"playerPlaylist\";\n    }\n  };\n\n  const returnMaximizedPlayer = () => {\n    if (playerState === \"maximized\" || playerState === \"playlist\") {\n      return (\n        <>\n          <Grid\n            container\n            direction=\"column\"\n            className=\"main-player-inner\"\n            style={{\n              height: \" calc(100vh - 46px)\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <TopBar\n              song={currentVideoSnippet}\n              player={player}\n              setPlayerState={setPlayerState}\n              history={history}\n            />\n            <div {...swipeHandlerMaximized} className=\"musicArtContainer\">\n              <MusicArt\n                data={currentVideoSnippet}\n                rating={rating}\n                audioEl={player}\n              />\n            </div>\n            <TimelineController audioState={audioState} player={player} />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ maxWidth: \"290px\", height: \"80px\", margin: \"0 auto\" }}\n            >\n              <PreviousButton playPrevious={playPrevious} />\n              <PlayPauseButton player={player} audioState={audioState} />\n              <NextButton onPlayNext={playNext} />\n            </Grid>\n          </Grid>\n          <RelatedVideos\n            toggleMaxPlaylist={toggleMaxPlaylist}\n            setPlaylist={() => setIsItFromPlaylist(true)}\n            playerState={playerState}\n            relatedVideos={relatedVideos}\n            setRelatedVideos={data => setRelatedVideos(data)}\n            isRepeatOn={isRepeatOn}\n            // this will set the repeat setting\n            setIsRepeatOn={() => {\n              setIsRepeatOn(!isRepeatOn);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  const returnMinimizedPlayer = () => {\n    if (playerState === \"minimized\" && currentVideoSnippet.id) {\n      return (\n        <div {...swipeHandlerMin}>\n          <MiniMusicArt\n            // we are making an object for props we will pass it to play pause button through mini music art\n            playPause={{\n              player: player,\n              minimized: minimized,\n              audioState: audioState\n            }}\n            playNext={e => {\n              e.stopPropagation();\n              setIsNextFromMini(true);\n              playNext();\n            }}\n            data={currentVideoSnippet}\n            emptyPlayer={e => {\n              e.stopPropagation();\n              setCurrentVideoSnippet([]);\n            }}\n          />\n          <TimelineController\n            audioState={audioState}\n            player={player}\n            minimized={minimized}\n          />\n        </div>\n      );\n    }\n  };\n\n  const fetchAndSetCurrentVideoSnippet = id => {\n    youtubeSearch\n      .get(\"videos\", {\n        params: {\n          id: id\n        }\n      })\n      .then(res => {\n        const item = res.data.items[0];\n        console.log(currentVideoSnippet);\n        setCurrentVideoSnippet({\n          id: item.id,\n          title: item.snippet.title,\n          channelTitle: item.snippet.channelTitle,\n          maxThumbnail: `https://img.youtube.com/vi/${item.id}/maxresdefault.jpg`,\n          sdThumbnail: `https://img.youtube.com/vi/${item.id}/sddefault.jpg`\n          // this is the url of the max resolution of thumbnail\n        });\n      });\n  };\n\n  if (!currentVideoSnippet.id) {\n    return null;\n  }\n\n  return (\n    <div\n      // drag=\"y\"\n      // dragConstraints={{ top: 0, bottom: 600 }}\n      ref={containerRef}\n      // style={playerStyle}\n      onClick={expandPlayer}\n      className={\"mediaPlayerContainer \" + returnMinMaxClass()}\n    >\n      {returnMaximizedPlayer()}\n      {returnMinimizedPlayer()}\n      <audio\n        // onTimeUpdate={timeUpdate}\n        onLoadStart={() => {\n          setAudioState(\"loading\");\n        }}\n        id=\"audio-element\"\n        onLoadedData={updateSongDB}\n        // crossOrigin=\"anonymous\"\n        onPlay={() => setAudioState(\"playing\")}\n        onPlaying={() => setAudioState(\"playing\")}\n        onPause={() => setAudioState(\"paused\")}\n        onEnded={songEnded}\n        autoPlay\n        ref={audioPlayer}\n        // type=\"audio/mp4\"\n      />\n    </div>\n  );\n};\n\nexport default MainPlayer;\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Slider,\r\n  LinearProgress,\r\n  makeStyles,\r\n  withStyles\r\n} from \"@material-ui/core/\";\r\n\r\nimport {\r\n  ExpandMore,\r\n  GetApp,\r\n  Reply,\r\n  DoneOutline,\r\n  Done,\r\n  AlarmOff\r\n} from \"@material-ui/icons/\";\r\nimport VolumeController from \"./VolumeController\";\r\nimport { useSongMethods } from \"../RenderDatabase\";\r\nimport { downloadSong } from \"../../external/saveSong\";\r\nimport SleepTimer from './SleepTimer'\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nconst DownloadLoader = withStyles({\r\n  root: {\r\n    height: 2,\r\n    width: \"70%\",\r\n    margin: \"0 auto\",\r\n    transform: \"translateY(-10px)\"\r\n  }\r\n})(LinearProgress);\r\n\r\nconst TopBar = ({ song, player, setPlayerState, history }) => {\r\n  const { snackbarMsg } = useContext(GlobalContext);\r\n  const [isSongDownloaded, setSongDownloaded] = useState(false);\r\n  const [isSongDownloading, setSongDownloading] = useState(false);\r\n\r\n  const {\r\n    handleDownload,\r\n    handleRemoveSong,\r\n    deleteDialogComponent\r\n  } = useSongMethods();\r\n\r\n  useEffect(() => {\r\n    if (snackbarMsg === \"Song Downloaded\" || song.audio) {\r\n      setSongDownloaded(true);\r\n      setSongDownloading(false);\r\n    }\r\n  }, [snackbarMsg]);\r\n  // if the song is downloaded we will change\r\n\r\n  // share prompt using chrome web api\r\n  const shareSong = () => {\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          title: \"Share This Song\",\r\n          text: `Hey Listen to ${song.title} on nDs Music`,\r\n          url: window.location.href //get the current window url\r\n        })\r\n        .then(() => console.log(\"Successful share\"))\r\n        .catch(error => console.log(\"Error sharing\", error));\r\n    }\r\n  };\r\n\r\n  const minimizePlayer = () => {\r\n    setPlayerState(\"minimized\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"space-between\"\r\n      direction=\"row\"\r\n      style={{\r\n        padding: \" 0 10px\",\r\n        marginTop: \"10px\",\r\n        position: \"absolute\",\r\n        top: \"0\"\r\n      }}\r\n    >\r\n      <VolumeController player={player} />\r\n      {deleteDialogComponent}\r\n      <Reply\r\n        style={{ transform: \" scaleX(-1) translateY(-2px)\" }}\r\n        onClick={shareSong}\r\n        color=\"primary\"\r\n      />\r\n      \r\n      <SleepTimer player={player}/>\r\n\r\n      <div>\r\n        {isSongDownloaded ? (\r\n          <DoneOutline\r\n            color=\"primary\"\r\n            onClick={() => handleRemoveSong(song.id)}\r\n          /> //song will be removed\r\n        ) : (\r\n          <>\r\n            <GetApp\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                handleDownload(song.id);\r\n                setSongDownloading(true);\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n        {isSongDownloading ? <DownloadLoader color=\"primary\" /> : null}\r\n        {/* if the song is downloading we will show loading */}\r\n      </div>\r\n\r\n      <ExpandMore\r\n        onClick={minimizePlayer}\r\n        color=\"primary\"\r\n        fontSize=\"large\"\r\n        style={{ transform: \"translateY(-7px)\" }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { SkipNext, Close } from \"@material-ui/icons\";\r\nimport PlayPauseButton from \"./PlayPauseButton\";\r\nimport \"./MiniMusicStyle.css\";\r\n\r\nconst styles = {};\r\n\r\nconst MiniMuiscArt = ({ playPause, data, playNext, emptyPlayer }) => {\r\n  const getThumbnail = () => {\r\n    // if the thumbnail is downloaded then get it from database or else use the url to fetch\r\n    if (data.thumbnail) {\r\n      return window.URL.createObjectURL(data.thumbnail);\r\n    } else {\r\n      return data.sdThumbnail;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"mainContainer\"}>\r\n      <div className={\"overflow-hidden\"}>\r\n        <div className=\"details\">\r\n          <Typography variant=\"body1\">{data.title}</Typography>\r\n          <Typography variant=\"body2\">{data.channelTitle}</Typography>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <SkipNext onClick={playNext} />\r\n          <Close onClick={emptyPlayer} />\r\n        </div>\r\n        <div className={\"miniArtContainer\"}>\r\n          <div className={\"mainArt\"}>\r\n            <img\r\n              className={\"miniArtImg\"}\r\n              src={getThumbnail()}\r\n              alt=\"music art\"\r\n            />\r\n            <PlayPauseButton\r\n              player={playPause.player}\r\n              minimized={playPause.minimized}\r\n              audioState={playPause.audioState}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniMuiscArt;\r\n","import axios from \"axios\";\r\n\r\nconst country_code = localStorage.getItem(\"country_code\");\r\n\r\n// const key = \"02924c9a5a777f4d4854a45a326432c6\";\r\n\r\nconst GeoAPI = \"https://ipapi.co/json/\";\r\n\r\nconst fetchCountry = async () => {\r\n  const res = await axios.get(GeoAPI, { mode: \"no-cors\" });\r\n  //   set the current country code in local stoarge\r\n  localStorage.setItem(\"country_code\", res.data.country);\r\n};\r\n\r\nif (!country_code) {\r\n  // if country is not set then only set it\r\n  fetchCountry();\r\n}\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  Suspense,\r\n  lazy\r\n} from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  withStyles,\r\n  Grid,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\n\r\n\r\nimport {\r\n  Home,\r\n  Favorite,\r\n  VideoLibrary,\r\n  History,\r\n  GetApp\r\n} from \"@material-ui/icons/\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport {\r\n  getHistory,\r\n  getLikedSongs,\r\n  getDownloadedSongs,\r\n  removeDownloadingState,\r\n  db\r\n} from \"../external/saveSong\";\r\n\r\nimport SettingsPage from \"./sections/SettingsPage\";\r\n// import the db from save song\r\nimport MainPlayer from \"../components/player/MainPlayer\";\r\n// pages\r\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\r\nconst RenderDatabase = lazy(() => import(\"./RenderDatabase\"));\r\nconst SearchResult = lazy(() => import(\"./SearchResult\"));\r\nconst HomePage = lazy(() => import(\"./sections/HomePage\"));\r\nconst FeedbackForm = lazy(() => import(\"./sections/FeedbackForm\"));\r\nconst PrivacyPage = lazy(() => import(\"./sections/PrivacyPage\"));\r\nconst DonatePage = lazy(() => import(\"./sections/DonatePage\"));\r\nconst ContributorsPage = lazy(() => import(\"./sections/ContributorsPage\"));\r\n\r\n// custom styling the tab menus\r\nconst CustomTab = withStyles({\r\n  root: {\r\n    background: \"#4d6472\",\r\n    position: \"fixed\",\r\n    bottom: \"0\",\r\n    padding: 0,\r\n    width: \"100%\",\r\n    zIndex: 1300\r\n  },\r\n  indicator: {\r\n    display: \"none\"\r\n  },\r\n  labelIcon: {\r\n    margin: 0\r\n  }\r\n})(Tabs);\r\n\r\nconst CustomTabs = withStyles({\r\n  root: {\r\n    color: \"#FFB2C1\",\r\n    fontSize: \".75rem\",\r\n    margin: 0,\r\n\r\n    \"&:hover\": {\r\n      color: \"#ffffffed\",\r\n      opacity: 1\r\n    },\r\n    \"&$selected\": {\r\n      color: \"#fff\"\r\n    },\r\n    \"&:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n\r\n  selected: {}\r\n})(Tab);\r\n\r\nlet deferredPrompt = undefined;\r\nlet previousLocation;\r\n\r\nwindow.addEventListener(\"beforeinstallprompt\", e => {\r\n  // Stash the event so it can be triggered later.\r\n  deferredPrompt = e;\r\n});\r\n\r\nconst CurrentSection = ({ history, location }) => {\r\n  const [{ currentVideoSnippet, searchResult }] = useContext(GlobalContext);\r\n  console.log(currentVideoSnippet);\r\n\r\n  const [songsHistoryState, setSongsHistory] = useState([]);\r\n  const [songsLikedState, setSongsLiked] = useState([]);\r\n  const [songsDownloadedState, setSongsDownloaded] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [redirectState, setRedirectState] = useState(null);\r\n\r\n  const circularLoader = (\r\n    <Grid\r\n      style={{ height: \"100vh\" }}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CircularProgress />\r\n    </Grid>\r\n  );\r\n\r\n  function handleChange(event, newValue) {\r\n    setTabValue(newValue);\r\n  }\r\n\r\n  const fetchSongs = useCallback(async () => {\r\n    //it's same as the orders of our tabs\r\n    switch (tabValue) {\r\n      case 1:\r\n        setSongsLiked(await getLikedSongs());\r\n        break;\r\n\r\n      case 2:\r\n        setSongsDownloaded(await getDownloadedSongs());\r\n        break;\r\n\r\n      case 3:\r\n        setSongsHistory(await getHistory());\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [tabValue]);\r\n  //\r\n  useEffect(() => {\r\n    fetchSongs();\r\n  }, [tabValue, fetchSongs]);\r\n\r\n  useEffect(() => {\r\n    fetchSongs();\r\n    console.log(\"fetching the songs\");\r\n  }, [updateCount, fetchSongs]);\r\n\r\n  useEffect(() => {\r\n    db.on(\"changes\", () => {\r\n      setUpdateCount(c => c + 1);\r\n    });\r\n    // will remove all the songs which are downloading in the first place\r\n    removeDownloadingState();\r\n\r\n    const isThisNewUser = localStorage.getItem(\"isThisNew\");\r\n    if (isThisNewUser === \"no\") {\r\n      setRedirectState(true);\r\n    }\r\n    // if this is not a new user redirect it to home\r\n    previousLocation = location;\r\n    history.listen(location => {\r\n      if (location.pathname !== \"/play\") {\r\n        previousLocation = location;\r\n        console.log(previousLocation);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // we will redirect everytime user comes to root page\r\n    if (redirectState && history.location.pathname === \"/\") {\r\n      history.replace(\"/home\");\r\n    }\r\n\r\n    // if the location is not play then we will push new location\r\n  }, [setRedirectState, history, redirectState]);\r\n\r\n  const checkPrevLocation = () => {\r\n    if (location.pathname === \"/play\") {\r\n      return previousLocation;\r\n    } else {\r\n      return location;\r\n    }\r\n  };\r\n\r\n  // we will load the homepage with all the playlists\r\n  const continueToHome = () => {\r\n    localStorage.setItem(\"isThisNew\", \"no\");\r\n    history.replace(\"/\");\r\n\r\n    if (deferredPrompt) {\r\n      // show the prompt to install app\r\n      deferredPrompt.prompt();\r\n      // Wait for the user to respond to the prompt\r\n      deferredPrompt.userChoice.then(choiceResult => {\r\n        if (choiceResult.outcome === \"accepted\") {\r\n          console.log(\"User accepted the A2HS prompt\");\r\n        } else {\r\n          console.log(\"User dismissed the A2HS prompt\");\r\n        }\r\n        deferredPrompt = null;\r\n      });\r\n    }\r\n  };\r\n\r\n  const returnMainPlayer = props => {\r\n    // we will return the main player if the path is not the \"/\"\r\n\r\n    if (window.location.pathname !== \"/\") {\r\n      return <MainPlayer {...props} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // the set tab value will keep the tab active on their route\r\n  // there are 4 tabs so there will be 3 indexes\r\n  return (\r\n    <div>\r\n      <Suspense fallback={circularLoader}>\r\n        <Switch location={checkPrevLocation()}>\r\n          <Route\r\n            exact\r\n            path=\"/page1\"\r\n            render={props => {\r\n              return <LoginPage continueToHome={continueToHome} />;\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/search\"\r\n            render={props => <SearchResult videos={searchResult} />}\r\n          />\r\n          <Route\r\n            path=\"/page1/home\"\r\n            render={props => {\r\n              setTabValue(0);\r\n              return <HomePage />;\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/page1/liked\"\r\n            render={props => {\r\n              setTabValue(1);\r\n              return (\r\n                <RenderDatabase\r\n                  songs={songsLikedState}\r\n                  {...props}\r\n                  key={location.pathname}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/page1/downloads\"\r\n            render={props => {\r\n              setTabValue(2);\r\n              return (\r\n                <RenderDatabase\r\n                  songs={songsDownloadedState}\r\n                  key={location.pathname}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/page1/history\"\r\n            render={props => {\r\n              setTabValue(3);\r\n              return (\r\n                <RenderDatabase\r\n                  songs={songsHistoryState}\r\n                  key={location.pathname}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/page1/app\"\r\n            render={props => {\r\n              window.location.replace(\r\n                \"/\"\r\n              );\r\n              return <div>Redirecting you to play store</div>;\r\n            }}\r\n          />\r\n\r\n          <Route path=\"/page1/settings\" component={SettingsPage} />\r\n          <Route path=\"/page1/privacy\" component={PrivacyPage} />\r\n\r\n          <Route path=\"/page1/feedback\" component={FeedbackForm} />\r\n          <Route path=\"/page1/donate\" component={DonatePage} />\r\n          <Route path=\"/page1/contributors\" component={ContributorsPage} />\r\n        </Switch>\r\n        <Route path=\"/\" render={props => returnMainPlayer(props)} />\r\n\r\n        <div style={{ height: currentVideoSnippet.id ? \"100px\" : \"50px\" }} />\r\n      </Suspense>\r\n      {/* if the player is on then return 100px else 50px*/}\r\n      <CustomTab\r\n        value={tabValue}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <CustomTabs\r\n          icon={<Home />}\r\n          aria-label=\"Home\"\r\n          component={Link}\r\n          to=\"/page1/home\"\r\n          label=\"Home\"\r\n        />\r\n\r\n        <CustomTabs\r\n          icon={<Favorite />}\r\n          aria-label=\"Liked\"\r\n          component={Link}\r\n          to=\"/page1/liked\"\r\n          label=\"Liked\"\r\n        />\r\n\r\n        <CustomTabs\r\n          icon={<GetApp />}\r\n          aria-label=\"Downloads\"\r\n          component={Link}\r\n          to=\"/page1/downloads\"\r\n          label=\"Downloads\"\r\n        />\r\n        <CustomTabs\r\n          icon={<History />}\r\n          aria-label=\"History\"\r\n          component={Link}\r\n          to=\"/page1/history\"\r\n          label=\"History\"\r\n        />\r\n      </CustomTab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CurrentSection);\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\n\r\nimport moon from '../images/moon.svg';\r\nimport sun from \"../images/sun.svg\";\r\n\r\nimport {\r\n  SwipeableDrawer,\r\n  Avatar,\r\n  Divider,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Link as MaterialLink\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  AccountCircle,\r\n  Feedback,\r\n  Info,\r\n  FreeBreakfast,\r\n  People,\r\n  Settings\r\n} from \"@material-ui/icons\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport \"./darkMode.css\";\r\n\r\n\r\nconst SwipeMenu = () => {\r\n  const [{ menuOpen, themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n\r\n  const setMenuOpen = data => {\r\n    dispatch({ type: \"setMenuOpen\", snippet: data });\r\n  };\r\n\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [isNight, setIsNight] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      setIsNight(true);\r\n    } else {\r\n      setIsNight(false);\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  const changeTheme = theme => {\r\n    setThemeSelectValue(theme);\r\n    localStorage.setItem(\"selectedTheme\", theme);\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    if (!isNight) {\r\n      changeTheme(\"Dark\");\r\n      setIsNight(false);\r\n    } else {\r\n      changeTheme(\"Default\");\r\n      setIsNight(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      open={menuOpen}\r\n      onClose={() => setMenuOpen(false)}\r\n      onOpen={() => setMenuOpen(true)}\r\n    >\r\n      <div style={{ width: \"300px\" }}>\r\n        <div\r\n          style={{\r\n            margin: \"35px\",\r\n            position: \"relative\",\r\n            width: \"30px\",\r\n            height: \"30px\"\r\n          }}\r\n        >\r\n          <AnimatePresence>\r\n            {/* <motion.img\r\n              key= { isNight ? sun : moon }\r\n              initial={{ scale: 0 }}\r\n              animate={{ scale: 1.5, rotate: \"360deg\" }}\r\n              exit={{ scale: 0 }}\r\n              transition={{ duration: 0.5 }}\r\n              src={moon}\r\n              className=\"dayNightToggleBtn\"\r\n              alt=\"sun moon icon\"\r\n            /> */}\r\n            <img src={isNight ? sun : moon} className=\"dayNightToggleBtn\" animate={{ scale: 1.5, rotate: \"360deg\" }} alt=\"sun moon icon\" onClick={() => handleThemeToggle()} />\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <List\r\n          component=\"nav\"\r\n          className={\"pinkLists\"}\r\n          onClick={() => setMenuOpen(false)}\r\n        >\r\n          <ListItem button component={Link} to=\"/page1/settings\">\r\n            <ListItemIcon>\r\n              <Settings />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/page1/feedback\">\r\n            <ListItemIcon>\r\n              <Feedback />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Feedback\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/page1/donate\">\r\n            <ListItemIcon>\r\n              <FreeBreakfast />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Donate & Support\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/page1/contributors\">\r\n            <ListItemIcon>\r\n              <People />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Contributors\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={Link}\r\n            target=\"blank\"\r\n            href=\"https://github.com/nDsCoop/\"\r\n          >\r\n            <ListItemIcon>\r\n              <svg\r\n                width=\"24\"\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\"\r\n                data-prefix=\"fab\"\r\n                data-icon=\"github\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 496 512\"\r\n                fill=\"#ffff\"\r\n              >\r\n                <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\r\n              </svg>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Github\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/page1/privacy\">\r\n            <ListItemIcon>\r\n              <Info />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Privacy & Policy\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default SwipeMenu;\r\n","import React, { useContext, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Box,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nexport const useCheckDarkmode = () => {\r\n  const [, dispatch] = useContext(GlobalContext);\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const checkDarkMode = () => {\r\n    const selectedTheme = localStorage.getItem(\"selectedTheme\");\r\n\r\n    // we will check if system dark mode is enabled or not\r\n\r\n    // const colorScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    // colorScheme.addEventListener(\"change\", e => {\r\n    //   if (e.matches) {\r\n    //     // if it matches we will set it to dark else default\r\n    //     setThemeSelectValue(\"Dark\");\r\n    //   } else {\r\n    //     setThemeSelectValue(\"Default\");\r\n    //   }\r\n    // });\r\n    if (selectedTheme) {\r\n      console.log(selectedTheme);\r\n      setThemeSelectValue(selectedTheme);\r\n\r\n      const date = new Date();\r\n      const hrs = date.getHours();\r\n\r\n      // if the theme is auto then only do it\r\n      if (selectedTheme === \"Auto\") {\r\n        if (hrs >= 18 || hrs <= 6) {\r\n          setThemeSelectValue(\"Dark\");\r\n        } else {\r\n          setThemeSelectValue(\"Default\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return { checkDarkMode };\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleThemeChange = e => {\r\n    setThemeSelectValue(e.target.value);\r\n    localStorage.setItem(\"selectedTheme\", e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(themeSelectValue);\r\n  }, [themeSelectValue]);\r\n\r\n  const selectComp = (\r\n    <Box m={1}>\r\n      \r\n      <Select\r\n        value={themeSelectValue}\r\n        onChange={handleThemeChange}\r\n        displayEmpty\r\n        name=\"age\"\r\n      >\r\n        <MenuItem value=\"Default\">Default</MenuItem>\r\n        <MenuItem value=\"Dark\">Dark</MenuItem>\r\n        <MenuItem value=\"Auto\">Auto</MenuItem>\r\n      </Select>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n        Settings\r\n      </Typography>\r\n      <FormControl component=\"fieldset\">\r\n        <FormGroup row>\r\n          <FormControlLabel\r\n            labelPlacement=\"start\"\r\n            label=\"Select Theme \"\r\n            value=\"top\"\r\n            control={selectComp}\r\n          />\r\n        </FormGroup>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\nexport default SettingsPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport SimpleAppBar from \"./header/SimpleAppBar\";\r\nimport MainPlayer from \"./player/MainPlayer\";\r\nimport SwipeMenu from \"./SwipeMenu\";\r\nimport SnackbarMessage from \"./SnackbarMessage\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { blueGrey, blue } from \"@material-ui/core/colors\";\r\n\r\nimport { useCheckDarkmode } from \"./sections/SettingsPage\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport CurrentSection from \"./CurrentSection\";\r\n\r\nconst body = document.querySelector(\"body\");\r\n\r\nconst defaultTheme = {\r\n  palette: {\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: blueGrey,\r\n    third: blue,\r\n    secondary: {\r\n      main: \"#263238\"\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n};\r\n\r\nconst muiDarkTheme = createMuiTheme(darkTheme);\r\nconst muiDefaultTheme = createMuiTheme(defaultTheme);\r\n\r\nconst App2 = () => {\r\n  const [{ themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n\r\n  const { checkDarkMode } = useCheckDarkmode();\r\n\r\n  useEffect(() => {\r\n    checkDarkMode();\r\n\r\n    if (navigator.userAgent.match(/Android/i)) {\r\n      body.style.overscrollBehavior = \"none\";\r\n      // this is to disable pull refresh on android\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      body.classList.add(\"dark\");\r\n    } else {\r\n      body.classList.remove(\"dark\");\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeSelectValue === \"Dark\" ? muiDarkTheme : muiDefaultTheme}>\r\n      <Switch>\r\n      <Router>\r\n            <SimpleAppBar />\r\n            <Route component={CurrentSection} />\r\n            <SwipeMenu />\r\n        </Router> \r\n      </Switch>\r\n       \r\n    </MuiThemeProvider>\r\n  );\r\n};\r\nexport default App2;\r\n","import React from \"react\";\r\nimport App2 from \"../components/App2\";\r\nimport { GlobalState } from \"../components/GlobalState\";\r\nimport '../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n   <GlobalState>\r\n      <App2 />\r\n    </GlobalState> \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// this do not works","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport loadingGif from '../images/logo.svg';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction AuthWrapper({ children }) {\r\n  const { isLoading, error } = useAuth0();\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        <img src={loadingGif} alt='spinner' />\r\n      </Wrapper>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <Wrapper>\r\n        <h1>{error.message}</h1>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <>{children}</>;\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  min-height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n  img {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport default AuthWrapper;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n \r\n  const { isAuthenticated, user } = useAuth0();\r\n \r\n  const isUser = { isAuthenticated, user };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => {\r\n        return isUser ? children : <Redirect to='/login'></Redirect>;\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport styled from 'styled-components';\r\nimport loginImg from '../images/login-img.svg';\r\nimport Hero from '../components/Hero';\r\nimport Banner from '../components/Banner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <Hero>\r\n    <Banner title='LoginApp'>\r\n        <Wrapper>\r\n            <ul>\r\n                <img src={loginImg} alt='login image' />\r\n            </ul>\r\n        <Link onClick={loginWithRedirect} className=\"btn-second\">\r\n            Log In / Sign Up\r\n        </Link>\r\n        </Wrapper>\r\n     </Banner>\r\n </Hero>\r\n  );\r\n};\r\nconst Wrapper = styled.section`\r\n  img {\r\n    top:0;\r\n    height: 50vh;\r\n    width: 70vh;\r\n  }\r\n  .btn-second {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    letter-spacing: var(--mainSpacing);\r\n    color: var(--mainBlack);\r\n    background: var(--primaryColor);\r\n    padding: 0.4rem 0.9rem;\r\n    border: 3px solid var(--primaryColor);\r\n    transition: var(--mainTransition);\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n  }\r\n  .btn-second:hover {\r\n  background: transparent;\r\n  color: var(--primaryColor);\r\n}\r\n`;\r\nexport default Login;","import React, { Component } from 'react';\r\nimport defaultImg from '../images/logoSvg.svg';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { MdSettings, MdDeleteForever } from 'react-icons/md';\r\n\r\n\r\n\r\nexport class UserBar extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: null,\r\n            showUserFrom : false,\r\n            isLogin: true,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                name: ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    onClickOutSide = (e) => {\r\n        if(this.ref && !this.ref.contains(e.target)){\r\n            console.log(\"Here click out side login form!\");\r\n            this.setState({\r\n                showUserFrom: false,\r\n                showUserMenu: false\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Didmount');\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        console.log('Unmount');\r\n    }\r\n    onSubmit = (e) => {\r\n        const { store } = this.props;\r\n        const { user , isLogin } = this.state;\r\n        e.preventDefault();\r\n        this.setState({\r\n            message: null\r\n        }, () => {\r\n            if(isLogin){\r\n                store.login(user.email, user.password).then((user) => {\r\n                    this.setState({\r\n                        message: null,\r\n                        showUserFrom: false,\r\n                        showUserMenu: false\r\n                    })\r\n    \r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        message: {\r\n                            body: err,\r\n                            type: 'error'\r\n                        }\r\n                    })\r\n                });\r\n            } else {\r\n                store.register(user).then((_) => {\r\n                    this.setState({\r\n                        message: {\r\n                            body: 'User created',\r\n                            type: 'Success'\r\n                        }\r\n                    }, () => {\r\n                        // now login this user\r\n                        store.login(user.email, user.password).then((user) => { \r\n                        //\r\n                        this.setState({\r\n                            message: null,\r\n                            showUserFrom: false,\r\n                            showUserMenu: false\r\n                        })\r\n        \r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                            message: {\r\n                                body: err,\r\n                                type: 'error'\r\n                            }\r\n                        })\r\n                        });\r\n                    })\r\n                });\r\n            }\r\n           \r\n        })\r\n\r\n    }\r\n\r\n    onTxtfieldChange = (e) => {\r\n        let { user } = this.state;\r\n        const field = e.target.name;\r\n        user[field] = e.target.value;\r\n        this.setState({\r\n            user: user\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, isLogin } = this.state;\r\n        const { store } = this.props;\r\n        const me = store.getCurrentUser();\r\n        const profileImg = _.get(me, 'avatar');\r\n        const name = _.get(me,'name');\r\n        const email = _.get(me, 'email');\r\n        const avatar = _.get(me , 'avatar');\r\n        return (\r\n    <>\r\n        <div className=\"user-bar\">\r\n            { !me ? <button type=\"button\" onClick={(e) => this.setState({showUserFrom: true})} className=\"login-btn\">Sign In</button> : null}\r\n            <div className=\"name-user\">{_.get(me, 'name')}</div>\r\n            <img src={profileImg ? profileImg : defaultImg} onClick={(e) => this.setState({showUserMenu: true})}  alt=\"user-img\" className=\"img-user\"></img>\r\n\r\n            { me && this.state.showUserMenu ?  <div className=\"user-form-1\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Your Account</h4>\r\n                    </li>\r\n                    {/* <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li> */}\r\n                    <li className =\"header-menu\">\r\n                        <img src={avatar} alt=\"user-img\" />\r\n                        <span>{name}</span>\r\n                    </li>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Name: {name}</p>\r\n                        <div>\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className =\"body-menu\">\r\n                        <p htmlFor=\"email\">Eamil: {email}</p>\r\n                        <div> <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton></div>\r\n                    </div>\r\n                    {/* <li>\r\n                        <label htmlFor=\"text\">\r\n                        UserName\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        autoComplete = {email}\r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li> */}\r\n                    {/* <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'}  \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                        <button type=\"button\" className=\"login-btn\">Change</button>\r\n                    </li> */}\r\n                    \r\n                    <div className=\"footer-menu\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button onClick = { () => store.signOut()}\r\n                        type=\"button\" className=\"login-btn\">Signout</button>\r\n                        </li>\r\n                    {/* <li>\r\n                        <button className=\"login-btn\" >Create new account?</button>\r\n                    </li> */}\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n             { !me && this.state.showUserFrom ? <div className=\"user-form\" ref = {(ref) => this.ref = ref}>\r\n                <form onSubmit= {this.onSubmit}>\r\n                <ul className=\"form-container\">\r\n                    <li>\r\n                        <h4>Sign In / Register Your Account</h4>\r\n                    </li>\r\n                    <li>\r\n                        { message ? <p className={classNames('app-msg', _.get(message, 'type'))}>\r\n                            {_.get(message, 'body')}\r\n                        </p> : null } \r\n                    </li>\r\n                    {\r\n                        !isLogin ? <li>\r\n                        <label htmlFor=\"name\">\r\n                        Name\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"Your-Name\" \r\n                        required type=\"text\" name=\"name\"\r\n                        value = {_.get(user, 'name')} \r\n                        id=\"name\" ></input>\r\n                    </li>\r\n                    :\r\n                    null\r\n                    }\r\n                    \r\n                    <li>\r\n                        <label htmlFor=\"email\">\r\n                        Email\r\n                        </label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) } \r\n                        placeholder=\"example.vn@nds.com\" \r\n                        required type=\"email\" name=\"email\"\r\n                        value = {_.get(user, 'email')} \r\n                        id=\"email\" ></input>\r\n                    </li>\r\n                    <li>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={(e) => this.onTxtfieldChange(e) }\r\n                        autoComplete = {'off'} \r\n                        placeholder=\"Your-password\" \r\n                        required type=\"password\"\r\n                        value = {_.get(user, 'password')} \r\n                        id=\"password\" name=\"password\" ></input>\r\n                    </li>\r\n                    <div className=\"footer-login\">\r\n                        <div className=\"img\">\r\n                            <img style={{maxHeight: \"5rem\", maxWidth: \"5rem\"}} src={defaultImg} alt=\"nds\"/>\r\n                        </div>\r\n                        <div className=\"btn-cc\">\r\n                        <li>\r\n                        <button type=\"submit\" className=\"login-btn\">{isLogin ? 'Log In' : 'New Account'}</button>\r\n                    </li>\r\n                    {isLogin ? <li>\r\n                       <button onClick = {() => {\r\n                          this.setState({\r\n                              isLogin: false,\r\n                          })\r\n                      }}\r\n                      className=\"login-btn\" >Create new account?</button>\r\n                      </li> : null }\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                </form>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n \r\n           \r\n           \r\n        \r\n        </div>\r\n    </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default UserBar\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass AudioVisualiser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvas = React.createRef();\r\n  }\r\n  componentDidUpdate() {\r\n    this.draw();\r\n  }\r\n\r\n  draw() {\r\n    const { audioData } = this.props;\r\n    const canvas = this.canvas.current;\r\n    const height = canvas.height;\r\n    const width = canvas.width;\r\n    const context = canvas.getContext('2d');\r\n    let x = 0;\r\n    const sliceWidth = (width * 1.0) / audioData.length;\r\n    context.lineWidth = 1.68;\r\n    context.strokeStyle = 'rgba(199, 119, 199, 0.9)';\r\n    context.clearRect(0, 0, width, height);\r\n\r\n    context.beginPath();\r\n    context.moveTo(0, height / 2);\r\n    for (const item of audioData) {\r\n      const y = (item / 255.0) * height;\r\n      context.lineTo(x, y);\r\n      x += sliceWidth;\r\n    }\r\n    context.lineTo(x, height / 2);\r\n    context.stroke();\r\n  }\r\n \r\n  render() {\r\n    return <canvas width=\"1250px\" height=\"400px\" ref={this.canvas}>\r\n    </canvas>;\r\n  }\r\n}\r\n\r\nexport default AudioVisualiser;","import React, { Component } from 'react';\r\nimport AudioVisualiser from './AudioVisualiser';\r\n\r\nclass AudioAnalyser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { audioData: new Uint8Array(0) };\r\n    this.tick = this.tick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.audioContext = new (window.AudioContext ||\r\n      window.webkitAudioContext)();\r\n    this.analyser = this.audioContext.createAnalyser();\r\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n    this.source = this.audioContext.createMediaStreamSource(this.props.audio);\r\n    this.source.connect(this.analyser);\r\n    this.source.connect(this.analyser);\r\n    this.rafId = requestAnimationFrame(this.tick);\r\n  }\r\n  tick() {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ audioData: this.dataArray });\r\n    this.rafId = requestAnimationFrame(this.tick);\r\n  }\r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.rafId);\r\n    this.analyser.disconnect();\r\n    this.source.disconnect();\r\n  }\r\n  render() {\r\n    return <AudioVisualiser audioData={this.state.audioData} />;\r\n  }\r\n}\r\n\r\nexport default AudioAnalyser;","import React, { Component } from 'react'\r\n\r\nimport io from 'socket.io-client';\r\n\r\nexport class MainVideo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.localVideoref = React.createRef();\r\n        this.remoteVideoref = React.createRef();\r\n        this.socket = null;\r\n        this.candidates = [];\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.socket = io(\r\n            '/webrtcPeer',\r\n            {\r\n                path: '/webrtc',\r\n                query: {},\r\n               \r\n            }\r\n        )\r\n\r\n        this.socket.on('connection-success', success => {\r\n            console.log(success);\r\n        });\r\n        this.socket.on('offerOrAnswer', (sdp) => {\r\n            this.textref.value = JSON.stringify(sdp)\r\n            console.log(\"done here!\")\r\n        })\r\n        this.socket.on('candidate', (candidate) => {\r\n           this.candidates = [...this.candidates, candidate]\r\n        })\r\n      \r\n\r\n\r\n\r\n        const pc_config = null\r\n        this.pc = new RTCPeerConnection(pc_config)\r\n\r\n        this.pc.onicecandidate = (e) => {\r\n            if(e.candidate) {\r\n                this.sendToPeer('candidate', e.candidate)\r\n            }\r\n        }\r\n        this.pc.oniceconnectionstatechange = (e) => {\r\n            console.log(e)\r\n        }\r\n        \r\n        this.pc.onaddstream = (e) => {\r\n            this.remoteVideoref.current.srcObject = e.stream\r\n        }\r\n       \r\n\r\n\r\n        const success = (stream) => {\r\n            window.localStream = stream\r\n            this.localVideoref.current.srcObject = stream\r\n            this.pc.addStream(stream)\r\n        }\r\n        const failure = (e) => {\r\n            console.log(\"Error: \", e);\r\n            //\r\n        }\r\n\r\n        const constraints = { audio: false, video: true }\r\n\r\n        navigator.mediaDevices.getUserMedia( constraints )\r\n        .then( success )\r\n        .catch( failure )\r\n    }\r\n    sendToPeer = (messageType, payload) => {\r\n        this.socket.emit((messageType, {\r\n            socketID: this.socket.id,\r\n            payload\r\n        }))\r\n    }\r\n    createOffer = () => {\r\n        console.log(\"Offer\");\r\n\r\n        this.pc.createOffer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n            // console.log(JSON.stringify(sdp))\r\n            this.pc.setLocalDescription(sdp);\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n        });\r\n    }\r\n  \r\n    createAnswer = () => {\r\n        console.log('Answer');\r\n        this.pc.createAnswer({offerToReceiveVideo: 1})\r\n        .then(sdp => {\r\n           \r\n            this.pc.setLocalDescription(sdp);\r\n\r\n            this.sendToPeer('offerOrAnswer', sdp);\r\n        });\r\n    }\r\n    setRemoteDescription = () => {\r\n        const desc = JSON.parse(this.textref.value)\r\n        this.pc.setRemoteDescription(new RTCSessionDescription(desc))\r\n    }\r\n    addCandidate = () => {\r\n        // const candidate = JSON.parse(this.textref.value)\r\n        // console.log('Adding cadidata: ', candidate)\r\n        // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\r\n        this.candidates.forEach(candidate => {\r\n            console.log(JSON.stringify(candidate))\r\n            this.pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <video ref={this.localVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n                \r\n                <video ref={this.remoteVideoref}\r\n                style={{width: 240, height: 240, margin: 5, backgroundColor: 'black'}}\r\n                autoPlay ></video>\r\n\r\n                <button onClick={this.createOffer}>Offer</button>\r\n                <button onClick={this.createAnswer}>Answer</button>\r\n                <br/>\r\n                <textarea style={{height:'2rem', width: '23rem'}} ref= { ref => { this.textref = ref }}/>\r\n                <br/>\r\n                <button onClick={this.setRemoteDescription}>Set Remoete Desc</button>\r\n                <button onClick={this.addCandidate}>Add Candidate</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainVideo\r\n","import React, { Component } from 'react'\r\nimport defaultImg from '../images/Logosvg3.svg';\r\nimport className from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport { OrderedMap } from 'immutable';\r\nimport _, { chunk } from 'lodash';\r\nimport {ObjectID} from \"../helpers/objectid\";\r\nimport { IconButton } from '@material-ui/core';\r\nimport { CgSoftwareUpload } from 'react-icons/cg'\r\nimport { MdSettings, MdDeleteForever, MdInsertEmoticon, MdMic } from 'react-icons/md';\r\nimport moment from 'moment';\r\nimport { UserBar } from \"./UserBar\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport AudioAnalyser from './library/AudioAnalyser';\r\nimport {MainVideo} from './MainVideo';\r\n// import { ReactMic } from 'react-mic';\r\n\r\n\r\n\r\nexport default class App3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height: window.innerHeight,\r\n            newMessage: '',\r\n            searchUser: '',\r\n            showSearchUser : false,\r\n            isTyping: false,\r\n            showEmoji: false,\r\n            audio: null,\r\n            temp : 5000,\r\n            isShowGetAud: false,\r\n            record: false,\r\n        }\r\n\r\n    }\r\n   \r\n   \r\n    async startRecording() {\r\n        const {store} = this.props;\r\n        const audio = await navigator.mediaDevices.getUserMedia({\r\n          audio: true,\r\n          video: false,\r\n        });\r\n        this.setState({ audio });\r\n        this.setState({isShowGetAud: true});\r\n        this.setState({ record: true });\r\n\r\n        const chunks = [];\r\n        const recoder = new MediaRecorder(audio);\r\n        recoder.start();\r\n\r\n        recoder.ondataavailable = function(e) {\r\n            chunks.push(e.data);\r\n            const namefile = new ObjectID().toString();\r\n            let files = new File(chunks, `${namefile+'.mp3'}` , {type: \"audio/wav\"});\r\n            const path = URL.createObjectURL(files);\r\n            files.path = `${_.toString(path.substring(27)+'.mp3')}`;\r\n            const name = _.toString(files.path);\r\n            files.fileName = `${name}`;\r\n            // console.log(\"file goc 1: \", files);\r\n            let file = [];\r\n            file.push(files);\r\n            // console.log(\"File goc\", file);\r\n            const formData = new FormData();\r\n            formData.append('file', file[0] );\r\n            // store.upLoadfile(formData);\r\n        }\r\n    }\r\n        \r\n    //stop\r\n    stopRecording() {\r\n       if(this.state.audio !== null){\r\n        this.state.audio.getTracks().forEach(track => track.stop());\r\n        this.setState({ audio: null });\r\n        this.setState({ record: false }); \r\n       } else {\r\n           console.log(\"Error shortage-lenght!\");\r\n       }\r\n               \r\n        \r\n    }\r\n\r\n\r\n        \r\n        onClickOutSide = (e) => {\r\n            if(this.ref && !this.ref.contains(e.target)){\r\n                // console.log(\"Here click out side login form!\");\r\n                this.setState({\r\n                    showEmoji: false,\r\n                })\r\n            }\r\n        }\r\n\r\n        onDrop = (files) => {\r\n            const {store} = this.props;\r\n            console.log(\"file goc: \",files);\r\n            let formData = new FormData;\r\n            formData.append(\"file\", files[0]);\r\n            store.upLoadfile(formData);\r\n            console.log(\"file format: \",formData);\r\n        }\r\n\r\n\r\n        componentWillUnmount() {\r\n            this.stopCheckingTyping()\r\n        }\r\n\r\n        sendTyping = () =>{\r\n            const { store } = this.props;\r\n            const activeChannel = store.getActiveChannel();\r\n            this.lastUpdateTime = Date.now()\r\n            if(!this.state.isTyping){\r\n                this.setState({isTyping:true});\r\n                store.addTyping(activeChannel, true);\r\n                this.startCheckingTyping();\r\n\r\n            }\r\n        }\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n        startCheckingTyping = ()=>{\r\n            console.log(\"Typing\");\r\n            this.typingInterval = setInterval(()=>{\r\n                if((Date.now() - this.lastUpdateTime) > 350){\r\n                    this.setState({isTyping:false})\r\n                    this.stopCheckingTyping()\r\n                }\r\n            }, 300)\r\n        }\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n        stopCheckingTyping = ()=>{\r\n            const { store } = this.props;\r\n            const activeChannel = store.getActiveChannel();\r\n            console.log(\"Stop Typing\");\r\n            if(this.typingInterval){\r\n                clearInterval(this.typingInterval)\r\n                store.addTyping(activeChannel, false);\r\n            // console.log(this.state.isTyping);\r\n            }\r\n        }\r\n\r\n\r\n    renderChannelAvatar(channel){\r\n        const {store} = this.props;\r\n\r\n        const members = store.getMembersFromChannel(channel);\r\n\r\n        const maxDisplay = 4;\r\n        const total = members.size > maxDisplay ? maxDisplay : members.size;\r\n\r\n        const avatars = members.map((user, index) => {\r\n\r\n\r\n\r\n            return index < maxDisplay ?  <img key={index} src={_.get(user, 'avatar')} alt={_.get(user, 'name')} /> : null\r\n\r\n        });\r\n\r\n\r\n        return <div className={className('channel-avatars', `channel-avatars-${total}`)}>{avatars}</div>\r\n    }\r\n    renderChannelTitle = (channel = null) => {\r\n        const { store } = this.props;\r\n        const members = store.getMembersFromChannel(channel);\r\n         const names = [];\r\n\r\n         members.forEach((user) => {\r\n             const name = _.get(user, 'name')\r\n             names.push(name);\r\n         });\r\n         let title = _.join(names, ', ');\r\n         if(!title && _.get(channel, 'isNew')){\r\n             title = 'New Mss';\r\n         }\r\n        return <h4>{title}</h4>\r\n    }\r\n   \r\n    handleOnClick = (user) => {\r\n       \r\n        const { store } =this.props;\r\n        const userId = _.get(user, '_id');\r\n        const channelId = _.get( store.getActiveChannel(),'_id')\r\n        store.addUserToChannel(channelId, userId);\r\n        this.setState({\r\n            searchUser: '',\r\n        })\r\n    }\r\n    _onCreateChannel = (e) => {\r\n        e.preventDefault()\r\n        const { store } =this.props;\r\n        const currentUser = store.getCurrentUser();\r\n        const currentUserId = _.get(currentUser, '_id');\r\n        const channelId = new ObjectID().toString();\r\n        const channel = {\r\n            _id: channelId,\r\n            title: \"\",\r\n            lastMessage: \"Let's a chat\",\r\n            members: new OrderedMap(),\r\n            messages: new OrderedMap(),\r\n            isNew: true,\r\n            userId: currentUserId,\r\n            created: new Date(),\r\n            typing: false,\r\n        };\r\n        channel.members = channel.members.set(currentUserId, true);\r\n        store.onCreateNewChannel(channel);\r\n    }\r\n    scrollMessagesToBottom = () => {\r\n        if(this.messagesRef){\r\n            this.messagesRef.scrollTop = this.messagesRef.scrollHeight;\r\n        }\r\n    }\r\n    // renderMessage(message){\r\n    //     const txt = _.get(message, 'body' , '');\r\n    //     const html = _.split(txt, '\\n').map((m, key) => {\r\n    //         return <p key={key} dangerouslySetInnerHTML={{ __html: m }}></p>\r\n    //     })\r\n\r\n    //         message.substring(0, 8) === \"uploads/\" ?\r\n    //             // this will be either video or image \r\n\r\n    //             message.substring(message.length - 3, message.length) === 'mp4' ?\r\n    //                 <video\r\n    //                     style={{ maxWidth: '200px' }}\r\n    //                     src={`http://localhost:3000/${message.body}`} alt=\"video\"\r\n    //                     type=\"video/mp4\" controls\r\n    //                 />\r\n    //                 :\r\n    //                 <img\r\n    //                     style={{ maxWidth: '200px' }}\r\n    //                     src={`http://localhost:5000/${message.body}`}\r\n    //                     alt=\"img\"\r\n    //                 />\r\n    //         :\r\n    //         <p>\r\n    //             {message.body}\r\n    //         </p>\r\n\r\n        \r\n        \r\n    //     return html;\r\n    // }\r\n    handleSubmit = (e) => {\r\n\r\n        const { newMessage } = this.state;\r\n        const { store } = this.props;\r\n        e.preventDefault();\r\n\r\n        if(_.trim(newMessage).length){\r\n            const messageId = new ObjectID().toString();\r\n            const channel = store.getActiveChannel();\r\n            const channelId = _.get(channel , '_id', null);\r\n            const currentUser = store.getCurrentUser();\r\n            const message = {\r\n                _id: messageId,\r\n                channelId: channelId,\r\n                body : newMessage,\r\n                userId: _.get(currentUser, '_id'),\r\n                type:\"text\",\r\n                me: true,\r\n            };\r\n            \r\n            store.addMessage(messageId, message);\r\n            this.setState({newMessage: \"\"});\r\n        }\r\n        this.setState({\r\n            newMessage: \"\",\r\n            showEmoji: false\r\n        });\r\n\r\n    };\r\n    _onResi = () => {\r\n        this.setState({height: window.innerHeight});\r\n    }\r\n    // addTestMessages = () => {\r\n    //     const {store} = this.props\r\n\r\n      \r\n    //     for(let i = 0; i < 20; i++){\r\n    //         let isMe = false;\r\n    //         if(i % 2 === 0) {\r\n    //             isMe = true;\r\n    //         }\r\n    //         const newMsg = {\r\n    //             _id: `${i}`,\r\n    //             author: `Author: ${i}`,\r\n    //             body: `The body of message ${i}`,\r\n    //             avatar: defaultImg,\r\n    //             me: isMe,\r\n    //             timing: '0:00'\r\n    //         }\r\n    //         store.addMessage(i, newMsg);\r\n\r\n    //     }\r\n\r\n    //     for (let c = 0; c<10; c++){\r\n    //         const newChannel ={\r\n    //             _id: `${c}`,\r\n    //             title: `Channel title ${c}`,\r\n    //             lastMessage: `Hey there is.. ${c}`,\r\n    //             members: new OrderedMap({\r\n    //                 '1': true,\r\n    //                 '2': true,\r\n    //             }),\r\n    //             messages: new OrderedMap(),\r\n    //             created: new Date(),\r\n    //         }\r\n    //         const moreMsgId =`${c + 1}`;\r\n    //         const msgId = `${c}`;\r\n    //         newChannel.messages = newChannel.messages.set(msgId, true);\r\n    //         newChannel.messages = newChannel.messages.set(moreMsgId, true);\r\n    //         store.addChannel(c, newChannel);\r\n    //     }\r\n\r\n    // }\r\n    componentDidUpdate(){\r\n        this.scrollMessagesToBottom();\r\n        // console.log(\"CDidUpdate\");\r\n       \r\n    }\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this._onResi);\r\n        window.addEventListener('mousedown', this.onClickOutSide);\r\n        // this.addTestMessages();\r\n        // console.log(\"CDidMount\");\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener('resize', this._onResi);\r\n        window.removeEventListener('mousedown', this.onClickOutSide);\r\n        // console.log(\"CWillUnMount\");\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { height, newMessage, showEmoji, isShowGetAud} = this.state;\r\n        const { store } = this.props;\r\n        // const isConnected = store.isConnected();\r\n        const activeChannel = store.getActiveChannel();\r\n        const messages = store.getMessagesFromChannel(activeChannel);\r\n        const members = store.getMembersFromChannel(activeChannel);\r\n        const channels = store.getChannels();\r\n        const usersList = store.getSearchUsers();\r\n        const me = store.getCurrentUser();\r\n\r\n        const onEmojiClick = (event, emojiObject) => {\r\n            this.setState({newMessage:`${emojiObject.emoji}`});\r\n            console.log(`${emojiObject.emoji}`);\r\n        }\r\n       \r\n\r\n        const style = {\r\n            height: height,\r\n        }\r\n        const resultSearch = () => {\r\n\r\n                return (\r\n                    <div className=\"search-user\">\r\n                        <div className=\"user-list\">\r\n                        {usersList.map((user, index) =>{\r\n                            return <div onClick={() => this.handleOnClick(user)} key={index} className=\"user\">\r\n                            <img src={user.avatar} alt={user.name} />\r\n                            <span>{user.name}</span>\r\n                        </div>\r\n                        })\r\n                        } \r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n        return (\r\n            <div style={style} className=\"app3\">\r\n                \r\n               <div className=\"chat-header\">\r\n                    <div className=\"header-left\">\r\n                        <div className=\"action\">\r\n                            <Link onClick={(e) => this._onCreateChannel(e)} className=\"btn-primary\">AddNew</Link>\r\n                        </div>\r\n                    </div>\r\n                    {_.get(activeChannel, 'isNew') ? <div className=\"toolbar\">\r\n                        <form className=\"tool\">\r\n                            <textarea\r\n                            type=\"text\"\r\n                            value ={ this.state.searchUser }\r\n                            placeholder=\"To UserName/Email\"\r\n                            onChange = {(e) => {\r\n                                const searchTxt = _.get(e, 'target.value');\r\n                                this.setState({\r\n                                    searchUser: searchTxt,\r\n                                }, () => {\r\n                                    store.startSearchUsers(searchTxt);\r\n                                })\r\n                                \r\n                            }}\r\n                            />\r\n                        </form>\r\n                        {resultSearch()}\r\n                        </div> : null }\r\n\r\n                    <div className=\"header-mid\">\r\n                        { this.renderChannelTitle(activeChannel) }\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                        <UserBar store = { store } />\r\n                        <div className=\"toolsRight-bar\">\r\n                        <IconButton  style={{ color: \"rgba(0, 0, 0, 0.5)\"}}>\r\n                            <MdSettings />\r\n                        </IconButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chat-main\">\r\n                    <div className=\"sidebar-left\">\r\n                        <div className=\"chanels\">\r\n                            {channels.map((channel, index) =>{\r\n                                return (\r\n                                    <div onClick= {(index) => {\r\n                                        store.setActiveChannelId(channel._id);\r\n                                    }} key={channel._id} className={className('chanel', {'active' : _.get(activeChannel, '_id') === _.get(channel, '_id', null)})}>\r\n                                        <div className=\"user-img\">\r\n                                            {this.renderChannelAvatar(channel)}\r\n                                        </div>\r\n                                        <div className={className('chanel-info',{'notify': _.get(channel, 'notify', null)})}>\r\n                                            {this.renderChannelTitle(channel)}\r\n                                            {/* <p>{channel.lastMessage}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat-content\">\r\n                        <div className=\"toolChat\">\r\n                            <Dropzone onDrop={this.onDrop}>\r\n                                {({getRootProps, getInputProps}) => (\r\n                                    <section>\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        <IconButton>\r\n                                            <CgSoftwareUpload />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    </section>\r\n                                )}\r\n                            </Dropzone>\r\n                        </div>\r\n                        <div ref={(ref) => this.messagesRef = ref} className=\"messages\">\r\n                            { \r\n                                messages.map((mess, index) => { \r\n                                    const user = _.get(mess, 'user');\r\n                                    return (\r\n                                    <div key={index} className={`${mess.me ? 'message-me' : 'message'}`}>\r\n\r\n                                    <img src={_.get(user, 'avatar')} alt=\"user-img\" className=\"img-user\"></img>\r\n\r\n                                    <div className=\"message-body\">\r\n\r\n                                        <div className=\"username\">{`${mess.me ? 'You' : _.get(mess, 'user.name')}`} say: </div>\r\n                                        \r\n                                        <p className=\"message-text\">\r\n                                                { `${mess.body}`.substring(0, 8) === \"uploads/\" ?\r\n                                                // this will be either video or image \r\n\r\n                                                (`${mess.body}`).substring((`${mess.body}`).length - 3, (`${mess.body}`).length) === 'mp3' ? \r\n                                                    <video\r\n                                                        style={{ maxWidth: '20rem' }}\r\n                                                        src={`http://localhost:8080/${mess.body}`} alt=\"video\"\r\n                                                        type=\"video/mp4\" controls\r\n                                                    />\r\n                                                    :\r\n                                                    <img\r\n                                                        style={{ maxWidth: '20rem' }}\r\n                                                        src={`http://localhost:8080/${mess.body}`}\r\n                                                        alt=\"img\"\r\n                                                    />\r\n                                            :\r\n                                            <p>{mess.body}</p>\r\n                                            } \r\n                                            {/* { this.renderMessage(mess) } */}\r\n                                            <p className=\"timing\">{mess.timing}</p>\r\n\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    );\r\n                                   \r\n                                })\r\n                            }\r\n                                {showEmoji ? <div className=\"emoji\" ref = {(ref) => this.ref = ref}>\r\n                                    <Picker  onEmojiClick={onEmojiClick} skinTone={SKIN_TONE_MEDIUM_DARK}/>\r\n                                </div> : null }\r\n                              \r\n                                 \r\n                        </div>\r\n                        {\r\n                        isShowGetAud ? <div className=\"getAdi\">\r\n                                <div>\r\n                                {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : null}\r\n                                </div>\r\n                        </div> : null\r\n                        }\r\n                        \r\n                        {_.get(activeChannel, 'typing') && _.get(activeChannel, 'typier') !== _.get(me, '_id') ? <div  disabled = { newMessage.length > 1 } className=\"typing-status\">Is Typing..</div> : null}\r\n                        {   members.size > 0 ? <div className=\"message-input\">\r\n                            <form \r\n                                onSubmit= { this.handleSubmit }\r\n                                disabled = { newMessage.length < 1 }\r\n                                className=\"message-form\">\r\n                                <IconButton onClick = {() => {this.setState({showEmoji: !showEmoji})}}>\r\n                                    <MdInsertEmoticon />\r\n                                </IconButton>\r\n                                <textarea  \r\n                                    id = \"message\"\r\n                                    ref={(input)=> this.input = input}\r\n                                    type = \"text\"\r\n                                    className = \"form-control\"\r\n                                    value = { newMessage }\r\n                                    autoComplete = {'off'}\r\n                                    placeholder = \"Type something interesting\"\r\n                                    onKeyUp = { (e) => { \r\n                                        { if(e.keyCode === 13 && !e.shiftKey) \r\n                                            { this.handleSubmit(e); }}\r\n                                        { if( e.keyCode !== 13 ){ this.sendTyping() }}\r\n                                        }\r\n                                    }\r\n                                    onChange = {\r\n                                    \t({target})=>{\r\n                                    \t\tthis.setState({newMessage:target.value})\r\n                                    \t}\r\n                                    }\r\n                                    />\r\n\r\n                                \r\n                                            {/*onClick = {() => this.toggleMicrophone()} */}\r\n                                        <IconButton  >\r\n                                        <MdMic onMouseDown= {() => {this.startRecording()}} onMouseUp= {() => {this.stopRecording()}} />\r\n                                        </IconButton>\r\n                            \r\n                                <button\r\n                                    disabled = { newMessage.length < 1 }\r\n                                    type = \"submit\"\r\n                                    className = \"send\"\r\n                                    onClick = { this.handleSubmit }\r\n                                > Send </button>\r\n                            </form>\r\n\t\t\t                </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                   \r\n                    <div className=\"sidebar-right\">\r\n                        <div className=\"title-right\">Members</div>\r\n                        <div className=\"chanels\">\r\n                            { members.map((member, index) => {\r\n\r\n                                const isOnline = _.get(member, 'online', false);\r\n                                return (\r\n                                    <div key ={ index } className=\"chanel\">\r\n\r\n                                        <div className=\"user-img-channel\">\r\n                                            <img src={_.get(member, 'avatar')} alt=\"user-img\" />\r\n                                            <span className={className('user-status', {'online': isOnline})}></span>\r\n                                        </div>\r\n                                        <div className=\"chanel-info\">\r\n                                            <h4>{ member.name }</h4>\r\n                                            <p>Joined: 2000 years ago</p>\r\n                                        </div>\r\n                                        <div onClick = {() => {\r\n                                            store.removeMemberFromChannel(activeChannel, member);\r\n                                        }}\r\n                                         className=\"icon-DelUser\">\r\n                                        <IconButton  style={{ color: \"rgb(200, 68, 20)\", fontSize: \"20\"}}>\r\n                                            <MdDeleteForever />\r\n                                        </IconButton>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <MainVideo />\r\n\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nconst apiURL = \"http://localhost:8080\";\r\nexport default class Service{\r\n    get(endpoint, options = null){\r\n        const url = `${apiURL}/${endpoint}`;\r\n        return axios.get(url, options);\r\n\r\n    }\r\n    post(endpoint = \"\", data = {}, options = {headers: {\r\n        'Content-Type': 'application/json',\r\n        'enctype': \"multipart/form-data\",\r\n}}){\r\n        const url = `${apiURL}/${endpoint}`;\r\n        return axios.post(url, data, options);\r\n    }\r\n}","import { OrderedMap } from \"immutable\";\r\nimport _ from 'lodash';\r\n\r\nexport default class Realtime{\r\n\r\n    constructor(store){\r\n        this.store = store;\r\n        this.ws = null;\r\n        this.isConnected = false;\r\n        this.connect();\r\n        this.reconnect();\r\n\r\n    }\r\n    reconnect(){\r\n        const store = this.store;\r\n        window.setInterval(() => {\r\n            const user = store.getCurrentUser();\r\n            if(user && !this.isConnected) {\r\n                this.connect();\r\n            }\r\n        }, 3000)\r\n    }\r\n    decoMessage(msg){\r\n        let message = {};\r\n        try{\r\n            message = JSON.parse(msg);\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        return message;\r\n    }\r\n    readMessage(msg){\r\n        const store = this.store;\r\n        const currentUser = store.getCurrentUser();\r\n        const currentUserId = _.toString(_.get(currentUser, '_id'));\r\n        const message = this.decoMessage(msg);\r\n        const action = _.get(message, 'action');\r\n        const payload = _.get(message, 'payload');\r\n\r\n        switch(action){\r\n            case 'typing_status':\r\n                console.log(payload);\r\n                const obj = _.get(payload, 'obj');\r\n                const channelId =  _.get(obj, 'channelId');\r\n                let typing = _.get(obj, 'payload');\r\n                let typier = _.get(obj, 'typier');\r\n                this.onUpdateTypestatus(channelId, typing, typier);\r\n                break;\r\n            case 'user_offline':\r\n                \r\n                this.onUpdateUserStatus(payload, false);\r\n                break;\r\n            case 'user_online':\r\n                const isOnline = true;\r\n                this.onUpdateUserStatus(payload, isOnline);\r\n                break;\r\n            case 'message_added':\r\n                \r\n                const activeChannel = store.getActiveChannel();\r\n                let notify = _.get(activeChannel, '_id') !== _.get(payload, 'channelId') && currentUserId !== _.get(payload, 'userId');\r\n                this.onAddMessage(payload, notify);\r\n\r\n            break;\r\n            default:\r\n                break;\r\n            case 'channel_added':\r\n                //to do check payload and insert new channel\r\n                this.onAddChannel(payload);\r\n                break;\r\n        }\r\n    }\r\n    onUpdateTypestatus(channelId, isTyping = false, typier){\r\n        const store = this.store;\r\n        store.channels = store.channels.update(channelId, (channel) => {\r\n            if(channel){\r\n                channel.typing = isTyping;\r\n                channel.typier = typier;\r\n            }\r\n            return channel;\r\n        });\r\n        store.update();\r\n    }\r\n\r\n    onUpdateUserStatus(userId, isOnline = false){\r\n        const store = this.store;\r\n    \r\n        store.users = store.users.update(userId, (user) => {\r\n            if(user){\r\n                user.online = isOnline;\r\n            }\r\n            \r\n            return user;\r\n        });\r\n        store.update();\r\n        \r\n    }\r\n\r\n    onAddMessage(payload, notify = false){\r\n        let user = _.get(payload, 'user');\r\n        const store = this.store;\r\n        const currentUser = store.getCurrentUser();\r\n        const currentUserId = _.toString(_.get(currentUser, '_id'));\r\n        \r\n        //add user to cache\r\n        user = store.addUserToCache(user);\r\n\r\n        const messageObject = {\r\n            _id: payload._id,\r\n            body: _.get(payload, 'body', ''),\r\n            userId: _.get(payload, 'userId'),\r\n            channelId: _.get(payload, 'channelId'),\r\n            created: _.get(payload, 'created', new Date()),\r\n            type: _.get(payload, 'type'),\r\n            me: currentUserId === _.toString(_.get(payload, 'userId')),\r\n            user: user,\r\n        };\r\n        console.log(\"Mess listen from fetch: \", messageObject);\r\n        store.setMessage(messageObject, notify);\r\n\r\n    }\r\n\r\n    onAddChannel(payload){\r\n        const store = this.store;\r\n        const channelId = `${payload._id}`;\r\n        const userId = `${payload.userId}`;\r\n        const users = _.get(payload, 'users', []);\r\n        let channel = { \r\n            \r\n            _id:channelId,  \r\n            title: _.get(payload, 'title', '' ),\r\n            lastMessage: _.get(payload, 'lastMessage', ''),\r\n            members: new OrderedMap(),\r\n            messages: new OrderedMap(),\r\n            isNew: false,\r\n            userId: userId,\r\n            created: new Date(),\r\n            typing: false,\r\n        };\r\n        _.each(users, (user) => {\r\n            //add this user to store.users collection\r\n            const memberId = `${user._id}`;\r\n            this.store.addUserToCache(user);\r\n            channel.members = channel.members.set(memberId, true);\r\n        });\r\n        const channelMessages = store.messages.filter((m) => _.toString(m.channelId) === channelId);\r\n        channelMessages.forEach((msg) => {\r\n            const msgId = _.toString(_.get(msg, '_id'));\r\n            channel.messages = channel.messages.set(msgId, true);\r\n        })\r\n        store.addChannel(channelId, channel);\r\n    }\r\n    send( msg = {}){\r\n        const isConnected = this.isConnected;\r\n        if(this.ws && isConnected){\r\n            const msgString = JSON.stringify(msg);\r\n            this.ws.send(msgString);\r\n        }\r\n    }\r\n    authentication(){\r\n        const store = this.store;\r\n        const tokenId = store.getUserTokenId();\r\n        const message = {\r\n            action: 'auth',\r\n            payload: `${tokenId}`\r\n        }\r\n            this.send(message);\r\n    }\r\n\r\n    connect(){\r\n\r\n        const ws = new WebSocket('ws://localhost:8080');\r\n        this.ws = ws;\r\n        ws.onopen = () => {\r\n            //tell to server who are you ?\r\n            this.isConnected = true;\r\n            this.authentication();\r\n            \r\n            ws.onmessage = (e) => {\r\n                this.readMessage(_.get(e, 'data',''));\r\n                console.log(\"Message from server: \", e.data);\r\n            }\r\n        }\r\n\r\n        ws.onclose = () => {\r\n            this.isConnected = false;\r\n            this.store.update();\r\n\r\n        }\r\n\r\n        ws.onerror = () => {\r\n            this.isConnected = false;\r\n            this.store.update();\r\n        }\r\n\r\n    }\r\n}","import { OrderedMap } from 'immutable';\r\nimport _ from 'lodash';\r\nimport Service from './service';\r\nimport Realtime from './realtime';\r\nimport moment from \"moment\";\r\nimport {ObjectID} from './helpers/objectid';\r\n\r\n\r\nexport default class Store {\r\n    constructor(appComponent){\r\n        this.app = appComponent;\r\n        this.service = new Service();\r\n        this.messages = new OrderedMap();\r\n        this.channels = new OrderedMap();\r\n        this.activeChannelId = null;\r\n\r\n        this.user = this.getUserFromLocalStorage();\r\n        this.token = this.getTokenFromLocalStorage();\r\n        this.users = new OrderedMap();\r\n\r\n        this.realtime = new Realtime(this);\r\n        this.fetchUserChannels();\r\n        this.search = {\r\n            users: new OrderedMap(),\r\n        }\r\n\r\n    }\r\n\r\n    upLoadfile(formData){\r\n        const userToken = this.getUserTokenId();\r\n\r\n        if(userToken){\r\n\r\n            this.service.post('api/messages/uploadfiles', formData).then((res) => {\r\n\r\n                console.log(res.data.success);\r\n                if(!res.data.success){\r\n                    console.log(res.data.error)\r\n                }\r\n                if (res.data.success) {\r\n                    const messageId = new ObjectID().toString();\r\n                    const channel = this.getActiveChannel();\r\n                    const channelId = _.get(channel , '_id', null);\r\n                    const currentUser = this.getCurrentUser();\r\n                    const message = {\r\n                        _id: messageId,\r\n                        channelId: channelId,\r\n                        body : res.data.url,\r\n                        userId: _.get(currentUser, '_id'),\r\n                        type:\"VideoOrImage\",\r\n                        me: true,\r\n                };\r\n                this.addMessage(messageId, message);\r\n\r\n            }\r\n            }).catch((err) => {\r\n                console.log(\"Send files Error: \", err);\r\n            });\r\n        }\r\n    \r\n       \r\n    }\r\n    fetchUserChannels(){\r\n        const userToken =this.getUserTokenId();\r\n        if(userToken){\r\n            const options = {\r\n                headers: {\r\n                    authorization: userToken,\r\n                }\r\n            }\r\n            this.service.get(`api/me/channels`, options).then((res) => {\r\n                const channels = res.data;\r\n                _.each(channels, (c) => {\r\n                    this.realtime.onAddChannel(c);\r\n                });\r\n\r\n                const firstChannelId = _.get(channels, '[0]._id', null);\r\n                this.fetchChannelMessages(firstChannelId);\r\n            }).catch((err) => {\r\n\r\n                console.log(\"An error fetch user channlels\", err);\r\n            })\r\n        }\r\n    }\r\n    addUserToCache(user){\r\n        user.avatar = this.loadUserAvatar(user);\r\n        const id = _.toString(user._id);\r\n        this.users = this.users.set(id, user);\r\n        return user;\r\n    }\r\n\r\n    getUserTokenId(){\r\n        return _.get(this.token, '_id', null);\r\n    }\r\n    loadUserAvatar(user){\r\n\r\n            return `https://api.adorable.io/avatars/100/${user._id}.png`\r\n       \r\n    }\r\n    startSearchUsers(q = \"\"){\r\n        this.search.users = this.search.users.clear();\r\n        //query to backend server and get list of users\r\n        const data = {search : q};\r\n        \r\n        this.service.post('api/users/search', data).then((res) => {\r\n            //list off users match\r\n            const users = _.get(res, 'data', []);\r\n            // console.log(\"Get from server: \", users);\r\n            _.each(users, (user) => {\r\n               //cache to this.users\r\n               //add user to this.search.users\r\n               user.avatar = this.loadUserAvatar(user);\r\n               const userId = `${user._id}`;\r\n               this.users = this.users.set(userId, user);\r\n               this.search.users = this.search.users.set(userId, user);\r\n\r\n           });\r\n           this.update();\r\n\r\n        }).catch((err) => {\r\n            console.log(\" searching error\", err);\r\n        }); \r\n    }\r\n\r\n\r\n    setUserToken(accessToken){\r\n        if(!accessToken){\r\n            this.localStorage.removeItem('token');\r\n            this.token = null;\r\n            return;\r\n        }\r\n        this.token = accessToken;\r\n        localStorage.setItem('token', JSON.stringify(accessToken));\r\n    }\r\n    clearCacheData(){\r\n        this.channels = this.channels.clear();\r\n        this.users = this.users.clear();\r\n        this.messages = this.messages.clear();\r\n    }\r\n    signOut(){\r\n\r\n        const userId = _.toString(_.get(this.user, '_id', null));\r\n        //request server and logout this user\r\n        const tokenId = _.get(this.token, '_id', null);\r\n\r\n        const options = {\r\n            headers : {\r\n                authorization: tokenId\r\n            }\r\n        }\r\n        this.service.get('api/user/logout', options);\r\n        this.isConnected();\r\n        this.user = null;\r\n        localStorage.removeItem('me');\r\n        localStorage.removeItem('token');\r\n        if(userId){\r\n            this.users = this.users.remove(userId);\r\n        }\r\n        this.clearCacheData();\r\n        this.update();\r\n    }\r\n\r\n    getTokenFromLocalStorage(){\r\n\r\n        if(this.token){\r\n            return this.token;\r\n        }\r\n\r\n        let token = null;\r\n        const data = localStorage.getItem('token');\r\n        if(data){\r\n            try{\r\n                token = JSON.parse(data);\r\n            }\r\n            catch (err){\r\n                console.log(err);\r\n            }\r\n            \r\n        }\r\n        return token;\r\n    }\r\n\r\n    getUserFromLocalStorage(){\r\n\r\n        let user = null;\r\n        const data = localStorage.getItem('me');\r\n         try {\r\n                user = JSON.parse(data);\r\n         }\r\n         catch(err) {\r\n             console.log(err);\r\n         }\r\n         if(user){\r\n            //connect to backend server verify this user\r\n            const token = this.getTokenFromLocalStorage();\r\n            const tokenId = _.get(token, '_id');\r\n            const options = {\r\n                headers: {\r\n                    authorization: tokenId,\r\n                }\r\n            }\r\n            \r\n            this.service.get('api/users/me', options).then((res) => {\r\n                //user login with token id\r\n                const accessToken = res.data;\r\n                const user = _.get(accessToken, 'user');\r\n\r\n                this.setCurrentUser(user);\r\n                this.setUserToken(accessToken);\r\n\r\n            }).catch(err => {\r\n                this.signOut();\r\n            });\r\n        }\r\n\r\n         return user;\r\n    }    \r\n        \r\n    \r\n    setCurrentUser(user){\r\n        user.avatar = this.loadUserAvatar(user);\r\n        this.user = user;\r\n        if(user){\r\n            \r\n            localStorage.setItem('me', JSON.stringify(user));\r\n            //save to local store\r\n            const userId =`${user._id}`;\r\n            this.users = this.users.set(userId, user);\r\n\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    register(user){\r\n        return new Promise((resolve, reject) => {\r\n            this.service.post('api/users', user).then((user) =>{\r\n                console.log(\"Account Created \", user);\r\n                return resolve(user);\r\n            }).catch((err) => {\r\n\r\n                return reject(\"An Error create your account!\");\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    login(email = null, password = null){\r\n\r\n        const userEmail = _.toLower(email);\r\n        const user = {\r\n            email: userEmail,\r\n            password: password,\r\n        }\r\n        console.log(\"Logining with: \", user);\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this.service.post('api/users/login', user).then((res) => {\r\n                //that mean successful login\r\n                const accessToken = _.get(res, 'data'); \r\n                const user = _.get(accessToken, 'user');\r\n\r\n                this.setCurrentUser(user);\r\n                this.setUserToken(accessToken);\r\n                this.realtime.connect();\r\n\r\n                // begin fetch user's channel\r\n                this.fetchUserChannels();\r\n                //Call to realtime and connect again to socket server with this user\r\n                \r\n\r\n\r\n\r\n\r\n            }).catch((err) => {\r\n                \r\n                const message = _.get(err, 'res.data.err.message', 'Login Error');\r\n                return reject(message);\r\n            })\r\n        });\r\n        // const _this = this;\r\n        // return new Promise((resolve, reject) => {\r\n        //     const user = users.find((user) => user.email === userEmail);\r\n        //     if( user ) {\r\n        //         _this.setCurrentUser(user);\r\n        //     }\r\n        //     return user ? resolve(user) : reject(\"User not found!\")\r\n        // });\r\n    }\r\n\r\n    addUserToChannel(channelId, userId) {\r\n        const channel = this.channels.get(channelId);\r\n        if(channel) {\r\n            channel.members = channel.members.set(userId, true);\r\n            this.channels = this.channels.set(channelId, channel);\r\n            this.update();\r\n        }\r\n      \r\n    }\r\n    getSearchUsers(){\r\n        // const keyword = _.toLower(search);\r\n\r\n        // let searchItems = new OrderedMap();\r\n        // const currentUser =this.getCurrentUser();\r\n        // const currentUserId = _.get(currentUser, '_id');\r\n       \r\n        // if(_.trim(search).length){\r\n        //    searchItems = users.filter((user) =>_.get(user, '_id') !== currentUserId && _.includes(_.toLower(_.get(user, 'name')), keyword));\r\n        // }\r\n\r\n        return this.search.users.valueSeq();\r\n    }\r\n\r\n    onCreateNewChannel(channel = {}){\r\n        const channelId = _.get(channel, \"_id\");\r\n        this.addChannel(channelId, channel );\r\n        this.setActiveChannelId(channelId);\r\n    \r\n    }\r\n\r\n    getCurrentUser(){\r\n        return this.user;\r\n    }\r\n\r\n    fetchChannelMessages(channelId){\r\n\r\n        let channel = this.channels.get(channelId);\r\n            if( channel && !_.get(channel, 'isFetchMessages')){\r\n\r\n                const token = _.get(this.token, '_id');\r\n                const options = {\r\n                    headers: {\r\n                        authorization: token,\r\n                    }\r\n                }\r\n\r\n                this.service.get(`api/channels/${channelId}/messages`, options).then((res) => {\r\n                    channel.isFetchMessages = true;\r\n\r\n                    const messages = res.data;\r\n                \r\n                    _.each(messages, (message) => {\r\n                        this.realtime.onAddMessage(message);\r\n                    });\r\n                    this.channels = this.channels.set(channelId, channel);\r\n\r\n                }).catch((err) => {\r\n                    console.log(\"An error fetching channel 's messages\", err);\r\n\r\n                }\r\n            )}\r\n        }   \r\n    \r\n\r\n    isConnected(){\r\n        return this.realtime.isConnected;\r\n    }\r\n\r\n    setActiveChannelId(id) {\r\n        this.activeChannelId = id;\r\n        this.fetchChannelMessages(id);\r\n        this.update();\r\n    }\r\n    getActiveChannel(){\r\n        const channel = this.activeChannelId ? this.channels.get(this.activeChannelId) : this.channels.first();\r\n        return channel;\r\n    }\r\n\r\n    setMessage(message, notify = false){\r\n        const id = _.toString(_.get(message, '_id'));\r\n        this.messages = this.messages.set(id, message);\r\n        const channelId = _.toString(message.channelId);\r\n        const channel = this.channels.get(channelId);\r\n\r\n        if (channel) {\r\n            channel.messages = channel.messages.set(id, true);\r\n            channel.lastMessage = _.get(message, 'body', '');\r\n            channel.notify = notify;\r\n\r\n            this.channels = this.channels.set(channelId, channel);\r\n        } else {\r\n\r\n            // fetch to the server with channel info\r\n            this.service.get(`api/channels/${channelId}`).then((response) => {\r\n\r\n\r\n                const channel = _.get(response, 'data');\r\n\r\n                /*const users = _.get(channel, 'users');\r\n                _.each(users, (user) => {\r\n\r\n                    this.addUserToCache(user);\r\n                });*/\r\n\r\n                this.realtime.onAddChannel(channel);\r\n\r\n\r\n            })\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    addTyping(channel, typing = false){\r\n        \r\n        if(channel){\r\n            const userId = `${_.get(this.user, '_id', null)}`;\r\n            const channelId = _.get(channel, '_id');\r\n            const obj = {\r\n                channelId: channelId,\r\n                payload: typing,\r\n                typier: userId,\r\n            }\r\n            console.log(\"channel typing: \", channelId);\r\n            this.realtime.send(\r\n                {\r\n                    action: 'typing_status',\r\n                    payload: {obj},\r\n                }\r\n            );\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    addMessage(id, message = {}){\r\n\r\n        const user = this.getCurrentUser();\r\n        message.user = user;\r\n        this.messages = this.messages.set(id, message);\r\n        //add new message to \r\n        const channelId = _.get(message, 'channelId');\r\n        if(channelId){\r\n\r\n            \r\n            let channel = this.channels.get(channelId);\r\n\r\n            channel.lastMessage = _.get(message, 'body', '');\r\n            //now i send this channel to the server\r\n            \r\n           this.realtime.send(\r\n               {\r\n                    action: 'create_channel',\r\n                    payload: channel,\r\n                }\r\n            );\r\n            // send to the via websocket to create new message and notify other\r\n            this.realtime.send(\r\n                {\r\n                    action: 'create_message',\r\n                    payload: message,\r\n                }\r\n            );\r\n\r\n            channel.messages = channel.messages.set(id, true);\r\n\r\n\r\n            channel.isNew = false;\r\n            this.channels = this.channels.set(channelId, channel);\r\n        }\r\n        this.update();\r\n    }\r\n\r\n    removeMemberFromChannel( channel = null, user = null){\r\n        if(!channel || !user ){\r\n            return;\r\n        }\r\n        const channelId = _.get(channel, '_id')\r\n        const userId = _.get(user, '_id');\r\n        channel.members = channel.members.remove(userId);\r\n        this.channels = this.channels.set(channelId, channel);\r\n        this.update();\r\n    }\r\n\r\n    getMessages(){\r\n        return this.messages.valueSeq();\r\n    }\r\n    getMessagesFromChannel(channel){\r\n        let messages = new OrderedMap();\r\n\r\n        if(channel){\r\n            channel.messages.forEach((value, key) => {\r\n\r\n                const message = this.messages.get(key);\r\n                messages = messages.set( key, message);\r\n    \r\n            });\r\n        }\r\n        return messages.valueSeq();\r\n        \r\n    }\r\n\r\n    getMembersFromChannel(channel){\r\n        let members = new OrderedMap();\r\n        if(channel){\r\n            channel.members.forEach((value, key) => {\r\n\r\n                const userId = `${key}`\r\n                const user = this.users.get(userId);\r\n                // console.log(\"User from Channel: \", user);\r\n                const loggedUser = this.getCurrentUser();\r\n                if( _.get(loggedUser, '_id') !== _.get(user, '_id')){\r\n                    members = members.set(key, user);\r\n                   \r\n                }\r\n            });\r\n               \r\n        }\r\n        return members.valueSeq();\r\n    }\r\n\r\n\r\n    addChannel(index, channel = {}){\r\n        this.channels = this.channels.set(`${index}`, channel);\r\n        // console.log(channel);\r\n        // console.log(\"Mess get from server to client: \", channel);\r\n        this.update();\r\n    }\r\n\r\n    getChannels(){\r\n        this.channels = this.channels.sort((a, b) => a.updated - b.updated);\r\n        return this.channels.valueSeq();\r\n    }\r\n    update(){\r\n        this.app.forceUpdate();\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport App3 from '../components/App3';\r\nimport Store from '../store';\r\nimport { Reconnect } from \"./Reconnect\";\r\n\r\nexport default class Page3 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            store: new Store(this),\r\n        }\r\n    }\r\n    render(){\r\n        const { store } = this.state;\r\n        const isConnected = store.isConnected();\r\n        // const me = store.getCurrentUser();\r\n        return (\r\n            <App3 store = { store } />\r\n        )\r\n       \r\n            \r\n        }\r\n   \r\n}\r\n","import React, { Component } from 'react';\r\nimport Hero from \"../components/Hero\";\r\nimport {Link} from 'react-router-dom';\r\nimport Banner from '../components/Banner';\r\n\r\n\r\nexport class Reconnect extends Component {\r\n\t render() {\r\n\t \treturn(\r\n \t\t\t\t<Hero>\r\n \t\t\t\t\t<Banner title='503' subtitle=\"Waitting for Reconnect to Server\">\r\n \t\t\t\t\t\t<Link to='/home' className=\"btn-primary\">\r\n \t\t\t\t\t\t\tReturn Home\r\n \t\t\t\t\t\t</Link>\r\n \t\t\t\t\t </Banner>\r\n \t\t\t\t </Hero>\r\n\t \t\t);\r\n\t }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport './style.css';\n\nimport Home from \"./pages/Home\";\nimport Errors from \"./pages/Error\";\nimport {Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Page1 from './pages/Page1';\nimport Page2 from './pages/Page2';\nimport AuthWrapper from \"./pages/AuthWrapper\";\nimport PrivateRoute from \"./pages/PrivateRoute\";\nimport Login from './pages/Login';\nimport Page3 from './pages/Page3';\n\n\nclass App extends Component {\n\t render() {\n\t \treturn(\n\t\t\t<AuthWrapper>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute path=\"/\" exact={true}>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t{/* <Route exact path=\"/home\" component={Home}/> */}\n\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t<Route path=\"/page1\">\n\t\t\t\t\t\t<Page2/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/page2\">\n\t\t\t\t\t\t<Page1/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/page3\">\n\t\t\t\t\t\t<Page3/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login/>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route component={Errors} />\n\t\t\t\t</Switch>\n\t\t\t</AuthWrapper>\n\n  );\n\t}\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n     <Auth0Provider\n      domain=\"ndscoop.us.auth0.com\"\n      clientId=\"VjJpWQ2c7EELPIisJatPwQMM4Mh1DjsR\"\n      redirectUri={window.location.origin}\n    >\n        \n          <App />\n        \n    </Auth0Provider>\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Dexie from \"dexie\";\r\nimport \"dexie-observable\";\r\nimport { promised } from \"q\";\r\nimport { promises } from \"fs\";\r\n\r\n// Define your database\r\nexport const db = new Dexie(\"Song_Database\");\r\n\r\n// create new databse\r\n// our schema is of storing a song\r\ndb.version(1).stores({\r\n  songs:\r\n    \"&videoId, timestamp, playbackTimes, [rating+timestamp], [downloadState+timestamp]\"\r\n});\r\n\r\ndb.version(2).stores({});\r\n\r\n// add or update song on play\r\nexport const updatePlayingSong = async data => {\r\n  const videoObj = {\r\n    videoId: data.id,\r\n    timestamp: Date.now(),\r\n    title: data.title,\r\n    channelTitle: data.channelTitle,\r\n    playbackTimes: 1\r\n  };\r\n\r\n  const song = await db.songs.get({ videoId: data.id });\r\n  // if song exists we will just update the timestamp and the playback\r\n  if (song) {\r\n    db.songs.update(data.id, {\r\n      timestamp: Date.now(),\r\n      playbackTimes: song.playbackTimes + 1\r\n    });\r\n    console.log(\"song updated\");\r\n    return song.rating;\r\n    // return the rating\r\n  } else {\r\n    // we will add a new song\r\n    console.log(\"song added\");\r\n    db.songs.add(videoObj);\r\n  }\r\n};\r\n\r\n// like or dislike a song on database\r\nexport const rateSong = async (id, rating) => {\r\n  // if user likes the song then only download it\r\n\r\n  db.songs.update(id, {\r\n    rating: rating\r\n  });\r\n};\r\n\r\nexport const getHistory = async () => {\r\n  const songsByTimeStamp = await db.songs\r\n    .orderBy(\"timestamp\")\r\n    .limit(500)\r\n    .reverse()\r\n    .toArray();\r\n  return songsByTimeStamp;\r\n};\r\n\r\nexport const getLikedSongs = async () => {\r\n  const likedSongs = await db.songs\r\n    .where(\"[rating+timestamp]\") //this will filter song based on time and liked\r\n    .between([\"liked\", Dexie.minKey], [\"liked\", Dexie.maxKey])\r\n    .reverse()\r\n    .toArray();\r\n  return likedSongs;\r\n};\r\n\r\nexport const getDownloadedSongs = async () => {\r\n  const downloadedSongs = await db.songs\r\n    .where(\"[downloadState+timestamp]\") //this will filter song based on time and downloaded\r\n    .between([\"downloaded\", Dexie.minKey], [\"downloaded\", Dexie.maxKey])\r\n    .reverse()\r\n    .toArray();\r\n  return downloadedSongs;\r\n};\r\n\r\nexport const removeDownloadingState = async () => {\r\n  // find all the downloadState which is downloading and remove that\r\n  const songs = await db.songs\r\n    .where(\"[downloadState+timestamp]\")\r\n    .between([\"downloading\", Dexie.minKey], [\"downloading\", Dexie.maxKey])\r\n    .modify(x => {\r\n      delete x.downloadState;\r\n    });\r\n  console.log(songs);\r\n};\r\n\r\nexport const downloadSong = async (id, url) => {\r\n  try {\r\n    db.songs.update(id, {\r\n      downloadState: \"downloading\"\r\n    });\r\n    const thumbURL = `https://i.ytimg.com/vi/${id}/hqdefault.jpg`;\r\n    const [thumbnailBlob, songBlob] = await Promise.all([\r\n      fetchProxiedBlob(thumbURL),\r\n      fetchProxiedBlob(url)\r\n    ]);\r\n    db.songs.update(id, {\r\n      downloadState: \"downloaded\",\r\n      thumbnail: thumbnailBlob,\r\n      audio: songBlob\r\n    });\r\n    return \"downloaded\";\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deleteSongAudio = async id => {\r\n  await db.songs.where({ videoId: id }).modify(x => {\r\n    delete x.audio;\r\n    delete x.downloadState;\r\n  });\r\n  return \"song deleted\";\r\n};\r\n\r\nfunction fetchProxiedBlob(url) {\r\n  const URL = url;\r\n  return new Promise(function(resolve, reject) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"https://server.ylight.xyz/proxy/\" + URL);\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function() {\r\n      var status = xhr.status;\r\n      if (status >= 200 && status < 300) {\r\n        resolve(xhr.response);\r\n      } else {\r\n        reject({\r\n          status: status,\r\n          statusText: xhr.statusText\r\n        });\r\n      }\r\n    };\r\n    xhr.send();\r\n    setTimeout(() => {\r\n      xhr.abort();\r\n      xhr.open(\"GET\", \"https://server.ylight.xyz/proxy/\" + URL);\r\n\r\n      xhr.send();\r\n    }, 1000);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport Datetime1 from './Datetime1';\r\nimport styled from 'styled-components';\r\n\r\n//const RoomContext = React.createCo\r\nconst Banner = ({children, title, subtitle}) => {\r\n\t \treturn(\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<div className=\"banner\">\r\n\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t\t<Datetime1 />\r\n\t\t\t\t\t<p>{subtitle}</p>\r\n\t\t\t\t\t{children}\r\n\t \t\t\t</div>\r\n\t\t\t</Wrapper>\r\n\t \t\t);\r\n\r\n\t};\r\n\t\r\n\tconst Wrapper = styled.section`\r\n\tp{\r\n\t\tmargin-top:2rem;\r\n\t\t\t}\r\n\t`;\r\n\r\nexport default Banner","import React from 'react';\r\n\r\nexport default function Hero({children, hero }) {\r\n\t \treturn(\r\n \t\t\t\t<header className={hero}>{children}</header>);\r\n\r\n}\r\nHero.defaultProps = {\r\n\thero: \"defaultHero\"\r\n};","module.exports = __webpack_public_path__ + \"static/media/logoSvg.e510bd00.svg\";","/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xffffff, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Check if buffer exists\ntry {\n    if (Buffer && Buffer.from) var hasBufferType = true;\n} catch (err) {\n    hasBufferType = false;\n}\n\n/**\n * Create a new ObjectID instance\n *\n * @class\n * @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n * @property {number} generationTime The generation time of this ObjectId instance\n * @return {ObjectID} instance of ObjectID.\n */\nvar ObjectID = function ObjectID(id) {\n    // Duck-typing to support ObjectId from different npm packages\n    if (id instanceof ObjectID) return id;\n    if (!(this instanceof ObjectID)) return new ObjectID(id);\n\n    this._bsontype = 'ObjectID';\n\n    // The most common usecase (blank id, new objectId instance)\n    if (id == null || typeof id === 'number') {\n        // Generate a new id\n        this.id = this.generate(id);\n        // If we are caching the hex string\n        if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n        // Return the object\n        return;\n    }\n\n    // Check if the passed in id is valid\n    var valid = ObjectID.isValid(id);\n\n    // Throw an error if it's not a valid setup\n    if (!valid && id != null) {\n        throw new Error(\n            'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n        );\n    } else if (valid && typeof id === 'string' && id.length === 24 && hasBufferType) {\n        return new ObjectID(new Buffer(id, 'hex'));\n    } else if (valid && typeof id === 'string' && id.length === 24) {\n        return ObjectID.createFromHexString(id);\n    } else if (id != null && id.length === 12) {\n        // assume 12 byte string\n        this.id = id;\n    } else if (id != null && id.toHexString) {\n        // Duck-typing to support ObjectId from different npm packages\n        return id;\n    } else {\n        throw new Error(\n            'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n        );\n    }\n\n    if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n};\n\n// Allow usage of ObjectId as well as ObjectID\n// var ObjectId = ObjectID;\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n    hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n/**\n * Return the ObjectID id as a 24 byte hex string representation\n *\n * @method\n * @return {string} return the 24 byte hex string representation.\n */\nObjectID.prototype.toHexString = function() {\n    if (ObjectID.cacheHexString && this.__id) return this.__id;\n\n    var hexString = '';\n    if (!this.id || !this.id.length) {\n        throw new Error(\n            'invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' +\n            JSON.stringify(this.id) +\n            ']'\n        );\n    }\n\n    if (this.id instanceof _Buffer) {\n        hexString = convertToHex(this.id);\n        if (ObjectID.cacheHexString) this.__id = hexString;\n        return hexString;\n    }\n\n    for (var i = 0; i < this.id.length; i++) {\n        hexString += hexTable[this.id.charCodeAt(i)];\n    }\n\n    if (ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n};\n\n/**\n * Update the ObjectID index used in generating new ObjectID's on the driver\n *\n * @method\n * @return {number} returns next index value.\n * @ignore\n */\nObjectID.prototype.get_inc = function() {\n    return (ObjectID.index = (ObjectID.index + 1) % 0xffffff);\n};\n\n/**\n * Update the ObjectID index used in generating new ObjectID's on the driver\n *\n * @method\n * @return {number} returns next index value.\n * @ignore\n */\nObjectID.prototype.getInc = function() {\n    return this.get_inc();\n};\n\n/**\n * Generate a 12 byte id buffer used in ObjectID's\n *\n * @method\n * @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n * @return {Buffer} return the 12 byte id buffer string.\n */\nObjectID.prototype.generate = function(time) {\n    if ('number' !== typeof time) {\n        time = ~~(Date.now() / 1000);\n    }\n\n    // Use pid\n    var pid =\n        (typeof process === 'undefined' || process.pid === 1\n            ? Math.floor(Math.random() * 100000)\n            : process.pid) % 0xffff;\n    var inc = this.get_inc();\n    // Buffer used\n    var buffer = new Buffer(12);\n    // Encode time\n    buffer[3] = time & 0xff;\n    buffer[2] = (time >> 8) & 0xff;\n    buffer[1] = (time >> 16) & 0xff;\n    buffer[0] = (time >> 24) & 0xff;\n    // Encode machine\n    buffer[6] = MACHINE_ID & 0xff;\n    buffer[5] = (MACHINE_ID >> 8) & 0xff;\n    buffer[4] = (MACHINE_ID >> 16) & 0xff;\n    // Encode pid\n    buffer[8] = pid & 0xff;\n    buffer[7] = (pid >> 8) & 0xff;\n    // Encode index\n    buffer[11] = inc & 0xff;\n    buffer[10] = (inc >> 8) & 0xff;\n    buffer[9] = (inc >> 16) & 0xff;\n    // Return the buffer\n    return buffer;\n};\n\n/**\n * Converts the id into a 24 byte hex string for printing\n *\n * @param {String} format The Buffer toString format parameter.\n * @return {String} return the 24 byte hex string representation.\n * @ignore\n */\nObjectID.prototype.toString = function(format) {\n    // Is the id a buffer then use the buffer toString method to return the format\n    if (this.id && this.id.copy) {\n        return this.id.toString(typeof format === 'string' ? format : 'hex');\n    }\n\n    // if(this.buffer )\n    return this.toHexString();\n};\n\n/**\n * Converts to a string representation of this Id.\n *\n * @return {String} return the 24 byte hex string representation.\n * @ignore\n */\nObjectID.prototype.inspect = ObjectID.prototype.toString;\n\n/**\n * Converts to its JSON representation.\n *\n * @return {String} return the 24 byte hex string representation.\n * @ignore\n */\nObjectID.prototype.toJSON = function() {\n    return this.toHexString();\n};\n\n/**\n * Compares the equality of this ObjectID with `otherID`.\n *\n * @method\n * @param {object} otherID ObjectID instance to compare against.\n * @return {boolean} the result of comparing two ObjectID's\n */\nObjectID.prototype.equals = function equals(otherId) {\n    // var id;\n\n    if (otherId instanceof ObjectID) {\n        return this.toString() === otherId.toString();\n    } else if (\n        typeof otherId === 'string' &&\n        ObjectID.isValid(otherId) &&\n        otherId.length === 12 &&\n        this.id instanceof _Buffer\n    ) {\n        return otherId === this.id.toString('binary');\n    } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 24) {\n        return otherId.toLowerCase() === this.toHexString();\n    } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 12) {\n        return otherId === this.id;\n    } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n        return otherId.toHexString() === this.toHexString();\n    } else {\n        return false;\n    }\n};\n\n/**\n * Returns the generation date (accurate up to the second) that this ID was generated.\n *\n * @method\n * @return {date} the generation date\n */\nObjectID.prototype.getTimestamp = function() {\n    var timestamp = new Date();\n    var time = this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n    timestamp.setTime(Math.floor(time) * 1000);\n    return timestamp;\n};\n\n/**\n * @ignore\n */\nObjectID.index = ~~(Math.random() * 0xffffff);\n\n/**\n * @ignore\n */\nObjectID.createPk = function createPk() {\n    return new ObjectID();\n};\n\n/**\n * Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n *\n * @method\n * @param {number} time an integer number representing a number of seconds.\n * @return {ObjectID} return the created ObjectID\n */\nObjectID.createFromTime = function createFromTime(time) {\n    var buffer = new Buffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    // Encode time into first 4 bytes\n    buffer[3] = time & 0xff;\n    buffer[2] = (time >> 8) & 0xff;\n    buffer[1] = (time >> 16) & 0xff;\n    buffer[0] = (time >> 24) & 0xff;\n    // Return the new objectId\n    return new ObjectID(buffer);\n};\n\n// Lookup tables\n//var encodeLookup = '0123456789abcdef'.split('');\nvar decodeLookup = [];\ni = 0;\nwhile (i < 10) decodeLookup[0x30 + i] = i++;\nwhile (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\nvar _Buffer = Buffer;\nvar convertToHex = function(bytes) {\n    return bytes.toString('hex');\n};\n\n/**\n * Creates an ObjectID from a hex string representation of an ObjectID.\n *\n * @method\n * @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.\n * @return {ObjectID} return the created ObjectID\n */\nObjectID.createFromHexString = function createFromHexString(string) {\n    // Throw an error if it's not a valid setup\n    if (typeof string === 'undefined' || (string != null && string.length !== 24)) {\n        throw new Error(\n            'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n        );\n    }\n\n    // Use Buffer.from method if available\n    if (hasBufferType) return new ObjectID(new Buffer(string, 'hex'));\n\n    // Calculate lengths\n    var array = new _Buffer(12);\n    var n = 0;\n    var i = 0;\n\n    while (i < 24) {\n        array[n++] = (decodeLookup[string.charCodeAt(i++)] << 4) | decodeLookup[string.charCodeAt(i++)];\n    }\n\n    return new ObjectID(array);\n};\n\n/**\n * Checks if a value is a valid bson ObjectId\n *\n * @method\n * @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n */\nObjectID.isValid = function isValid(id) {\n    if (id == null) return false;\n\n    if (typeof id === 'number') {\n        return true;\n    }\n\n    if (typeof id === 'string') {\n        return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n    }\n\n    if (id instanceof ObjectID) {\n        return true;\n    }\n\n    if (id instanceof _Buffer) {\n        return true;\n    }\n\n    // Duck-Typing detection of ObjectId like objects\n    if (id.toHexString) {\n        return id.id.length === 12 || (id.id.length === 24 && checkForHexRegExp.test(id.id));\n    }\n\n    return false;\n};\n\n/**\n * @ignore\n */\nObject.defineProperty(ObjectID.prototype, 'generationTime', {\n    enumerable: true,\n    get: function() {\n        return this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n    },\n    set: function(value) {\n        // Encode time into first 4 bytes\n        this.id[3] = value & 0xff;\n        this.id[2] = (value >> 8) & 0xff;\n        this.id[1] = (value >> 16) & 0xff;\n        this.id[0] = (value >> 24) & 0xff;\n    }\n});\n\n/**\n * Expose.\n */\nmodule.exports = ObjectID;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.ObjectId = ObjectID;","import axios from \"axios\";\n\n// put your api keys in .env file you can get those here - https://developers.google.com/youtube/v3/getting-started\nexport const selectRandomKey = () => {\n  const keys = process.env.REACT_APP_YouTube_Keys.split(\" \"); //we are splitting the api keys to make an array\n  const random = Math.floor(Math.random() * Math.floor(keys.length)); //this will get a random number\n  return keys[random];\n};\n\nexport default axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: {\n    part: \"snippet\",\n    videoCategoryId: \"10\",\n    type: \"video\",\n    key: selectRandomKey()\n  }\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://server.ylight.xyz',\n  // baseURL: 'https://ylight.glitch.me',\n});\n"],"sourceRoot":""}